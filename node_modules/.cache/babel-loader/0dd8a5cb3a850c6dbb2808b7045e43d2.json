{"ast":null,"code":"var _jsxFileName = \"/home/fabricio7p/Documents/Projects/Ikebana/front/src/components/pages/Account/components/EditAccount/EditAccount.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport api from 'services/api';\nimport { useForm } from 'react-hook-form';\nimport Modal from '../../../../aux/Modal';\nimport ErrorDialog from '../../../../aux/ErrorDialog/ErrorDialog';\nimport './styles.scss';\nexport default function EditAccount() {\n  const {\n    register,\n    handleSubmit,\n    errors,\n    watch\n  } = useForm();\n  const authKey = useSelector(state => state.auth.keys);\n  const userData = useSelector(state => state.account.userData[0]);\n  const [filePayload, setFilePayload] = useState(false);\n  const [inputFile, setInputFile] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [data, setData] = useState(false);\n\n  const handleInputChange = e => {\n    const file = e.target.files[0];\n\n    if (!file) {\n      setError('Selecione alguma foto');\n      return void 0;\n    }\n\n    if ((file.size / 1024 / 1024).toFixed() > 5) {\n      setError('Selecione um arquivo menor que 5MB');\n      return void 0;\n    }\n\n    if (!['image/png', 'image/jpeg'].includes(file.type)) {\n      setError('Formato invÃ¡lido, selecione apenas imagens JPG ou PNG');\n      return void 0;\n    }\n\n    setInputFile(URL.createObjectURL(e.target.files[0]));\n    setFilePayload(file);\n  };\n\n  const onSubmit = async ({\n    fullname,\n    bio\n  }) => {\n    setLoading(true);\n    const formData = new FormData();\n\n    try {\n      formData.append('file', filePayload);\n      formData.append('fullname', fullname);\n      formData.append('bio', bio);\n      const response = await api({\n        method: 'post',\n        url: '/user',\n        headers: {\n          'Authorization': `Bearer ${authKey[0].key}`,\n          'Content-Type': 'multipart/form-data'\n        },\n        data: formData\n      });\n      response.data.response && alert('Dados atualizados');\n      window.location.reload();\n    } catch (e) {\n      window.location.pathname = '/refresh';\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    setData(userData);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"edit__header--title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, \"Editar informa\\xE7\\xF5es pessoais.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit__inputs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"edit__inputs--desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, \"Informa\\xE7\\xF5es p\\xFAblicas da conta.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit__inputs--container acc-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"input-label acc-field__title\",\n    htmlFor: \"picture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"edit__inputs--picture\",\n    src: !inputFile ? data.picture : inputFile,\n    alt: \"profile picture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    ref: register(),\n    onChange: handleInputChange,\n    className: \"account-input img-input\",\n    name: \"picture\",\n    id: \"picture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit__inputs--container acc-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"fullname\",\n    className: \"input-label acc-field__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, \"Nome Completo\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    ref: register({\n      required: true\n    }),\n    className: \"account-input\",\n    defaultValue: data.fullname,\n    name: \"fullname\",\n    id: \"fullname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit__inputs--container acc-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    className: \"input-label acc-field__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }, \"E-mail\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    ref: register({\n      required: true\n    }),\n    className: \"account-input email\",\n    value: data.email,\n    name: \"email\",\n    id: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit__inputs--container acc-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"bio\",\n    className: \"input-label acc-field__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 29\n    }\n  }, \"Biografia\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"account-input\",\n    name: \"bio\",\n    ref: register(),\n    defaultValue: data.bio !== '' ? data.bio : null,\n    placeholder: \"Fa\\xE7a uma breve descri\\xE7\\xE3o sobre voc\\xEA e sua experi\\xEAncia com Ikebana\",\n    id: \"bio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"app-btn btn-filled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, loading === true ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sizer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 52\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"lds-ellipsis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 63\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 52\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 63\n    }\n  }))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 33\n    }\n  }, userData.isPartner === true ? 'Atualizar' : 'Concluir'))))), error && /*#__PURE__*/React.createElement(Modal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ErrorDialog, {\n    value: error,\n    handler: () => {\n      setError(false);\n      window.location.reload();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  })));\n}","map":{"version":3,"sources":["/home/fabricio7p/Documents/Projects/Ikebana/front/src/components/pages/Account/components/EditAccount/EditAccount.js"],"names":["React","useState","useEffect","useDispatch","useSelector","api","useForm","Modal","ErrorDialog","EditAccount","register","handleSubmit","errors","watch","authKey","state","auth","keys","userData","account","filePayload","setFilePayload","inputFile","setInputFile","loading","setLoading","error","setError","data","setData","handleInputChange","e","file","target","files","size","toFixed","includes","type","URL","createObjectURL","onSubmit","fullname","bio","formData","FormData","append","response","method","url","headers","key","alert","window","location","reload","pathname","picture","required","email","isPartner"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport api from 'services/api'\nimport { useForm } from 'react-hook-form';\n\nimport Modal from '../../../../aux/Modal';\nimport ErrorDialog from '../../../../aux/ErrorDialog/ErrorDialog';\n\nimport './styles.scss';\n\nexport default function EditAccount() {\n    const { register, handleSubmit, errors, watch } = useForm();\n    const authKey = useSelector(state => state.auth.keys)\n    const userData = useSelector(state => state.account.userData[0])\n    \n    const [filePayload, setFilePayload] = useState(false);\n    const [inputFile, setInputFile] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [data, setData] = useState(false)\n\n    const handleInputChange = (e) => {\n        const file = e.target.files[0]\n\n        if (!file) {\n            setError('Selecione alguma foto')\n            return void 0\n        }\n        \n        if (((file.size/1024)/1024).toFixed() > 5) {\n            setError('Selecione um arquivo menor que 5MB')\n            return void 0\n        }\n\n        if (!(['image/png', 'image/jpeg'].includes(file.type))){\n            setError('Formato invÃ¡lido, selecione apenas imagens JPG ou PNG')\n            return void 0\n        }\n\n        setInputFile(URL.createObjectURL(e.target.files[0]))\n        setFilePayload(file)\n    }\n\n    const onSubmit = async ({ fullname, bio}) => {\n        setLoading(true)\n        const formData = new FormData()\n        try {\n            formData.append('file', filePayload)\n            formData.append('fullname', fullname)\n            formData.append('bio', bio)\n            const response = await api({\n                method: 'post',\n                url: '/user',\n                headers: {\n                    'Authorization': `Bearer ${authKey[0].key}`,\n                    'Content-Type': 'multipart/form-data'\n                },\n                data: formData\n            })\n            response.data.response && alert('Dados atualizados')\n            window.location.reload()\n        } catch(e) {\n            window.location.pathname = '/refresh'\n        } finally {\n            setLoading(false)\n        }\n    }\n\n    useEffect(() => {\n        setData(userData)\n    },[])\n\n    return(\n        <>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <div className=\"edit\">\n                    <div className=\"edit__header\">\n                        <p className=\"edit__header--title\">Editar informaÃ§Ãµes pessoais.</p>\n                    </div>\n                    <div className=\"edit__inputs\">\n                        <p className=\"edit__inputs--desc\">InformaÃ§Ãµes pÃºblicas da conta.</p>\n                        <div className=\"edit__inputs--container acc-field\">\n                            <label className=\"input-label acc-field__title\" \n                                htmlFor=\"picture\">\n                                <img className=\"edit__inputs--picture\" \n                                    src={!inputFile ? data.picture : inputFile} \n                                alt=\"profile picture\"/>\n                            </label>\n                                <input type=\"file\" ref={register()} \n                                    onChange={handleInputChange} \n                            className=\"account-input img-input\" name=\"picture\" \n                            id=\"picture\"/>\n                        </div>\n                        <div className=\"edit__inputs--container acc-field\">\n                            <label htmlFor=\"fullname\" \n                                className=\"input-label acc-field__title\">Nome Completo</label>\n                            <input type=\"text\" ref={register({required: true})} \n                                className=\"account-input\" defaultValue={data.fullname} \n                            name=\"fullname\" id=\"fullname\"/>\n                        </div>\n                        <div className=\"edit__inputs--container acc-field\">\n                            <label htmlFor=\"email\" \n                                className=\"input-label acc-field__title\">E-mail</label>\n                            <input type=\"text\" ref={register({required: true})} \n                                className=\"account-input email\" value={data.email} name=\"email\" id=\"email\"/>\n                        </div>\n                        <div className=\"edit__inputs--container acc-field\">\n                            <label htmlFor=\"bio\" \n                                className=\"input-label acc-field__title\">Biografia</label>\n                            <textarea className=\"account-input\" name=\"bio\" \n                                ref={register()} defaultValue={data.bio !== '' ? data.bio : null}\n                                placeholder=\"FaÃ§a uma breve descriÃ§Ã£o sobre vocÃª e sua experiÃªncia com Ikebana\" id=\"bio\"/>\n                        </div>\n                        <button type=\"submit\" \n                        className=\"app-btn btn-filled\">\n                            {\n                                loading === true ? <div className=\"sizer\">\n                                    <div class=\"lds-ellipsis\"><div></div>\n                                        <div></div><div></div><div></div></div>\n                                </div>\n                                :\n                                <p>{ userData.isPartner === true ? 'Atualizar' : 'Concluir' }</p>\n                            }\n                        </button>\n                    </div>\n                </div>\n            </form>\n            {\n                error &&\n                    <Modal>\n                        <ErrorDialog value={error} handler={() =>{\n                            setError(false)\n                            window.location.reload()\n                        } }/>\n                    </Modal>\n            }\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}
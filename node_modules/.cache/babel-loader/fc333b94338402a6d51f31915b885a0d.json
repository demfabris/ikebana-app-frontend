{"ast":null,"code":"import _regeneratorRuntime from\"/home/fabricio7p/Documents/Projects/Ikebana_production/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/fabricio7p/Documents/Projects/Ikebana_production/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/fabricio7p/Documents/Projects/Ikebana_production/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import api from'services/api';import{useSelector}from'react-redux';import'./styles.scss';import LessonCard from'../../cards/LessonCard/LessonCard';export default function Lessons(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var authKey=useSelector(function(state){return state.auth.keys;});var fetchLessons=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var key,response,_args=arguments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:key=_args.length>0&&_args[0]!==undefined?_args[0]:authKey;_context.prev=1;_context.next=4;return api({method:'get',url:'/list'});case 4:response=_context.sent;setData(response.data.filter(function(el){return el.type==='lesson';}));_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);console.log(_context.t0);case 11:_context.prev=11;setLoading(false);return _context.finish(11);case 14:case\"end\":return _context.stop();}}},_callee,null,[[1,8,11,14]]);}));return function fetchLessons(){return _ref.apply(this,arguments);};}();useEffect(function(){window.scrollTo(0,0);fetchLessons();},[]);return/*#__PURE__*/React.createElement(\"div\",{className:\"lessons-main\"},/*#__PURE__*/React.createElement(\"div\",{className:\"lessons-main__list\"},data.map(function(el,key){return/*#__PURE__*/React.createElement(LessonCard,Object.assign({key:key},el));})));}","map":{"version":3,"sources":["/home/fabricio7p/Documents/Projects/Ikebana_production/src/components/pages/Lessons/Lessons.js"],"names":["React","useEffect","useState","api","useSelector","LessonCard","Lessons","data","setData","loading","setLoading","authKey","state","auth","keys","fetchLessons","key","method","url","response","filter","el","type","console","log","window","scrollTo","map"],"mappings":"ogBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,GAAP,KAAgB,cAAhB,CACA,OAASC,WAAT,KAA4B,aAA5B,CAEA,MAAO,eAAP,CAEA,MAAOC,CAAAA,UAAP,KAAuB,mCAAvB,CAEA,cAAe,SAASC,CAAAA,OAAT,EAAmB,eACNJ,QAAQ,CAAC,EAAD,CADF,wCACvBK,IADuB,eACjBC,OADiB,8BAEAN,QAAQ,CAAC,KAAD,CAFR,yCAEvBO,OAFuB,eAEdC,UAFc,eAG9B,GAAMC,CAAAA,OAAO,CAAGP,WAAW,CAAC,SAAAQ,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAN,CAAWC,IAAf,EAAN,CAA3B,CAEA,GAAMC,CAAAA,YAAY,0FAAG,oKAAOC,GAAP,+CAAWL,OAAX,uCAEUR,CAAAA,GAAG,CAAC,CACvBc,MAAM,CAAE,KADe,CAEvBC,GAAG,CAAE,OAFkB,CAAD,CAFb,QAEPC,QAFO,eAMbX,OAAO,CAACW,QAAQ,CAACZ,IAAT,CAAca,MAAd,CAAqB,SAACC,EAAD,CAAQ,CACjC,MAAOA,CAAAA,EAAE,CAACC,IAAH,GAAY,QAAnB,CACH,CAFO,CAAD,CAAP,CANa,+EAUbC,OAAO,CAACC,GAAR,cAVa,yBAYbd,UAAU,CAAC,KAAD,CAAV,CAZa,qGAAH,kBAAZK,CAAAA,YAAY,0CAAlB,CAgBAd,SAAS,CAAC,UAAM,CACZwB,MAAM,CAACC,QAAP,CAAgB,CAAhB,CAAmB,CAAnB,EACAX,YAAY,GACf,CAHQ,CAGP,EAHO,CAAT,CAKA,mBACI,2BAAK,SAAS,CAAC,cAAf,eACI,2BAAK,SAAS,CAAC,oBAAf,EAEQR,IAAI,CAACoB,GAAL,CAAS,SAACN,EAAD,CAAKL,GAAL,qBAAa,oBAAC,UAAD,gBAAY,GAAG,CAAEA,GAAjB,EAA0BK,EAA1B,EAAb,EAAT,CAFR,CADJ,CADJ,CASH","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport api from 'services/api';\nimport { useSelector } from 'react-redux';\n\nimport './styles.scss';\n\nimport LessonCard from '../../cards/LessonCard/LessonCard';\n\nexport default function Lessons() {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const authKey = useSelector(state => state.auth.keys)\n    \n    const fetchLessons = async (key=authKey) => {\n        try {\n            const response = await api({\n                method: 'get',\n                url: '/list',\n            })\n            setData(response.data.filter((el) => {\n                return el.type === 'lesson'\n            }))\n        } catch(e) {\n            console.log(e)\n        } finally {\n            setLoading(false)\n        }\n    }\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n        fetchLessons()\n    },[])\n\n    return(\n        <div className=\"lessons-main\">\n            <div className=\"lessons-main__list\">\n                {\n                    data.map((el, key) => <LessonCard key={key} {...el}/>)\n                }\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}
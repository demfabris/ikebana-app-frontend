{"ast":null,"code":"var _jsxFileName = \"/home/fabricio7p/Documents/Projects/Ikebana/front/src/components/list_elements/Arrangement/ArrangementDisplay.js\";\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport ArrangementDialog from '../../Dialog/components/ArrangementDialog/ArrangementDialog';\nimport Modal from '../../aux/Modal.js';\nimport './styles.scss';\nexport default function ArrangementDisplay(el) {\n  const [dialog, setDialog] = useState('');\n  const options = {\n    'visualize': ArrangementDialog\n  };\n  const ActiveDialog = options[dialog];\n  let createdOn = Date.parse(el.created_on);\n  createdOn = new Date(createdOn);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"arr-element\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, Object.values(el.pictures).map(link => /*#__PURE__*/React.createElement(\"div\", {\n    class: \"arr-element__layer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"arr-element__layer--container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"arr-element__layer--container--img\",\n    src: link,\n    alt: \"Layer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"element-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"element-overlay__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"element-overlay__title--text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 41\n    }\n  }, el.name), el.video && /*#__PURE__*/React.createElement(\"button\", {\n    title: \"Possui Video\",\n    className: \"element-overlay__title--btn has-video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 53\n    }\n  }, \"videocam\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setDialog('visualize'),\n    title: \"Visualizar\",\n    className: \"element-overlay__title--btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      color: \"#119c00\"\n    },\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 45\n    }\n  }, \"launch\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"element-overlay__desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"element-overlay__desc--likes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"element-overlay__desc--likes--text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 45\n    }\n  }, el.likes), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 45\n    }\n  }, \"favorite\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"element-overlay__desc--footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"element-overlay__desc--footer--date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 45\n    }\n  }, ' ' + createdOn.getDate(), \"/\", 1 + createdOn.getMonth(), \"/\", createdOn.getFullYear()), /*#__PURE__*/React.createElement(\"button\", {\n    title: \"Editar\",\n    className: \"element-overlay__desc--footer--btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 49\n    }\n  }, \"build\"))))))))), dialog && /*#__PURE__*/React.createElement(Modal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ActiveDialog, {\n    handler: () => setDialog(''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  })));\n}","map":{"version":3,"sources":["/home/fabricio7p/Documents/Projects/Ikebana/front/src/components/list_elements/Arrangement/ArrangementDisplay.js"],"names":["React","useState","Link","ArrangementDialog","Modal","ArrangementDisplay","el","dialog","setDialog","options","ActiveDialog","createdOn","Date","parse","created_on","Object","values","pictures","map","link","name","video","color","likes","getDate","getMonth","getFullYear"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ArrangementDialog from '../../Dialog/components/ArrangementDialog/ArrangementDialog';\nimport Modal from '../../aux/Modal.js';\n\nimport './styles.scss';\n\nexport default function ArrangementDisplay(el) {\n    const [dialog, setDialog] = useState('');\n\n    const options = {\n        'visualize': ArrangementDialog,\n    }\n    const ActiveDialog = options[dialog];\n\n\n    let createdOn = Date.parse(el.created_on)\n    createdOn = new Date(createdOn)\n\n    return(\n        <>\n            <div className=\"arr-element\">\n                {\n                    Object.values(el.pictures).map((link) => (\n                        <div class=\"arr-element__layer\">\n                            <div className=\"arr-element__layer--container\">\n                                <img className=\"arr-element__layer--container--img\" src={link} \n                                    alt=\"Layer\" />\n                                <div className=\"element-overlay\">\n                                    <div className=\"element-overlay__title\">\n                                        <h1 className=\"element-overlay__title--text\">{el.name}</h1>\n                                        {\n                                            el.video &&\n                                                <button title=\"Possui Video\" \n                                                    className=\"element-overlay__title--btn has-video\">\n                                                    <i className=\"material-icons\">videocam</i>\n                                                </button>\n                                        }\n                                        <button onClick={() => setDialog('visualize')} \n                                            title=\"Visualizar\" \n                                            className=\"element-overlay__title--btn\">\n                                            <i style={{color: \"#119c00\"}} \n                                            className=\"material-icons\">launch</i>\n                                        </button>\n                                    </div>\n                                    <div className=\"element-overlay__desc\">\n                                        <div className=\"element-overlay__desc--likes\">\n                                            <p className=\"element-overlay__desc--likes--text\">\n                                                {el.likes}\n                                            </p>\n                                            <i className=\"material-icons\">favorite</i>\n                                        </div>\n                                        <div className=\"element-overlay__desc--footer\">\n                                            <p className=\"element-overlay__desc--footer--date\">\n                                                {' ' + createdOn.getDate()\n                                                }/{1 + createdOn.getMonth()\n                                                }/{createdOn.getFullYear()}\n                                            </p>\n                                            <button title=\"Editar\" className=\"element-overlay__desc--footer--btn\">\n                                                <i className=\"material-icons\">build</i>\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n            {\n                dialog &&\n                    <Modal>\n                        <ActiveDialog handler={() => setDialog('')}/>\n                    </Modal>\n            }\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}
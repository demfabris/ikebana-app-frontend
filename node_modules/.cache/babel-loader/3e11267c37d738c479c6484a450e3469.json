{"ast":null,"code":"var _jsxFileName = \"/home/fabricio7p/Documents/Projects/Ikebana/front/src/components/aux/Clipper/Clipper.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { clearCart } from 'store/ducks/shop';\nimport CartElement from '../../list_elements/CartElement/CartElement';\nimport CheckoutDialog from '../../Dialog/components/CheckoutDialog/CheckoutDialog';\nimport Modal from '../../aux/Modal';\nimport './styles.scss';\nexport default function Clipper({\n  handler\n}) {\n  const [dialog, setDialog] = useState(false);\n  const cart = useSelector(state => state.shop.cart);\n\n  const proceedCheckout = () => {\n    cart.length !== 0 ? setDialog(true) : console.log();\n  };\n\n  useEffect(() => {\n    dialog === true ? document.getElementById(\"clipper\").style.display = \"none\" : document.getElementById(\"clipper\").style.display = \"block\";\n  });\n  const dispatch = useDispatch();\n\n  const clearAll = () => {\n    dispatch(clearCart());\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"holder\",\n    id: \"clipper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: handler,\n    className: \"clipper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"clipper-arrow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"clipper-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, cart.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"clipper-main__info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 29\n    }\n  }, \"Nenhum arranjo selecionado...\") : cart.map((el, key) => /*#__PURE__*/React.createElement(CartElement, Object.assign({\n    key: key\n  }, el, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"clipper-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: proceedCheckout,\n    className: \"clipper--checkout-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, \"Finalizar\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: clearAll,\n    className: \"clipper--clear-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, \"Limpar\"))), dialog && /*#__PURE__*/React.createElement(Modal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CheckoutDialog, {\n    handler: () => setDialog(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  })));\n}","map":{"version":3,"sources":["/home/fabricio7p/Documents/Projects/Ikebana/front/src/components/aux/Clipper/Clipper.js"],"names":["React","useState","useEffect","useSelector","useDispatch","clearCart","CartElement","CheckoutDialog","Modal","Clipper","handler","dialog","setDialog","cart","state","shop","proceedCheckout","length","console","log","document","getElementById","style","display","dispatch","clearAll","map","el","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,WAAP,MAAwB,6CAAxB;AACA,OAAOC,cAAP,MAA2B,uDAA3B;AAEA,OAAOC,KAAP,MAAkB,iBAAlB;AAEA,OAAO,eAAP;AAEA,eAAe,SAASC,OAAT,CAAiB;AAACC,EAAAA;AAAD,CAAjB,EAA4B;AACvC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,KAAD,CAApC;AACA,QAAMY,IAAI,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,IAArB,CAAxB;;AAEA,QAAMG,eAAe,GAAG,MAAM;AAC1BH,IAAAA,IAAI,CAACI,MAAL,KAAgB,CAAhB,GAAoBL,SAAS,CAAC,IAAD,CAA7B,GAAsCM,OAAO,CAACC,GAAR,EAAtC;AACH,GAFD;;AAIAjB,EAAAA,SAAS,CAAC,MAAM;AACfS,IAAAA,MAAM,KAAK,IAAX,GACOS,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,KAAnC,CAAyCC,OAAzC,GAAiD,MADxD,GAGOH,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,KAAnC,CAAyCC,OAAzC,GAAiD,OAHxD;AAIA,GALQ,CAAT;AAQA,QAAMC,QAAQ,GAAGpB,WAAW,EAA5B;;AACA,QAAMqB,QAAQ,GAAG,MAAM;AACnBD,IAAAA,QAAQ,CAACnB,SAAS,EAAV,CAAR;AACH,GAFD;;AAIA,sBACI,uDACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,EAAE,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,OAAO,EAAEK,OAAd;AAAuB,IAAA,SAAS,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQG,IAAI,CAACI,MAAL,KAAgB,CAAhB,gBACI;AAAG,IAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADJ,GAGAJ,IAAI,CAACa,GAAL,CAAS,CAACC,EAAD,EAAKC,GAAL,kBACL,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA;AAAlB,KAA2BD,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,CALR,CAHJ,eAaI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,OAAO,EAAEX,eAAjB;AACI,IAAA,SAAS,EAAC,uBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAII;AAAQ,IAAA,OAAO,EAAES,QAAjB;AACI,IAAA,SAAS,EAAC,oBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,CAbJ,CADJ,EAuBQd,MAAM,iBACF,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAE,MAAMC,SAAS,CAAC,KAAD,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAxBZ,CADJ;AA+BH","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { clearCart } from 'store/ducks/shop';\n\nimport CartElement from '../../list_elements/CartElement/CartElement';\nimport CheckoutDialog from '../../Dialog/components/CheckoutDialog/CheckoutDialog';\n\nimport Modal from '../../aux/Modal';\n\nimport './styles.scss';\n\nexport default function Clipper({handler}) {\n    const [dialog, setDialog] = useState(false);\n    const cart = useSelector(state => state.shop.cart);\n\n    const proceedCheckout = () => {\n        cart.length !== 0 ? setDialog(true) : console.log();\n    }\n\n    useEffect(() => {\n     dialog === true ? \n            document.getElementById(\"clipper\").style.display=\"none\" \n                    :\n            document.getElementById(\"clipper\").style.display=\"block\"\n    })\n\n\n    const dispatch = useDispatch();\n    const clearAll = () => {\n        dispatch(clearCart())\n    }\n\n    return(\n        <>\n            <div className=\"holder\" id=\"clipper\">\n                <div onClick={handler} className=\"clipper\"></div>\n                <div className=\"clipper-arrow\"></div>\n                <div className=\"clipper-main\">\n                    {\n                        cart.length === 0 ?\n                            <p className=\"clipper-main__info\">Nenhum arranjo selecionado...</p>\n                            :\n                        cart.map((el, key) => (\n                            <CartElement key={key} {...el} />\n                        ))\n                    }\n                </div>\n                <div className=\"clipper-footer\">\n                    <button onClick={proceedCheckout} \n                        className=\"clipper--checkout-btn\">\n                        Finalizar</button>\n                    <button onClick={clearAll} \n                        className=\"clipper--clear-btn\">Limpar</button>\n                </div>\n            </div>\n            {\n                dialog &&\n                    <Modal>\n                        <CheckoutDialog handler={() => setDialog(false)}/>\n                    </Modal>\n            }\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}
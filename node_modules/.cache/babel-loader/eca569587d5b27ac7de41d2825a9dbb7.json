{"ast":null,"code":"import _regeneratorRuntime from \"/home/fabricio7p/Documents/Projects/Ikebana_production/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/fabricio7p/Documents/Projects/Ikebana_production/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/home/fabricio7p/Documents/Projects/Ikebana_production/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/home/fabricio7p/Documents/Projects/Ikebana_production/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/fabricio7p/Documents/Projects/Ikebana_production/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { createContext, useContext, createElement, useState as useState$2, useRef as useRef$2, useEffect as useEffect$2, isValidElement, cloneElement, Fragment } from 'react';\n\nvar isUndefined = function isUndefined(val) {\n  return val === undefined;\n};\n\nvar isNullOrUndefined = function isNullOrUndefined(value) {\n  return value === null || isUndefined(value);\n};\n\nvar isArray = function isArray(value) {\n  return Array.isArray(value);\n};\n\nvar isObjectType = function isObjectType(value) {\n  return typeof value === 'object';\n};\n\nvar isObject = function isObject(value) {\n  return !isNullOrUndefined(value) && !isArray(value) && isObjectType(value);\n};\n\nvar isHTMLElement = function isHTMLElement(value) {\n  return isObject(value) && value.nodeType === Node.ELEMENT_NODE;\n};\n\nvar VALIDATION_MODE = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit'\n};\nvar VALUE = 'value';\nvar UNDEFINED = 'undefined';\nvar EVENTS = {\n  BLUR: 'blur',\n  CHANGE: 'change',\n  INPUT: 'input'\n};\nvar INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate'\n};\nvar REGEX_IS_DEEP_PROP = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/;\nvar REGEX_IS_PLAIN_PROP = /^\\w*$/;\nvar REGEX_PROP_NAME = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\nvar REGEX_ESCAPE_CHAR = /\\\\(\\\\)?/g;\n\nfunction attachEventListeners(_ref) {\n  var field = _ref.field,\n      handleChange = _ref.handleChange,\n      isRadioOrCheckbox = _ref.isRadioOrCheckbox;\n  var ref = field.ref;\n\n  if (isHTMLElement(ref) && ref.addEventListener && handleChange) {\n    ref.addEventListener(isRadioOrCheckbox ? EVENTS.CHANGE : EVENTS.INPUT, handleChange);\n    ref.addEventListener(EVENTS.BLUR, handleChange);\n  }\n}\n\nvar isKey = function isKey(value) {\n  return !isArray(value) && (REGEX_IS_PLAIN_PROP.test(value) || !REGEX_IS_DEEP_PROP.test(value));\n};\n\nvar stringToPath = function stringToPath(string) {\n  var result = [];\n  string.replace(REGEX_PROP_NAME, function (match, number, quote, string) {\n    result.push(quote ? string.replace(REGEX_ESCAPE_CHAR, '$1') : number || match);\n  });\n  return result;\n};\n\nfunction set(object, path, value) {\n  var index = -1;\n  var tempPath = isKey(path) ? [path] : stringToPath(path);\n  var length = tempPath.length;\n  var lastIndex = length - 1;\n\n  while (++index < length) {\n    var key = tempPath[index];\n    var newValue = value;\n\n    if (index !== lastIndex) {\n      var objValue = object[key];\n      newValue = isObject(objValue) || isArray(objValue) ? objValue : !isNaN(tempPath[index + 1]) ? [] : {};\n    }\n\n    object[key] = newValue;\n    object = object[key];\n  }\n\n  return object;\n}\n\nvar transformToNestObject = function transformToNestObject(data) {\n  return Object.entries(data).reduce(function (previous, _ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n        key = _ref3[0],\n        value = _ref3[1];\n\n    if (!isKey(key)) {\n      set(previous, key, value);\n      return previous;\n    }\n\n    return Object.assign(Object.assign({}, previous), _defineProperty({}, key, value));\n  }, {});\n};\n\nvar get = function get(obj, path, defaultValue) {\n  var result = path.split(/[,[\\].]+?/).filter(Boolean).reduce(function (result, key) {\n    return isNullOrUndefined(result) ? result : result[key];\n  }, obj);\n  return isUndefined(result) || result === obj ? obj[path] || defaultValue : result;\n};\n\nvar focusErrorField = function focusErrorField(fields, fieldErrors) {\n  for (var key in fields) {\n    if (get(fieldErrors, key)) {\n      var field = fields[key];\n\n      if (field) {\n        if (isHTMLElement(field.ref) && field.ref.focus) {\n          field.ref.focus();\n          break;\n        } else if (field.options) {\n          field.options[0].ref.focus();\n          break;\n        }\n      }\n    }\n  }\n};\n\nvar removeAllEventListeners = function removeAllEventListeners(ref, validateWithStateUpdate) {\n  if (isHTMLElement(ref) && ref.removeEventListener) {\n    ref.removeEventListener(EVENTS.INPUT, validateWithStateUpdate);\n    ref.removeEventListener(EVENTS.CHANGE, validateWithStateUpdate);\n    ref.removeEventListener(EVENTS.BLUR, validateWithStateUpdate);\n  }\n};\n\nvar isRadioInput = function isRadioInput(element) {\n  return !!element && element.type === 'radio';\n};\n\nvar isCheckBoxInput = function isCheckBoxInput(element) {\n  return !!element && element.type === 'checkbox';\n};\n\nfunction isDetached(element) {\n  if (!element) {\n    return true;\n  }\n\n  if (!(element instanceof HTMLElement) || element.nodeType === Node.DOCUMENT_NODE) {\n    return false;\n  }\n\n  return isDetached(element.parentNode);\n}\n\nvar isEmptyObject = function isEmptyObject(value) {\n  return isObject(value) && !Object.keys(value).length;\n};\n\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\nfunction baseGet(object, path) {\n  var updatePath = isKey(path) ? [path] : castPath(path);\n  var length = path.length;\n  var index = 0;\n\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n\n  return index == length ? object : undefined;\n}\n\nfunction baseSlice(array, start, end) {\n  var index = -1;\n  var length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : length + start;\n  }\n\n  end = end > length ? length : end;\n\n  if (end < 0) {\n    end += length;\n  }\n\n  length = start > end ? 0 : end - start;\n  var result = Array(length);\n\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n\n  return result;\n}\n\nfunction parent(object, path) {\n  return path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nfunction baseUnset(object, path) {\n  var updatePath = isKey(path) ? [path] : castPath(path);\n  var childObject = parent(object, updatePath);\n  var key = updatePath[updatePath.length - 1];\n  var result = !(childObject != null) || delete childObject[key];\n  var previousObjRef = undefined;\n\n  for (var k = 0; k < updatePath.slice(0, -1).length; k++) {\n    var index = -1;\n    var objectRef = undefined;\n    var currentPaths = updatePath.slice(0, -(k + 1));\n    var currentPathsLength = currentPaths.length - 1;\n\n    if (k > 0) {\n      previousObjRef = object;\n    }\n\n    while (++index < currentPaths.length) {\n      var item = currentPaths[index];\n      objectRef = objectRef ? objectRef[item] : object[item];\n\n      if (currentPathsLength === index) {\n        if (isObject(objectRef) && isEmptyObject(objectRef)) {\n          previousObjRef ? delete previousObjRef[item] : delete object[item];\n        } else if (isArray(objectRef) && !objectRef.filter(function (data) {\n          return isObject(data) && !isEmptyObject(data);\n        }).length) {\n          delete previousObjRef[item];\n        }\n      }\n\n      previousObjRef = objectRef;\n    }\n  }\n\n  return result;\n}\n\nfunction unset(object, paths) {\n  paths.forEach(function (path) {\n    baseUnset(object, path);\n  });\n  return object;\n}\n\nfunction findRemovedFieldAndRemoveListener(fields, handleChange, field, forceDelete) {\n  if (!field) {\n    return;\n  }\n\n  var ref = field.ref,\n      _field$ref = field.ref,\n      name = _field$ref.name,\n      type = _field$ref.type,\n      mutationWatcher = field.mutationWatcher;\n\n  if (!type) {\n    delete fields[name];\n    return;\n  }\n\n  var fieldValue = fields[name];\n\n  if ((isRadioInput(ref) || isCheckBoxInput(ref)) && fieldValue) {\n    var options = fieldValue.options;\n\n    if (isArray(options) && options.length) {\n      options.forEach(function (_ref4, index) {\n        var ref = _ref4.ref,\n            mutationWatcher = _ref4.mutationWatcher;\n\n        if (ref && isDetached(ref) || forceDelete) {\n          removeAllEventListeners(ref, handleChange);\n\n          if (mutationWatcher) {\n            mutationWatcher.disconnect();\n          }\n\n          unset(options, [\"[\".concat(index, \"]\")]);\n        }\n      });\n\n      if (options && !options.filter(Boolean).length) {\n        delete fields[name];\n      }\n    } else {\n      delete fields[name];\n    }\n  } else if (isDetached(ref) || forceDelete) {\n    removeAllEventListeners(ref, handleChange);\n\n    if (mutationWatcher) {\n      mutationWatcher.disconnect();\n    }\n\n    delete fields[name];\n  }\n}\n\nvar defaultReturn = {\n  isValid: false,\n  value: ''\n};\n\nvar getRadioValue = function getRadioValue(options) {\n  return isArray(options) ? options.reduce(function (previous, _ref5) {\n    var _ref5$ref = _ref5.ref,\n        checked = _ref5$ref.checked,\n        value = _ref5$ref.value;\n    return checked ? {\n      isValid: true,\n      value: value\n    } : previous;\n  }, defaultReturn) : defaultReturn;\n};\n\nvar getMultipleSelectValue = function getMultipleSelectValue(options) {\n  return _toConsumableArray(options).filter(function (_ref6) {\n    var selected = _ref6.selected;\n    return selected;\n  }).map(function (_ref7) {\n    var value = _ref7.value;\n    return value;\n  });\n};\n\nvar isFileInput = function isFileInput(element) {\n  return !!element && element.type === 'file';\n};\n\nvar isMultipleSelect = function isMultipleSelect(element) {\n  return !!element && element.type === 'select-multiple';\n};\n\nvar isEmptyString = function isEmptyString(value) {\n  return value === '';\n};\n\nvar defaultResult = {\n  value: false,\n  isValid: false\n};\nvar validResult = {\n  value: true,\n  isValid: true\n};\n\nvar getCheckboxValue = function getCheckboxValue(options) {\n  if (isArray(options)) {\n    if (options.length > 1) {\n      var values = options.filter(function (_ref8) {\n        var checked = _ref8.ref.checked;\n        return checked;\n      }).map(function (_ref9) {\n        var value = _ref9.ref.value;\n        return value;\n      });\n      return {\n        value: values,\n        isValid: !!values.length\n      };\n    }\n\n    var _options$0$ref = options[0].ref,\n        checked = _options$0$ref.checked,\n        value = _options$0$ref.value,\n        attributes = _options$0$ref.attributes;\n    return checked ? attributes && !isUndefined(attributes.value) ? isUndefined(value) || isEmptyString(value) ? validResult : {\n      value: value,\n      isValid: true\n    } : validResult : defaultResult;\n  }\n\n  return defaultResult;\n};\n\nfunction getFieldValue(fields, ref) {\n  var name = ref.name,\n      value = ref.value;\n  var field = fields[name];\n\n  if (isFileInput(ref)) {\n    return ref.files;\n  }\n\n  if (isRadioInput(ref)) {\n    return field ? getRadioValue(field.options).value : '';\n  }\n\n  if (isMultipleSelect(ref)) {\n    return getMultipleSelectValue(ref.options);\n  }\n\n  if (isCheckBoxInput(ref)) {\n    return field ? getCheckboxValue(field.options).value : false;\n  }\n\n  return value;\n}\n\nvar isString = function isString(value) {\n  return typeof value === 'string';\n};\n\nvar getFieldsValues = function getFieldsValues(fields, search) {\n  var output = {};\n  var isSearchString = isString(search);\n  var isSearchArray = isArray(search);\n  var isNest = search && search.nest;\n\n  var _loop = function _loop(name) {\n    if (isUndefined(search) || isNest || isSearchString && name.startsWith(search) || isSearchArray && search.find(function (data) {\n      return name.startsWith(data);\n    })) {\n      output[name] = getFieldValue(fields, fields[name].ref);\n    }\n  };\n\n  for (var name in fields) {\n    _loop(name);\n  }\n\n  return output;\n};\n\nvar compareObject = function compareObject() {\n  var objectA = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var objectB = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return Object.entries(objectA).reduce(function (previous, _ref10) {\n    var _ref11 = _slicedToArray(_ref10, 2),\n        key = _ref11[0],\n        value = _ref11[1];\n\n    return previous ? objectB[key] && objectB[key] === value : false;\n  }, true);\n};\n\nvar isSameError = function isSameError(error, _ref12) {\n  var type = _ref12.type,\n      types = _ref12.types,\n      message = _ref12.message;\n  return isObject(error) && error.type === type && error.message === message && compareObject(error.types, types);\n};\n\nfunction shouldUpdateWithError(_ref13) {\n  var errors = _ref13.errors,\n      name = _ref13.name,\n      error = _ref13.error,\n      validFields = _ref13.validFields,\n      fieldsWithValidation = _ref13.fieldsWithValidation;\n  var isFieldValid = isEmptyObject(error);\n  var isFormValid = isEmptyObject(errors);\n  var currentFieldError = get(error, name);\n  var existFieldError = get(errors, name);\n\n  if (isFieldValid && validFields.has(name) || existFieldError && existFieldError.isManual) {\n    return false;\n  }\n\n  if (isFormValid !== isFieldValid || !isFormValid && !existFieldError || isFieldValid && fieldsWithValidation.has(name) && !validFields.has(name)) {\n    return true;\n  }\n\n  return currentFieldError && !isSameError(existFieldError, currentFieldError);\n}\n\nvar isRegex = function isRegex(value) {\n  return value instanceof RegExp;\n};\n\nvar getValueAndMessage = function getValueAndMessage(validationData) {\n  var isPureObject = isObject(validationData) && !isRegex(validationData);\n  return {\n    value: isPureObject ? validationData.value : validationData,\n    message: isPureObject ? validationData.message : ''\n  };\n};\n\nvar isFunction = function isFunction(value) {\n  return typeof value === 'function';\n};\n\nvar isBoolean = function isBoolean(value) {\n  return typeof value === 'boolean';\n};\n\nfunction getValidateError(result, ref) {\n  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'validate';\n  var isStringValue = isString(result);\n\n  if (isStringValue || isBoolean(result) && !result) {\n    var message = isStringValue ? result : '';\n    return {\n      type: type,\n      message: message,\n      ref: ref\n    };\n  }\n}\n\nvar appendErrors = function appendErrors(name, validateAllFieldCriteria, errors, type, message) {\n  if (!validateAllFieldCriteria) {\n    return {};\n  }\n\n  var error = errors[name];\n  return Object.assign(Object.assign({}, error), {\n    types: Object.assign(Object.assign({}, error && error.types ? error.types : {}), _defineProperty({}, type, message || true))\n  });\n};\n\nvar validateField = /*#__PURE__*/function () {\n  var _ref15 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(fieldsRef, validateAllFieldCriteria, _ref14) {\n    var ref, _ref14$ref, type, value, name, options, required, maxLength, minLength, min, max, pattern, validate, fields, error, isRadio, isCheckBox, isRadioOrCheckbox, isEmpty, appendErrorsCurry, getMinMaxMessage, _ref16, requiredValue, requiredMessage, exceedMax, exceedMin, _getValueAndMessage, maxValue, maxMessage, _getValueAndMessage2, minValue, minMessage, valueNumber, valueDate, _getValueAndMessage3, maxLengthValue, maxLengthMessage, _getValueAndMessage4, minLengthValue, minLengthMessage, inputLength, _exceedMax, _exceedMin, _getValueAndMessage5, patternValue, patternMessage, fieldValue, validateRef, result, validateError, validateFunctions, validationResult;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            ref = _ref14.ref, _ref14$ref = _ref14.ref, type = _ref14$ref.type, value = _ref14$ref.value, name = _ref14$ref.name, options = _ref14.options, required = _ref14.required, maxLength = _ref14.maxLength, minLength = _ref14.minLength, min = _ref14.min, max = _ref14.max, pattern = _ref14.pattern, validate = _ref14.validate;\n            fields = fieldsRef.current;\n            error = {};\n            isRadio = isRadioInput(ref);\n            isCheckBox = isCheckBoxInput(ref);\n            isRadioOrCheckbox = isRadio || isCheckBox;\n            isEmpty = isEmptyString(value);\n            appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\n\n            getMinMaxMessage = function getMinMaxMessage(exceedMax, maxLengthMessage, minLengthMessage) {\n              var maxType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : INPUT_VALIDATION_RULES.maxLength;\n              var minType = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : INPUT_VALIDATION_RULES.minLength;\n              var message = exceedMax ? maxLengthMessage : minLengthMessage;\n              error[name] = Object.assign({\n                type: exceedMax ? maxType : minType,\n                message: message,\n                ref: ref\n              }, exceedMax ? appendErrorsCurry(maxType, message) : appendErrorsCurry(minType, message));\n\n              if (!validateAllFieldCriteria) {\n                return error;\n              }\n            };\n\n            if (!(required && (!isRadio && !isCheckBox && (isEmpty || isNullOrUndefined(value)) || isBoolean(value) && !value || isCheckBox && !getCheckboxValue(options).isValid || isRadio && !getRadioValue(options).isValid))) {\n              _context2.next = 15;\n              break;\n            }\n\n            _ref16 = isString(required) ? {\n              value: !!required,\n              message: required\n            } : getValueAndMessage(required), requiredValue = _ref16.value, requiredMessage = _ref16.message;\n\n            if (!requiredValue) {\n              _context2.next = 15;\n              break;\n            }\n\n            error[name] = Object.assign({\n              type: INPUT_VALIDATION_RULES.required,\n              message: requiredMessage,\n              ref: isRadioOrCheckbox ? fields[name].options[0].ref : ref\n            }, appendErrorsCurry(INPUT_VALIDATION_RULES.required, requiredMessage));\n\n            if (validateAllFieldCriteria) {\n              _context2.next = 15;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", error);\n\n          case 15:\n            if (!(!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n              _context2.next = 23;\n              break;\n            }\n\n            _getValueAndMessage = getValueAndMessage(max), maxValue = _getValueAndMessage.value, maxMessage = _getValueAndMessage.message;\n            _getValueAndMessage2 = getValueAndMessage(min), minValue = _getValueAndMessage2.value, minMessage = _getValueAndMessage2.message;\n\n            if (type === 'number' || !type && !isNaN(value)) {\n              valueNumber = ref.valueAsNumber || parseFloat(value);\n\n              if (!isNullOrUndefined(maxValue)) {\n                exceedMax = valueNumber > maxValue;\n              }\n\n              if (!isNullOrUndefined(minValue)) {\n                exceedMin = valueNumber < minValue;\n              }\n            } else {\n              valueDate = ref.valueAsDate || new Date(value);\n\n              if (isString(maxValue)) {\n                exceedMax = valueDate > new Date(maxValue);\n              }\n\n              if (isString(minValue)) {\n                exceedMin = valueDate < new Date(minValue);\n              }\n            }\n\n            if (!(exceedMax || exceedMin)) {\n              _context2.next = 23;\n              break;\n            }\n\n            getMinMaxMessage(!!exceedMax, maxMessage, minMessage, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\n\n            if (validateAllFieldCriteria) {\n              _context2.next = 23;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", error);\n\n          case 23:\n            if (!(isString(value) && !isEmpty && (maxLength || minLength))) {\n              _context2.next = 33;\n              break;\n            }\n\n            _getValueAndMessage3 = getValueAndMessage(maxLength), maxLengthValue = _getValueAndMessage3.value, maxLengthMessage = _getValueAndMessage3.message;\n            _getValueAndMessage4 = getValueAndMessage(minLength), minLengthValue = _getValueAndMessage4.value, minLengthMessage = _getValueAndMessage4.message;\n            inputLength = value.toString().length;\n            _exceedMax = maxLength && inputLength > maxLengthValue;\n            _exceedMin = minLength && inputLength < minLengthValue;\n\n            if (!(_exceedMax || _exceedMin)) {\n              _context2.next = 33;\n              break;\n            }\n\n            getMinMaxMessage(!!_exceedMax, maxLengthMessage, minLengthMessage);\n\n            if (validateAllFieldCriteria) {\n              _context2.next = 33;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", error);\n\n          case 33:\n            if (!(pattern && !isEmpty)) {\n              _context2.next = 39;\n              break;\n            }\n\n            _getValueAndMessage5 = getValueAndMessage(pattern), patternValue = _getValueAndMessage5.value, patternMessage = _getValueAndMessage5.message;\n\n            if (!(isRegex(patternValue) && !patternValue.test(value))) {\n              _context2.next = 39;\n              break;\n            }\n\n            error[name] = Object.assign({\n              type: INPUT_VALIDATION_RULES.pattern,\n              message: patternMessage,\n              ref: ref\n            }, appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, patternMessage));\n\n            if (validateAllFieldCriteria) {\n              _context2.next = 39;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", error);\n\n          case 39:\n            if (!validate) {\n              _context2.next = 62;\n              break;\n            }\n\n            fieldValue = getFieldValue(fields, ref);\n            validateRef = isRadioOrCheckbox && options ? options[0].ref : ref;\n\n            if (!isFunction(validate)) {\n              _context2.next = 53;\n              break;\n            }\n\n            _context2.next = 45;\n            return validate(fieldValue);\n\n          case 45:\n            result = _context2.sent;\n            validateError = getValidateError(result, validateRef);\n\n            if (!validateError) {\n              _context2.next = 51;\n              break;\n            }\n\n            error[name] = Object.assign(Object.assign({}, validateError), appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message));\n\n            if (validateAllFieldCriteria) {\n              _context2.next = 51;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", error);\n\n          case 51:\n            _context2.next = 62;\n            break;\n\n          case 53:\n            if (!isObject(validate)) {\n              _context2.next = 62;\n              break;\n            }\n\n            validateFunctions = Object.entries(validate);\n            _context2.next = 57;\n            return new Promise(function (resolve) {\n              validateFunctions.reduce( /*#__PURE__*/function () {\n                var _ref18 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(previous, _ref17, index) {\n                  var _ref19, key, validate, result, validateResult, validateError;\n\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _ref19 = _slicedToArray(_ref17, 2), key = _ref19[0], validate = _ref19[1];\n                          _context.t2 = isEmptyObject;\n                          _context.next = 4;\n                          return previous;\n\n                        case 4:\n                          _context.t3 = _context.sent;\n                          _context.t1 = !(0, _context.t2)(_context.t3);\n\n                          if (!_context.t1) {\n                            _context.next = 8;\n                            break;\n                          }\n\n                          _context.t1 = !validateAllFieldCriteria;\n\n                        case 8:\n                          _context.t0 = _context.t1;\n\n                          if (_context.t0) {\n                            _context.next = 11;\n                            break;\n                          }\n\n                          _context.t0 = !isFunction(validate);\n\n                        case 11:\n                          if (!_context.t0) {\n                            _context.next = 13;\n                            break;\n                          }\n\n                          return _context.abrupt(\"return\", resolve(previous));\n\n                        case 13:\n                          _context.next = 15;\n                          return validate(fieldValue);\n\n                        case 15:\n                          validateResult = _context.sent;\n                          validateError = getValidateError(validateResult, validateRef, key);\n\n                          if (validateError) {\n                            result = Object.assign(Object.assign({}, validateError), appendErrorsCurry(key, validateError.message));\n\n                            if (validateAllFieldCriteria) {\n                              error[name] = result;\n                            }\n                          } else {\n                            result = previous;\n                          }\n\n                          return _context.abrupt(\"return\", validateFunctions.length - 1 === index ? resolve(result) : result);\n\n                        case 19:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x4, _x5, _x6) {\n                  return _ref18.apply(this, arguments);\n                };\n              }(), {});\n            });\n\n          case 57:\n            validationResult = _context2.sent;\n\n            if (isEmptyObject(validationResult)) {\n              _context2.next = 62;\n              break;\n            }\n\n            error[name] = Object.assign({\n              ref: validateRef\n            }, validationResult);\n\n            if (validateAllFieldCriteria) {\n              _context2.next = 62;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", error);\n\n          case 62:\n            return _context2.abrupt(\"return\", error);\n\n          case 63:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function validateField(_x, _x2, _x3) {\n    return _ref15.apply(this, arguments);\n  };\n}();\n\nvar parseErrorSchema = function parseErrorSchema(error, validateAllFieldCriteria) {\n  return isArray(error.inner) ? error.inner.reduce(function (previous, _ref20) {\n    var path = _ref20.path,\n        message = _ref20.message,\n        type = _ref20.type;\n    return Object.assign(Object.assign({}, previous), previous[path] && validateAllFieldCriteria ? _defineProperty({}, path, appendErrors(path, validateAllFieldCriteria, previous, type, message)) : _defineProperty({}, path, previous[path] || Object.assign({\n      message: message,\n      type: type\n    }, validateAllFieldCriteria ? {\n      types: _defineProperty({}, type, message || true)\n    } : {})));\n  }, {}) : _defineProperty({}, error.path, {\n    message: error.message,\n    type: error.type\n  });\n};\n\nfunction validateWithSchema(_x7, _x8, _x9, _x10, _x11) {\n  return _validateWithSchema.apply(this, arguments);\n}\n\nfunction _validateWithSchema() {\n  _validateWithSchema = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(validationSchema, validateAllFieldCriteria, data, validationResolver, context) {\n    return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            if (!validationResolver) {\n              _context10.next = 2;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", validationResolver(data, context));\n\n          case 2:\n            _context10.prev = 2;\n            _context10.next = 5;\n            return validationSchema.validate(data, {\n              abortEarly: false,\n              context: context\n            });\n\n          case 5:\n            _context10.t0 = _context10.sent;\n            _context10.t1 = {};\n            return _context10.abrupt(\"return\", {\n              values: _context10.t0,\n              errors: _context10.t1\n            });\n\n          case 10:\n            _context10.prev = 10;\n            _context10.t2 = _context10[\"catch\"](2);\n            return _context10.abrupt(\"return\", {\n              values: {},\n              errors: transformToNestObject(parseErrorSchema(_context10.t2, validateAllFieldCriteria))\n            });\n\n          case 13:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10, null, [[2, 10]]);\n  }));\n  return _validateWithSchema.apply(this, arguments);\n}\n\nvar getDefaultValue = function getDefaultValue(defaultValues, name, defaultValue) {\n  return isUndefined(defaultValues[name]) ? get(defaultValues, name, defaultValue) : defaultValues[name];\n};\n\nfunction flatArray(list) {\n  return list.reduce(function (a, b) {\n    return a.concat(isArray(b) ? flatArray(b) : b);\n  }, []);\n}\n\nvar isPrimitive = function isPrimitive(value) {\n  return isNullOrUndefined(value) || !isObjectType(value);\n};\n\nvar getPath = function getPath(path, values) {\n  var getInnerPath = function getInnerPath(value, key, isObject) {\n    var pathWithIndex = isObject ? \"\".concat(path, \".\").concat(key) : \"\".concat(path, \"[\").concat(key, \"]\");\n    return isPrimitive(value) ? pathWithIndex : getPath(pathWithIndex, value);\n  };\n\n  return isArray(values) ? values.map(function (value, key) {\n    return getInnerPath(value, key);\n  }) : Object.entries(values).map(function (_ref24) {\n    var _ref25 = _slicedToArray(_ref24, 2),\n        key = _ref25[0],\n        value = _ref25[1];\n\n    return getInnerPath(value, key, true);\n  });\n};\n\nvar getPath$1 = function getPath$1(parentPath, value) {\n  return flatArray(getPath(parentPath, value));\n};\n\nvar assignWatchFields = function assignWatchFields(fieldValues, fieldName, watchFields, combinedDefaultValues, watchFieldArray) {\n  var value;\n  watchFields.add(fieldName);\n\n  if (isEmptyObject(fieldValues)) {\n    value = watchFieldArray ? watchFieldArray : undefined;\n  } else if (!isUndefined(fieldValues[fieldName])) {\n    value = fieldValues[fieldName];\n    watchFields.add(fieldName);\n  } else {\n    value = get(transformToNestObject(fieldValues), fieldName);\n\n    if (isArray(watchFieldArray) && isArray(value) && value.length !== watchFieldArray.length) {\n      value = watchFieldArray;\n    }\n\n    if (!isUndefined(value)) {\n      getPath$1(fieldName, value).forEach(function (name) {\n        return watchFields.add(name);\n      });\n    }\n  }\n\n  return isUndefined(value) ? isObject(combinedDefaultValues) ? getDefaultValue(combinedDefaultValues, fieldName) : combinedDefaultValues : value;\n};\n\nvar skipValidation = function skipValidation(_ref26) {\n  var hasError = _ref26.hasError,\n      isBlurEvent = _ref26.isBlurEvent,\n      isOnSubmit = _ref26.isOnSubmit,\n      isReValidateOnSubmit = _ref26.isReValidateOnSubmit,\n      isOnBlur = _ref26.isOnBlur,\n      isReValidateOnBlur = _ref26.isReValidateOnBlur,\n      isSubmitted = _ref26.isSubmitted;\n  return isOnSubmit && isReValidateOnSubmit || isOnSubmit && !isSubmitted || isOnBlur && !isBlurEvent && !hasError || isReValidateOnBlur && !isBlurEvent && hasError || isReValidateOnSubmit && isSubmitted;\n};\n\nvar getFieldValueByName = function getFieldValueByName(fields, name) {\n  var results = transformToNestObject(getFieldsValues(fields));\n  return name ? get(results, name, results) : results;\n};\n\nfunction getIsFieldsDifferent(referenceArray, differenceArray) {\n  var isMatch = false;\n\n  if (!isArray(referenceArray) || !isArray(differenceArray) || referenceArray.length !== differenceArray.length) {\n    return true;\n  }\n\n  for (var i = 0; i < referenceArray.length; i++) {\n    if (isMatch) {\n      break;\n    }\n\n    var dataA = referenceArray[i];\n    var dataB = differenceArray[i];\n\n    if (isUndefined(dataB) || Object.keys(dataA).length !== Object.keys(dataB).length) {\n      isMatch = true;\n      break;\n    }\n\n    for (var key in dataA) {\n      if (dataA[key] !== dataB[key]) {\n        isMatch = true;\n        break;\n      }\n    }\n  }\n\n  return isMatch;\n}\n\nvar isMatchFieldArrayName = function isMatchFieldArrayName(name, searchName) {\n  return name.startsWith(\"\".concat(searchName, \"[\"));\n};\n\nvar isNameInFieldArray = function isNameInFieldArray(names, name) {\n  return _toConsumableArray(names).reduce(function (prev, current) {\n    return isMatchFieldArrayName(name, current) ? true : prev;\n  }, false);\n};\n\nvar isFileListObject = function isFileListObject(data) {\n  return typeof FileList !== UNDEFINED && data instanceof FileList;\n};\n\nfunction onDomRemove(element, onDetachCallback) {\n  var observer = new MutationObserver(function () {\n    if (isDetached(element)) {\n      observer.disconnect();\n      onDetachCallback();\n    }\n  });\n  observer.observe(window.document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nvar modeChecker = function modeChecker(mode) {\n  return {\n    isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n    isOnBlur: mode === VALIDATION_MODE.onBlur,\n    isOnChange: mode === VALIDATION_MODE.onChange\n  };\n};\n\nvar useRef = React.useRef,\n    useState = React.useState,\n    useCallback = React.useCallback,\n    useEffect = React.useEffect;\n\nfunction useForm() {\n  var _ref27 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref27$mode = _ref27.mode,\n      mode = _ref27$mode === void 0 ? VALIDATION_MODE.onSubmit : _ref27$mode,\n      _ref27$reValidateMode = _ref27.reValidateMode,\n      reValidateMode = _ref27$reValidateMode === void 0 ? VALIDATION_MODE.onChange : _ref27$reValidateMode,\n      validationSchema = _ref27.validationSchema,\n      validationResolver = _ref27.validationResolver,\n      validationContext = _ref27.validationContext,\n      _ref27$defaultValues = _ref27.defaultValues,\n      defaultValues = _ref27$defaultValues === void 0 ? {} : _ref27$defaultValues,\n      _ref27$submitFocusErr = _ref27.submitFocusError,\n      submitFocusError = _ref27$submitFocusErr === void 0 ? true : _ref27$submitFocusErr,\n      validateCriteriaMode = _ref27.validateCriteriaMode;\n\n  var fieldsRef = useRef({});\n  var validateAllFieldCriteria = validateCriteriaMode === 'all';\n  var errorsRef = useRef({});\n  var touchedFieldsRef = useRef({});\n  var watchFieldArrayRef = useRef({});\n  var watchFieldsRef = useRef(new Set());\n  var dirtyFieldsRef = useRef(new Set());\n  var fieldsWithValidationRef = useRef(new Set());\n  var validFieldsRef = useRef(new Set());\n  var isValidRef = useRef(true);\n  var defaultRenderValuesRef = useRef({});\n  var defaultValuesRef = useRef(defaultValues);\n  var isUnMount = useRef(false);\n  var isWatchAllRef = useRef(false);\n  var isSubmittedRef = useRef(false);\n  var isDirtyRef = useRef(false);\n  var submitCountRef = useRef(0);\n  var isSubmittingRef = useRef(false);\n  var handleChangeRef = useRef();\n  var resetFieldArrayFunctionRef = useRef({});\n  var validationContextRef = useRef(validationContext);\n  var fieldArrayNamesRef = useRef(new Set());\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      render = _useState2[1];\n\n  var _useRef$current = useRef(modeChecker(mode)).current,\n      isOnBlur = _useRef$current.isOnBlur,\n      isOnSubmit = _useRef$current.isOnSubmit;\n  var isWindowUndefined = typeof window === UNDEFINED;\n  var shouldValidateCallback = !!(validationSchema || validationResolver);\n  var isWeb = typeof document !== UNDEFINED && !isWindowUndefined && !isUndefined(window.HTMLElement);\n  var isProxyEnabled = isWeb && 'Proxy' in window;\n  var readFormStateRef = useRef({\n    dirty: !isProxyEnabled,\n    dirtyFields: !isProxyEnabled,\n    isSubmitted: isOnSubmit,\n    submitCount: !isProxyEnabled,\n    touched: !isProxyEnabled,\n    isSubmitting: !isProxyEnabled,\n    isValid: !isProxyEnabled\n  });\n  var _useRef$current2 = useRef(modeChecker(reValidateMode)).current,\n      isReValidateOnBlur = _useRef$current2.isOnBlur,\n      isReValidateOnSubmit = _useRef$current2.isOnSubmit;\n  var reRender = useCallback(function () {\n    if (!isUnMount.current) {\n      render({});\n    }\n  }, []);\n  var shouldRenderBaseOnError = useCallback(function (name, error, shouldRender, skipReRender) {\n    var shouldReRender = shouldRender || shouldUpdateWithError({\n      errors: errorsRef.current,\n      error: error,\n      name: name,\n      validFields: validFieldsRef.current,\n      fieldsWithValidation: fieldsWithValidationRef.current\n    });\n\n    if (isEmptyObject(error)) {\n      if (fieldsWithValidationRef.current.has(name) || shouldValidateCallback) {\n        validFieldsRef.current.add(name);\n        shouldReRender = shouldReRender || get(errorsRef.current, name);\n      }\n\n      errorsRef.current = unset(errorsRef.current, [name]);\n    } else {\n      validFieldsRef.current.delete(name);\n      shouldReRender = shouldReRender || !get(errorsRef.current, name);\n      set(errorsRef.current, name, error[name]);\n    }\n\n    if (shouldReRender && !skipReRender) {\n      reRender();\n      return true;\n    }\n  }, [reRender, shouldValidateCallback]);\n  var setFieldValue = useCallback(function (field, rawValue) {\n    var ref = field.ref;\n    var options = field.options;\n    var type = ref.type;\n    var value = isWeb && isHTMLElement(ref) && isNullOrUndefined(rawValue) ? '' : rawValue;\n\n    if (isRadioInput(ref) && options) {\n      options.forEach(function (_ref28) {\n        var radioRef = _ref28.ref;\n        return radioRef.checked = radioRef.value === value;\n      });\n    } else if (isFileInput(ref)) {\n      if (isEmptyString(value) || isFileListObject(value)) {\n        ref.files = value;\n      } else {\n        ref.value = value;\n      }\n    } else if (isMultipleSelect(ref)) {\n      _toConsumableArray(ref.options).forEach(function (selectRef) {\n        return selectRef.selected = value.includes(selectRef.value);\n      });\n    } else if (isCheckBoxInput(ref) && options) {\n      options.length > 1 ? options.forEach(function (_ref29) {\n        var checkboxRef = _ref29.ref;\n        return checkboxRef.checked = value.includes(checkboxRef.value);\n      }) : options[0].ref.checked = !!value;\n    } else {\n      ref.value = value;\n    }\n\n    return !!type;\n  }, [isWeb]);\n\n  var setDirty = function setDirty(name) {\n    if (!fieldsRef.current[name] || !readFormStateRef.current.dirty && !readFormStateRef.current.dirtyFields) {\n      return false;\n    }\n\n    var isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\n    var previousDirtyFieldsLength = dirtyFieldsRef.current.size;\n    var isDirty = defaultRenderValuesRef.current[name] !== getFieldValue(fieldsRef.current, fieldsRef.current[name].ref);\n\n    if (isFieldArray) {\n      var fieldArrayName = name.substring(0, name.indexOf('['));\n      isDirty = getIsFieldsDifferent(getFieldValueByName(fieldsRef.current, fieldArrayName), get(defaultValuesRef.current, fieldArrayName));\n    }\n\n    var isDirtyChanged = (isFieldArray ? isDirtyRef.current : dirtyFieldsRef.current.has(name)) !== isDirty;\n\n    if (isDirty) {\n      dirtyFieldsRef.current.add(name);\n    } else {\n      dirtyFieldsRef.current.delete(name);\n    }\n\n    isDirtyRef.current = isFieldArray ? isDirty : !!dirtyFieldsRef.current.size;\n    return readFormStateRef.current.dirty ? isDirtyChanged : previousDirtyFieldsLength !== dirtyFieldsRef.current.size;\n  };\n\n  var setDirtyAndTouchedFields = useCallback(function (fieldName) {\n    if (setDirty(fieldName) || !get(touchedFieldsRef.current, fieldName) && readFormStateRef.current.touched) {\n      return !!set(touchedFieldsRef.current, fieldName, true);\n    }\n  }, []);\n  var setInternalValueBatch = useCallback(function (name, value, parentFieldName) {\n    var isValueArray = isArray(value);\n\n    for (var key in value) {\n      var fieldName = \"\".concat(parentFieldName || name).concat(isValueArray ? \"[\".concat(key, \"]\") : \".\".concat(key));\n\n      if (isObject(value[key])) {\n        setInternalValueBatch(name, value[key], fieldName);\n      }\n\n      var field = fieldsRef.current[fieldName];\n\n      if (field) {\n        setFieldValue(field, value[key]);\n        setDirtyAndTouchedFields(fieldName);\n      }\n    }\n  }, [setFieldValue, setDirtyAndTouchedFields]);\n  var setInternalValue = useCallback(function (name, value) {\n    var field = fieldsRef.current[name];\n\n    if (field) {\n      setFieldValue(field, value);\n      var output = setDirtyAndTouchedFields(name);\n\n      if (isBoolean(output)) {\n        return output;\n      }\n    } else if (!isPrimitive(value)) {\n      setInternalValueBatch(name, value);\n    }\n  }, [setDirtyAndTouchedFields, setFieldValue, setInternalValueBatch]);\n  var executeValidation = useCallback( /*#__PURE__*/function () {\n    var _ref30 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(name, skipReRender) {\n      var field, error;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              field = fieldsRef.current[name];\n\n              if (field) {\n                _context3.next = 3;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", false);\n\n            case 3:\n              _context3.next = 5;\n              return validateField(fieldsRef, validateAllFieldCriteria, field);\n\n            case 5:\n              error = _context3.sent;\n              shouldRenderBaseOnError(name, error, false, skipReRender);\n              return _context3.abrupt(\"return\", isEmptyObject(error));\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x12, _x13) {\n      return _ref30.apply(this, arguments);\n    };\n  }(), [shouldRenderBaseOnError, validateAllFieldCriteria]);\n  var executeSchemaValidation = useCallback( /*#__PURE__*/function () {\n    var _ref31 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(payload) {\n      var _yield$validateWithSc, errors, previousFormIsValid;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return validateWithSchema(validationSchema, validateAllFieldCriteria, getFieldValueByName(fieldsRef.current), validationResolver, validationContextRef.current);\n\n            case 2:\n              _yield$validateWithSc = _context4.sent;\n              errors = _yield$validateWithSc.errors;\n              previousFormIsValid = isValidRef.current;\n              isValidRef.current = isEmptyObject(errors);\n\n              if (isArray(payload)) {\n                payload.forEach(function (name) {\n                  var error = get(errors, name);\n\n                  if (error) {\n                    set(errorsRef.current, name, error);\n                  } else {\n                    unset(errorsRef.current, [name]);\n                  }\n                });\n                reRender();\n              } else {\n                shouldRenderBaseOnError(payload, get(errors, payload) ? _defineProperty({}, payload, get(errors, payload)) : {}, previousFormIsValid !== isValidRef.current);\n              }\n\n              return _context4.abrupt(\"return\", isEmptyObject(errorsRef.current));\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x14) {\n      return _ref31.apply(this, arguments);\n    };\n  }(), [reRender, shouldRenderBaseOnError, validateAllFieldCriteria, validationResolver, validationSchema]);\n  var triggerValidation = useCallback( /*#__PURE__*/function () {\n    var _ref33 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(payload) {\n      var fields, result;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              fields = payload || Object.keys(fieldsRef.current);\n\n              if (!shouldValidateCallback) {\n                _context6.next = 3;\n                break;\n              }\n\n              return _context6.abrupt(\"return\", executeSchemaValidation(fields));\n\n            case 3:\n              if (!isArray(fields)) {\n                _context6.next = 9;\n                break;\n              }\n\n              _context6.next = 6;\n              return Promise.all(fields.map( /*#__PURE__*/function () {\n                var _ref34 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(data) {\n                  return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          _context5.next = 2;\n                          return executeValidation(data, true);\n\n                        case 2:\n                          return _context5.abrupt(\"return\", _context5.sent);\n\n                        case 3:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, _callee5);\n                }));\n\n                return function (_x16) {\n                  return _ref34.apply(this, arguments);\n                };\n              }()));\n\n            case 6:\n              result = _context6.sent;\n              reRender();\n              return _context6.abrupt(\"return\", result.every(Boolean));\n\n            case 9:\n              _context6.next = 11;\n              return executeValidation(fields);\n\n            case 11:\n              return _context6.abrupt(\"return\", _context6.sent);\n\n            case 12:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function (_x15) {\n      return _ref33.apply(this, arguments);\n    };\n  }(), [executeSchemaValidation, executeValidation, reRender, shouldValidateCallback]);\n\n  var isFieldWatched = function isFieldWatched(name) {\n    var preFixName = (name.match(/\\w+/) || [])[0];\n    return isWatchAllRef.current || watchFieldsRef.current.has(name) || watchFieldsRef.current.has(preFixName) && !isKey(name) && fieldArrayNamesRef.current.has(preFixName);\n  };\n\n  function setValue(names, valueOrShouldValidate, shouldValidate) {\n    var shouldRender = false;\n    var isMultiple = isArray(names);\n    (isMultiple ? names : [names]).forEach(function (name) {\n      var isStringFieldName = isString(name);\n      shouldRender = setInternalValue(isStringFieldName ? name : Object.keys(name)[0], isStringFieldName ? valueOrShouldValidate : Object.values(name)[0]) || isMultiple ? true : isFieldWatched(name);\n    });\n\n    if (shouldRender || isMultiple) {\n      reRender();\n    }\n\n    if (shouldValidate || isMultiple && valueOrShouldValidate) {\n      triggerValidation(isMultiple ? undefined : names);\n    }\n  }\n\n  handleChangeRef.current = handleChangeRef.current ? handleChangeRef.current : /*#__PURE__*/function () {\n    var _ref36 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(_ref35) {\n      var type, target, name, fields, errors, field, currentError, error, isBlurEvent, shouldSkipValidation, shouldUpdateDirty, shouldUpdateState, _yield$validateWithSc2, _errors, previousFormIsValid;\n\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              type = _ref35.type, target = _ref35.target;\n              name = target ? target.name : '';\n              fields = fieldsRef.current;\n              errors = errorsRef.current;\n              field = fields[name];\n              currentError = get(errors, name);\n\n              if (field) {\n                _context7.next = 8;\n                break;\n              }\n\n              return _context7.abrupt(\"return\");\n\n            case 8:\n              isBlurEvent = type === EVENTS.BLUR;\n              shouldSkipValidation = skipValidation({\n                hasError: !!currentError,\n                isBlurEvent: isBlurEvent,\n                isOnSubmit: isOnSubmit,\n                isReValidateOnSubmit: isReValidateOnSubmit,\n                isOnBlur: isOnBlur,\n                isReValidateOnBlur: isReValidateOnBlur,\n                isSubmitted: isSubmittedRef.current\n              });\n              shouldUpdateDirty = setDirty(name);\n              shouldUpdateState = isFieldWatched(name) || shouldUpdateDirty;\n\n              if (isBlurEvent && !get(touchedFieldsRef.current, name) && readFormStateRef.current.touched) {\n                set(touchedFieldsRef.current, name, true);\n                shouldUpdateState = true;\n              }\n\n              if (!shouldSkipValidation) {\n                _context7.next = 15;\n                break;\n              }\n\n              return _context7.abrupt(\"return\", shouldUpdateState && reRender());\n\n            case 15:\n              if (!shouldValidateCallback) {\n                _context7.next = 26;\n                break;\n              }\n\n              _context7.next = 18;\n              return validateWithSchema(validationSchema, validateAllFieldCriteria, getFieldValueByName(fields), validationResolver, validationContextRef.current);\n\n            case 18:\n              _yield$validateWithSc2 = _context7.sent;\n              _errors = _yield$validateWithSc2.errors;\n              previousFormIsValid = isValidRef.current;\n              isValidRef.current = isEmptyObject(_errors);\n              error = get(_errors, name) ? _defineProperty({}, name, get(_errors, name)) : {};\n\n              if (previousFormIsValid !== isValidRef.current) {\n                shouldUpdateState = true;\n              }\n\n              _context7.next = 29;\n              break;\n\n            case 26:\n              _context7.next = 28;\n              return validateField(fieldsRef, validateAllFieldCriteria, field);\n\n            case 28:\n              error = _context7.sent;\n\n            case 29:\n              if (!shouldRenderBaseOnError(name, error) && shouldUpdateState) {\n                reRender();\n              }\n\n            case 30:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function (_x17) {\n      return _ref36.apply(this, arguments);\n    };\n  }();\n  var validateSchemaIsValid = useCallback(function () {\n    var values = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var fieldValues = isEmptyObject(defaultValuesRef.current) ? getFieldsValues(fieldsRef.current) : defaultValuesRef.current;\n    validateWithSchema(validationSchema, validateAllFieldCriteria, transformToNestObject(Object.assign(Object.assign({}, fieldValues), values)), validationResolver, validationContextRef.current).then(function (_ref38) {\n      var errors = _ref38.errors;\n      var previousFormIsValid = isValidRef.current;\n      isValidRef.current = isEmptyObject(errors);\n\n      if (previousFormIsValid !== isValidRef.current) {\n        reRender();\n      }\n    });\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [reRender, validateAllFieldCriteria, validationResolver]);\n\n  var removeFieldEventListener = function removeFieldEventListener(field, forceDelete) {\n    if (!isUndefined(handleChangeRef.current) && field) {\n      findRemovedFieldAndRemoveListener(fieldsRef.current, handleChangeRef.current, field, forceDelete);\n    }\n  };\n\n  var removeFieldEventListenerAndRef = useCallback(function (field, forceDelete) {\n    if (!field || field && isNameInFieldArray(fieldArrayNamesRef.current, field.ref.name) && !forceDelete) {\n      return;\n    }\n\n    removeFieldEventListener(field, forceDelete);\n    var name = field.ref.name;\n    errorsRef.current = unset(errorsRef.current, [name]);\n    touchedFieldsRef.current = unset(touchedFieldsRef.current, [name]);\n    defaultRenderValuesRef.current = unset(defaultRenderValuesRef.current, [name]);\n    [dirtyFieldsRef, fieldsWithValidationRef, validFieldsRef, watchFieldsRef].forEach(function (data) {\n      return data.current.delete(name);\n    });\n\n    if (readFormStateRef.current.isValid || readFormStateRef.current.touched) {\n      reRender();\n\n      if (shouldValidateCallback) {\n        validateSchemaIsValid();\n      }\n    }\n  }, [reRender, shouldValidateCallback, validateSchemaIsValid]);\n\n  function clearError(name) {\n    if (isUndefined(name)) {\n      errorsRef.current = {};\n    } else {\n      unset(errorsRef.current, isArray(name) ? name : [name]);\n    }\n\n    reRender();\n  }\n\n  var setInternalError = function setInternalError(_ref39) {\n    var name = _ref39.name,\n        type = _ref39.type,\n        types = _ref39.types,\n        message = _ref39.message,\n        preventRender = _ref39.preventRender;\n    var field = fieldsRef.current[name];\n\n    if (!isSameError(errorsRef.current[name], {\n      type: type,\n      message: message,\n      types: types\n    })) {\n      set(errorsRef.current, name, {\n        type: type,\n        types: types,\n        message: message,\n        ref: field ? field.ref : {},\n        isManual: true\n      });\n\n      if (!preventRender) {\n        reRender();\n      }\n    }\n  };\n\n  function setError(name) {\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var message = arguments.length > 2 ? arguments[2] : undefined;\n\n    if (isString(name)) {\n      setInternalError(Object.assign({\n        name: name\n      }, isObject(type) ? {\n        types: type,\n        type: ''\n      } : {\n        type: type,\n        message: message\n      }));\n    } else if (isArray(name)) {\n      name.forEach(function (error) {\n        return setInternalError(Object.assign(Object.assign({}, error), {\n          preventRender: true\n        }));\n      });\n      reRender();\n    }\n  }\n\n  function watch(fieldNames, defaultValue) {\n    var combinedDefaultValues = isUndefined(defaultValue) ? isUndefined(defaultValuesRef.current) ? {} : defaultValuesRef.current : defaultValue;\n    var fieldValues = getFieldsValues(fieldsRef.current, fieldNames);\n    var watchFields = watchFieldsRef.current;\n\n    if (isString(fieldNames)) {\n      return assignWatchFields(fieldValues, fieldNames, watchFields, combinedDefaultValues, fieldArrayNamesRef.current.has(fieldNames) ? watchFieldArrayRef.current[fieldNames] : undefined);\n    }\n\n    if (isArray(fieldNames)) {\n      return fieldNames.reduce(function (previous, name) {\n        var value;\n\n        if (isEmptyObject(fieldsRef.current) && isObject(combinedDefaultValues)) {\n          value = getDefaultValue(combinedDefaultValues, name);\n        } else {\n          value = assignWatchFields(fieldValues, name, watchFields, combinedDefaultValues);\n        }\n\n        return Object.assign(Object.assign({}, previous), _defineProperty({}, name, value));\n      }, {});\n    }\n\n    isWatchAllRef.current = true;\n    var result = !isEmptyObject(fieldValues) && fieldValues || defaultValue || defaultValuesRef.current;\n    return fieldNames && fieldNames.nest ? transformToNestObject(result) : result;\n  }\n\n  function unregister(names) {\n    if (!isEmptyObject(fieldsRef.current)) {\n      (isArray(names) ? names : [names]).forEach(function (fieldName) {\n        return removeFieldEventListenerAndRef(fieldsRef.current[fieldName], true);\n      });\n    }\n  }\n\n  function registerFieldsRef(ref) {\n    var validateOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!ref.name) {\n      // eslint-disable-next-line no-console\n      return console.warn('Missing name @', ref);\n    }\n\n    var name = ref.name,\n        type = ref.type,\n        value = ref.value;\n    var fieldAttributes = Object.assign({\n      ref: ref\n    }, validateOptions);\n    var fields = fieldsRef.current;\n    var isRadioOrCheckbox = isRadioInput(ref) || isCheckBoxInput(ref);\n    var currentField = fields[name];\n    var isEmptyDefaultValue = true;\n    var isFieldArray = false;\n    var defaultValue;\n\n    if (isRadioOrCheckbox ? currentField && isArray(currentField.options) && currentField.options.find(function (_ref40) {\n      var ref = _ref40.ref;\n      return value === ref.value;\n    }) : currentField) {\n      fields[name] = Object.assign(Object.assign({}, currentField), validateOptions);\n      return;\n    }\n\n    if (type) {\n      var mutationWatcher = onDomRemove(ref, function () {\n        return removeFieldEventListenerAndRef(fieldAttributes);\n      });\n      currentField = isRadioOrCheckbox ? Object.assign({\n        options: [].concat(_toConsumableArray(currentField && currentField.options || []), [{\n          ref: ref,\n          mutationWatcher: mutationWatcher\n        }]),\n        ref: {\n          type: type,\n          name: name\n        }\n      }, validateOptions) : Object.assign(Object.assign({}, fieldAttributes), {\n        mutationWatcher: mutationWatcher\n      });\n    } else {\n      currentField = fieldAttributes;\n    }\n\n    fields[name] = currentField;\n\n    if (!isEmptyObject(defaultValuesRef.current)) {\n      defaultValue = getDefaultValue(defaultValuesRef.current, name);\n      isEmptyDefaultValue = isUndefined(defaultValue);\n      isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\n\n      if (!isEmptyDefaultValue && !isFieldArray) {\n        setFieldValue(currentField, defaultValue);\n      }\n    }\n\n    if (shouldValidateCallback && !isFieldArray && readFormStateRef.current.isValid) {\n      validateSchemaIsValid();\n    } else if (!isEmptyObject(validateOptions)) {\n      fieldsWithValidationRef.current.add(name);\n\n      if (!isOnSubmit && readFormStateRef.current.isValid) {\n        validateField(fieldsRef, validateAllFieldCriteria, currentField).then(function (error) {\n          var previousFormIsValid = isValidRef.current;\n\n          if (isEmptyObject(error)) {\n            validFieldsRef.current.add(name);\n          } else {\n            isValidRef.current = false;\n          }\n\n          if (previousFormIsValid !== isValidRef.current) {\n            reRender();\n          }\n        });\n      }\n    }\n\n    if (!defaultRenderValuesRef.current[name] && !(isFieldArray && isEmptyDefaultValue)) {\n      defaultRenderValuesRef.current[name] = isEmptyDefaultValue ? getFieldValue(fields, currentField.ref) : defaultValue;\n    }\n\n    if (!type) {\n      return;\n    }\n\n    var fieldToAttachListener = isRadioOrCheckbox && currentField.options ? currentField.options[currentField.options.length - 1] : currentField;\n    attachEventListeners({\n      field: fieldToAttachListener,\n      isRadioOrCheckbox: isRadioOrCheckbox,\n      handleChange: handleChangeRef.current\n    });\n  }\n\n  function register(refOrValidationOptions, validationOptions) {\n    if (isWindowUndefined) {\n      return;\n    }\n\n    if (isString(refOrValidationOptions)) {\n      registerFieldsRef({\n        name: refOrValidationOptions\n      }, validationOptions);\n      return;\n    }\n\n    if (isObject(refOrValidationOptions) && 'name' in refOrValidationOptions) {\n      registerFieldsRef(refOrValidationOptions, validationOptions);\n      return;\n    }\n\n    return function (ref) {\n      return ref && registerFieldsRef(ref, refOrValidationOptions);\n    };\n  }\n\n  var handleSubmit = useCallback(function (callback) {\n    return /*#__PURE__*/function () {\n      var _ref41 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(e) {\n        var fieldErrors, fieldValues, fields, _yield$validateWithSc3, errors, values, _yield$Object$values$, _errors2, _values;\n\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                if (e) {\n                  e.preventDefault();\n                  e.persist();\n                }\n\n                fields = fieldsRef.current;\n\n                if (readFormStateRef.current.isSubmitting) {\n                  isSubmittingRef.current = true;\n                  reRender();\n                }\n\n                _context9.prev = 3;\n\n                if (!shouldValidateCallback) {\n                  _context9.next = 16;\n                  break;\n                }\n\n                fieldValues = getFieldsValues(fields);\n                _context9.next = 8;\n                return validateWithSchema(validationSchema, validateAllFieldCriteria, transformToNestObject(fieldValues), validationResolver, validationContextRef.current);\n\n              case 8:\n                _yield$validateWithSc3 = _context9.sent;\n                errors = _yield$validateWithSc3.errors;\n                values = _yield$validateWithSc3.values;\n                errorsRef.current = errors;\n                fieldErrors = errors;\n                fieldValues = values;\n                _context9.next = 23;\n                break;\n\n              case 16:\n                _context9.next = 18;\n                return Object.values(fields).reduce( /*#__PURE__*/function () {\n                  var _ref42 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(previous, field) {\n                    var resolvedPrevious, ref, name, fieldError;\n                    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n                      while (1) {\n                        switch (_context8.prev = _context8.next) {\n                          case 0:\n                            if (field) {\n                              _context8.next = 2;\n                              break;\n                            }\n\n                            return _context8.abrupt(\"return\", previous);\n\n                          case 2:\n                            _context8.next = 4;\n                            return previous;\n\n                          case 4:\n                            resolvedPrevious = _context8.sent;\n                            ref = field.ref, name = field.ref.name;\n\n                            if (fields[name]) {\n                              _context8.next = 8;\n                              break;\n                            }\n\n                            return _context8.abrupt(\"return\", Promise.resolve(resolvedPrevious));\n\n                          case 8:\n                            _context8.next = 10;\n                            return validateField(fieldsRef, validateAllFieldCriteria, field);\n\n                          case 10:\n                            fieldError = _context8.sent;\n\n                            if (!fieldError[name]) {\n                              _context8.next = 15;\n                              break;\n                            }\n\n                            set(resolvedPrevious.errors, name, fieldError[name]);\n                            validFieldsRef.current.delete(name);\n                            return _context8.abrupt(\"return\", Promise.resolve(resolvedPrevious));\n\n                          case 15:\n                            if (fieldsWithValidationRef.current.has(name)) {\n                              validFieldsRef.current.add(name);\n                            }\n\n                            resolvedPrevious.values[name] = getFieldValue(fields, ref);\n                            return _context8.abrupt(\"return\", Promise.resolve(resolvedPrevious));\n\n                          case 18:\n                          case \"end\":\n                            return _context8.stop();\n                        }\n                      }\n                    }, _callee8);\n                  }));\n\n                  return function (_x19, _x20) {\n                    return _ref42.apply(this, arguments);\n                  };\n                }(), Promise.resolve({\n                  errors: {},\n                  values: {}\n                }));\n\n              case 18:\n                _yield$Object$values$ = _context9.sent;\n                _errors2 = _yield$Object$values$.errors;\n                _values = _yield$Object$values$.values;\n                fieldErrors = _errors2;\n                fieldValues = _values;\n\n              case 23:\n                if (!isEmptyObject(fieldErrors)) {\n                  _context9.next = 29;\n                  break;\n                }\n\n                errorsRef.current = {};\n                _context9.next = 27;\n                return callback(transformToNestObject(fieldValues), e);\n\n              case 27:\n                _context9.next = 31;\n                break;\n\n              case 29:\n                if (submitFocusError && isWeb) {\n                  focusErrorField(fields, fieldErrors);\n                }\n\n                errorsRef.current = fieldErrors;\n\n              case 31:\n                _context9.prev = 31;\n                isSubmittedRef.current = true;\n                isSubmittingRef.current = false;\n                submitCountRef.current = submitCountRef.current + 1;\n                reRender();\n                return _context9.finish(31);\n\n              case 37:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, null, [[3,, 31, 37]]);\n      }));\n\n      return function (_x18) {\n        return _ref41.apply(this, arguments);\n      };\n    }();\n  }, [isWeb, reRender, shouldValidateCallback, submitFocusError, validateAllFieldCriteria, validationResolver, validationSchema]);\n\n  var resetRefs = function resetRefs() {\n    errorsRef.current = {};\n    fieldsRef.current = {};\n    touchedFieldsRef.current = {};\n    validFieldsRef.current = new Set();\n    fieldsWithValidationRef.current = new Set();\n    defaultRenderValuesRef.current = {};\n    watchFieldsRef.current = new Set();\n    dirtyFieldsRef.current = new Set();\n    isWatchAllRef.current = false;\n    isSubmittedRef.current = false;\n    isDirtyRef.current = false;\n    isValidRef.current = true;\n    submitCountRef.current = 0;\n  };\n\n  var reset = function reset(values) {\n    if (isWeb) {\n      for (var _i = 0, _Object$values = Object.values(fieldsRef.current); _i < _Object$values.length; _i++) {\n        var value = _Object$values[_i];\n\n        if (value && isHTMLElement(value.ref) && value.ref.closest) {\n          try {\n            value.ref.closest('form').reset();\n            break;\n          } catch (_a) {}\n        }\n      }\n    }\n\n    if (values) {\n      defaultValuesRef.current = values;\n    }\n\n    Object.values(resetFieldArrayFunctionRef.current).forEach(function (resetFieldArray) {\n      return isFunction(resetFieldArray) && resetFieldArray();\n    });\n    resetRefs();\n    reRender();\n  };\n\n  var getValues = function getValues(payload) {\n    var fieldValues = getFieldsValues(fieldsRef.current);\n    var outputValues = isEmptyObject(fieldValues) ? defaultValuesRef.current : fieldValues;\n    return payload && payload.nest ? transformToNestObject(outputValues) : outputValues;\n  };\n\n  useEffect(function () {\n    return function () {\n      isUnMount.current = true;\n      fieldsRef.current && Object.values(fieldsRef.current).forEach(function (field) {\n        return removeFieldEventListenerAndRef(field, true);\n      });\n    };\n  }, [removeFieldEventListenerAndRef]);\n\n  if (!shouldValidateCallback) {\n    isValidRef.current = validFieldsRef.current.size >= fieldsWithValidationRef.current.size && isEmptyObject(errorsRef.current);\n  }\n\n  var formState = {\n    dirty: isDirtyRef.current,\n    dirtyFields: dirtyFieldsRef.current,\n    isSubmitted: isSubmittedRef.current,\n    submitCount: submitCountRef.current,\n    touched: touchedFieldsRef.current,\n    isSubmitting: isSubmittingRef.current,\n    isValid: isOnSubmit ? isSubmittedRef.current && isEmptyObject(errorsRef.current) : isValidRef.current\n  };\n  var control = Object.assign(Object.assign({\n    register: register,\n    unregister: unregister,\n    removeFieldEventListener: removeFieldEventListener,\n    getValues: getValues,\n    setValue: setValue,\n    reRender: reRender,\n    triggerValidation: triggerValidation\n  }, shouldValidateCallback ? {\n    validateSchemaIsValid: validateSchemaIsValid\n  } : {}), {\n    formState: formState,\n    mode: {\n      isOnBlur: isOnBlur,\n      isOnSubmit: isOnSubmit\n    },\n    reValidateMode: {\n      isReValidateOnBlur: isReValidateOnBlur,\n      isReValidateOnSubmit: isReValidateOnSubmit\n    },\n    errorsRef: errorsRef,\n    touchedFieldsRef: touchedFieldsRef,\n    fieldsRef: fieldsRef,\n    resetFieldArrayFunctionRef: resetFieldArrayFunctionRef,\n    validFieldsRef: validFieldsRef,\n    fieldsWithValidationRef: fieldsWithValidationRef,\n    watchFieldArrayRef: watchFieldArrayRef,\n    fieldArrayNamesRef: fieldArrayNamesRef,\n    isDirtyRef: isDirtyRef,\n    readFormStateRef: readFormStateRef,\n    defaultValuesRef: defaultValuesRef\n  });\n  return {\n    watch: watch,\n    control: control,\n    handleSubmit: handleSubmit,\n    setValue: useCallback(setValue, [reRender, setInternalValue, triggerValidation]),\n    triggerValidation: triggerValidation,\n    getValues: useCallback(getValues, []),\n    reset: useCallback(reset, []),\n    register: useCallback(register, [defaultValuesRef.current, defaultRenderValuesRef.current, watchFieldArrayRef.current]),\n    unregister: useCallback(unregister, []),\n    clearError: useCallback(clearError, []),\n    setError: useCallback(setError, []),\n    errors: errorsRef.current,\n    formState: isProxyEnabled ? new Proxy(formState, {\n      get: function get(obj, prop) {\n        if (prop in obj) {\n          readFormStateRef.current[prop] = true;\n          return obj[prop];\n        }\n\n        return {};\n      }\n    }) : formState\n  };\n}\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\n\nvar FormGlobalContext = createContext(null);\n\nfunction useFormContext() {\n  var context = useContext(FormGlobalContext);\n  if (!isUndefined(context)) return context;\n  throw new Error('Missing FormContext');\n}\n\nfunction FormContext(_a) {\n  var children = _a.children,\n      formState = _a.formState,\n      errors = _a.errors,\n      restMethods = __rest(_a, [\"children\", \"formState\", \"errors\"]);\n\n  return createElement(FormGlobalContext.Provider, {\n    value: Object.assign(Object.assign({}, restMethods), {\n      formState: formState,\n      errors: errors\n    })\n  }, children);\n}\n\nvar generateId = function generateId() {\n  var d = typeof performance === UNDEFINED ? Date.now() : performance.now() * 1000;\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = (Math.random() * 16 + d) % 16 | 0;\n    return (c == 'x' ? r : r & 0x3 | 0x8).toString(16);\n  });\n};\n\nvar appendId = function appendId(value, keyName) {\n  return Object.assign(Object.assign({}, isObject(value) ? value : {\n    value: value\n  }), _defineProperty({}, keyName, generateId()));\n};\n\nvar mapIds = function mapIds(data, keyName) {\n  return (isArray(data) ? data : []).map(function (value) {\n    return appendId(value, keyName);\n  });\n};\n\nvar removeAt = function removeAt(data, index) {\n  return [].concat(_toConsumableArray(data.slice(0, index)), _toConsumableArray(data.slice(index + 1)));\n};\n\nvar removeArrayAt = function removeArrayAt(data, index) {\n  return isUndefined(index) ? [] : isArray(index) ? index.reduce(function (_ref43, i) {\n    var result = _ref43.result,\n        previousIndex = _ref43.previousIndex;\n    return {\n      result: previousIndex > -1 ? removeAt(result, previousIndex < i ? i - 1 : i) : removeAt(result, i),\n      previousIndex: i\n    };\n  }, {\n    result: data,\n    previousIndex: -1\n  }).result : removeAt(data, index);\n};\n\nvar moveArrayAt = function moveArrayAt(data, from, to) {\n  return isArray(data) ? data.splice(to, 0, data.splice(from, 1)[0]) : [];\n};\n\nvar swapArrayAt = function swapArrayAt(fields, indexA, indexB) {\n  var _ref44;\n\n  return isArray(fields) && (_ref44 = [fields[indexB], fields[indexA]], fields[indexA] = _ref44[0], fields[indexB] = _ref44[1], _ref44);\n};\n\nvar prependAt = function prependAt(data, value) {\n  return [].concat(_toConsumableArray(isArray(value) ? value : [value || null]), _toConsumableArray(data));\n};\n\nvar insertAt = function insertAt(data, index, value) {\n  return [].concat(_toConsumableArray(data.slice(0, index)), _toConsumableArray(isArray(value) ? value : [value || null]), _toConsumableArray(data.slice(index)));\n};\n\nvar fillEmptyArray = function fillEmptyArray(value) {\n  return isArray(value) ? Array(value.length).fill(null) : undefined;\n};\n\nvar useEffect$1 = React.useEffect,\n    useCallback$1 = React.useCallback,\n    useRef$1 = React.useRef,\n    useState$1 = React.useState;\n\nvar useFieldArray = function useFieldArray(_ref45) {\n  var control = _ref45.control,\n      name = _ref45.name,\n      _ref45$keyName = _ref45.keyName,\n      keyName = _ref45$keyName === void 0 ? 'id' : _ref45$keyName;\n  var methods = useFormContext();\n\n  var _ref46 = control || methods.control,\n      resetFieldArrayFunctionRef = _ref46.resetFieldArrayFunctionRef,\n      fieldArrayNamesRef = _ref46.fieldArrayNamesRef,\n      reRender = _ref46.reRender,\n      fieldsRef = _ref46.fieldsRef,\n      getValues = _ref46.getValues,\n      defaultValuesRef = _ref46.defaultValuesRef,\n      removeFieldEventListener = _ref46.removeFieldEventListener,\n      errorsRef = _ref46.errorsRef,\n      isDirtyRef = _ref46.isDirtyRef,\n      touchedFieldsRef = _ref46.touchedFieldsRef,\n      readFormStateRef = _ref46.readFormStateRef,\n      watchFieldArrayRef = _ref46.watchFieldArrayRef,\n      validFieldsRef = _ref46.validFieldsRef,\n      fieldsWithValidationRef = _ref46.fieldsWithValidationRef,\n      validateSchemaIsValid = _ref46.validateSchemaIsValid;\n\n  var memoizedDefaultValues = useRef$1(get(defaultValuesRef.current, name, []));\n\n  var _useState$ = useState$1(mapIds(memoizedDefaultValues.current, keyName)),\n      _useState$2 = _slicedToArray(_useState$, 2),\n      fields = _useState$2[0],\n      setField = _useState$2[1];\n\n  var allFields = useRef$1(fields);\n\n  var appendValueWithKey = function appendValueWithKey(value) {\n    return value.map(function (v) {\n      return appendId(v, keyName);\n    });\n  };\n\n  allFields.current = fields;\n\n  var commonTasks = function commonTasks(fieldsValues) {\n    watchFieldArrayRef.current = Object.assign(Object.assign({}, watchFieldArrayRef.current), _defineProperty({}, name, fieldsValues));\n    setField(fieldsValues);\n\n    if (readFormStateRef.current.isValid && validateSchemaIsValid) {\n      validateSchemaIsValid(_defineProperty({}, name, fieldsValues));\n    }\n  };\n\n  var resetFields = function resetFields(flagOrFields) {\n    if (readFormStateRef.current.dirty) {\n      isDirtyRef.current = isUndefined(flagOrFields) ? true : getIsFieldsDifferent(flagOrFields, memoizedDefaultValues.current);\n    }\n\n    for (var key in fieldsRef.current) {\n      if (isMatchFieldArrayName(key, name) && fieldsRef.current[key]) {\n        removeFieldEventListener(fieldsRef.current[key], true);\n      }\n    }\n  };\n\n  var mapCurrentFieldsValueWithState = function mapCurrentFieldsValueWithState() {\n    var currentFieldsValue = getValues({\n      nest: true\n    })[name];\n\n    if (isArray(currentFieldsValue)) {\n      for (var i = 0; i < currentFieldsValue.length; i++) {\n        fields[i] = Object.assign(Object.assign({}, fields[i]), currentFieldsValue[i]);\n      }\n    }\n  };\n\n  var append = function append(value) {\n    mapCurrentFieldsValueWithState();\n\n    if (readFormStateRef.current.dirty) {\n      isDirtyRef.current = true;\n    }\n\n    commonTasks([].concat(_toConsumableArray(allFields.current), _toConsumableArray(isArray(value) ? appendValueWithKey(value) : [appendId(value, keyName)])));\n  };\n\n  var prepend = function prepend(value) {\n    mapCurrentFieldsValueWithState();\n    resetFields();\n    commonTasks(prependAt(allFields.current, isArray(value) ? appendValueWithKey(value) : [appendId(value, keyName)]));\n\n    if (errorsRef.current[name]) {\n      errorsRef.current[name] = prependAt(errorsRef.current[name], fillEmptyArray(value));\n    }\n\n    if (readFormStateRef.current.touched && touchedFieldsRef.current[name]) {\n      touchedFieldsRef.current[name] = prependAt(touchedFieldsRef.current[name], fillEmptyArray(value));\n    }\n  };\n\n  var remove = function remove(index) {\n    if (!isUndefined(index)) {\n      mapCurrentFieldsValueWithState();\n    }\n\n    resetFields(removeArrayAt(getFieldValueByName(fieldsRef.current, name), index));\n    commonTasks(removeArrayAt(allFields.current, index));\n\n    if (errorsRef.current[name]) {\n      errorsRef.current[name] = removeArrayAt(errorsRef.current[name], index);\n\n      if (!errorsRef.current[name].filter(Boolean).length) {\n        delete errorsRef.current[name];\n      }\n    }\n\n    if (readFormStateRef.current.touched && touchedFieldsRef.current[name]) {\n      touchedFieldsRef.current[name] = removeArrayAt(touchedFieldsRef.current[name], index);\n    }\n\n    if (readFormStateRef.current.isValid && !validateSchemaIsValid) {\n      var fieldIndex = -1;\n      var isFound = false;\n      var isIndexUndefined = isUndefined(index);\n\n      while (fieldIndex++ < fields.length) {\n        var isLast = fieldIndex === fields.length - 1;\n        var isCurrentIndex = (isArray(index) ? index : [index]).indexOf(fieldIndex) >= 0;\n\n        if (isCurrentIndex || isIndexUndefined) {\n          isFound = true;\n        }\n\n        if (!isFound) {\n          continue;\n        }\n\n        for (var key in fields[fieldIndex]) {\n          var currentFieldName = \"\".concat(name, \"[\").concat(fieldIndex, \"].\").concat(key);\n\n          if (isCurrentIndex || isLast || isIndexUndefined) {\n            validFieldsRef.current.delete(currentFieldName);\n            fieldsWithValidationRef.current.delete(currentFieldName);\n          } else {\n            var previousFieldName = \"\".concat(name, \"[\").concat(fieldIndex - 1, \"].\").concat(key);\n\n            if (validFieldsRef.current.has(currentFieldName)) {\n              validFieldsRef.current.add(previousFieldName);\n            }\n\n            if (fieldsWithValidationRef.current.has(currentFieldName)) {\n              fieldsWithValidationRef.current.add(previousFieldName);\n            }\n          }\n        }\n      }\n\n      reRender();\n    }\n  };\n\n  var insert = function insert(index, value) {\n    mapCurrentFieldsValueWithState();\n    resetFields(insertAt(getFieldValueByName(fieldsRef.current, name), index));\n    commonTasks(insertAt(allFields.current, index, isArray(value) ? appendValueWithKey(value) : [appendId(value, keyName)]));\n\n    if (errorsRef.current[name]) {\n      errorsRef.current[name] = insertAt(errorsRef.current[name], index, fillEmptyArray(value));\n    }\n\n    if (readFormStateRef.current.touched && touchedFieldsRef.current[name]) {\n      touchedFieldsRef.current[name] = insertAt(touchedFieldsRef.current[name], index, fillEmptyArray(value));\n    }\n  };\n\n  var swap = function swap(indexA, indexB) {\n    mapCurrentFieldsValueWithState();\n    var fieldValues = getFieldValueByName(fieldsRef.current, name);\n    swapArrayAt(fieldValues, indexA, indexB);\n    resetFields(fieldValues);\n    swapArrayAt(allFields.current, indexA, indexB);\n    commonTasks(_toConsumableArray(allFields.current));\n\n    if (errorsRef.current[name]) {\n      swapArrayAt(errorsRef.current[name], indexA, indexB);\n    }\n\n    if (readFormStateRef.current.touched && touchedFieldsRef.current[name]) {\n      swapArrayAt(touchedFieldsRef.current[name], indexA, indexB);\n    }\n  };\n\n  var move = function move(from, to) {\n    mapCurrentFieldsValueWithState();\n    var fieldValues = getFieldValueByName(fieldsRef.current, name);\n    moveArrayAt(fieldValues, from, to);\n    resetFields(fieldValues);\n    moveArrayAt(allFields.current, from, to);\n    commonTasks(_toConsumableArray(allFields.current));\n\n    if (errorsRef.current[name]) {\n      moveArrayAt(errorsRef.current[name], from, to);\n    }\n\n    if (readFormStateRef.current.touched && touchedFieldsRef.current[name]) {\n      moveArrayAt(touchedFieldsRef.current[name], from, to);\n    }\n  };\n\n  var reset = function reset() {\n    resetFields();\n    memoizedDefaultValues.current = get(defaultValuesRef.current, name, []);\n    setField(mapIds(memoizedDefaultValues.current, keyName));\n  };\n\n  useEffect$1(function () {\n    var resetFunctions = resetFieldArrayFunctionRef.current;\n    var fieldArrayNames = fieldArrayNamesRef.current;\n    fieldArrayNames.add(name);\n    resetFunctions[name] = reset;\n    watchFieldArrayRef.current = Object.assign(Object.assign({}, watchFieldArrayRef.current), _defineProperty({}, name, fields));\n    return function () {\n      resetFields();\n      delete resetFunctions[name];\n      fieldArrayNames.delete(name);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return {\n    swap: useCallback$1(swap, []),\n    move: useCallback$1(move, []),\n    prepend: useCallback$1(prepend, []),\n    append: useCallback$1(append, []),\n    remove: useCallback$1(remove, []),\n    insert: useCallback$1(insert, []),\n    fields: fields\n  };\n};\n\nvar getInputValue = function getInputValue(event, isCheckboxInput) {\n  return isPrimitive(event) || !isObject(event.target) || isObject(event.target) && !event.type ? event : isCheckboxInput || isUndefined(event.target.value) ? event.target.checked : event.target.value;\n};\n\nvar Controller = function Controller(_a) {\n  var name = _a.name,\n      rules = _a.rules,\n      InnerComponent = _a.as,\n      onBlur = _a.onBlur,\n      onChange = _a.onChange,\n      _a$onChangeName = _a.onChangeName,\n      onChangeName = _a$onChangeName === void 0 ? VALIDATION_MODE.onChange : _a$onChangeName,\n      _a$onBlurName = _a.onBlurName,\n      onBlurName = _a$onBlurName === void 0 ? VALIDATION_MODE.onBlur : _a$onBlurName,\n      valueName = _a.valueName,\n      defaultValue = _a.defaultValue,\n      control = _a.control,\n      rest = __rest(_a, [\"name\", \"rules\", \"as\", \"onBlur\", \"onChange\", \"onChangeName\", \"onBlurName\", \"valueName\", \"defaultValue\", \"control\"]);\n\n  var methods = useFormContext();\n\n  var _ref47 = control || methods.control,\n      defaultValuesRef = _ref47.defaultValuesRef,\n      setValue = _ref47.setValue,\n      register = _ref47.register,\n      unregister = _ref47.unregister,\n      errorsRef = _ref47.errorsRef,\n      removeFieldEventListener = _ref47.removeFieldEventListener,\n      triggerValidation = _ref47.triggerValidation,\n      _ref47$mode = _ref47.mode,\n      isOnSubmit = _ref47$mode.isOnSubmit,\n      isOnBlur = _ref47$mode.isOnBlur,\n      _ref47$reValidateMode = _ref47.reValidateMode,\n      isReValidateOnBlur = _ref47$reValidateMode.isReValidateOnBlur,\n      isReValidateOnSubmit = _ref47$reValidateMode.isReValidateOnSubmit,\n      isSubmitted = _ref47.formState.isSubmitted,\n      fieldsRef = _ref47.fieldsRef,\n      fieldArrayNamesRef = _ref47.fieldArrayNamesRef;\n\n  var _useState$3 = useState$2(isUndefined(defaultValue) ? get(defaultValuesRef.current, name) : defaultValue),\n      _useState$4 = _slicedToArray(_useState$3, 2),\n      value = _useState$4[0],\n      setInputStateValue = _useState$4[1];\n\n  var valueRef = useRef$2(value);\n  var isCheckboxInput = isBoolean(value);\n\n  var shouldValidate = function shouldValidate() {\n    return !skipValidation({\n      hasError: !!get(errorsRef.current, name),\n      isOnBlur: isOnBlur,\n      isOnSubmit: isOnSubmit,\n      isReValidateOnBlur: isReValidateOnBlur,\n      isReValidateOnSubmit: isReValidateOnSubmit,\n      isSubmitted: isSubmitted\n    });\n  };\n\n  var commonTask = function commonTask(event) {\n    var data = getInputValue(event, isCheckboxInput);\n    setInputStateValue(data);\n    valueRef.current = data;\n    return data;\n  };\n\n  var eventWrapper = function eventWrapper(event) {\n    return function () {\n      for (var _len = arguments.length, arg = new Array(_len), _key = 0; _key < _len; _key++) {\n        arg[_key] = arguments[_key];\n      }\n\n      return setValue(name, commonTask(event(arg)), shouldValidate());\n    };\n  };\n\n  var handleChange = function handleChange(event) {\n    var data = commonTask(event);\n    setValue(name, data, shouldValidate());\n  };\n\n  var registerField = function registerField() {\n    if (isNameInFieldArray(fieldArrayNamesRef.current, name) && fieldsRef.current[name]) {\n      removeFieldEventListener(fieldsRef.current[name], true);\n    }\n\n    register(Object.defineProperty({\n      name: name\n    }, VALUE, {\n      set: function set(data) {\n        setInputStateValue(data);\n        valueRef.current = data;\n      },\n      get: function get() {\n        return valueRef.current;\n      }\n    }), Object.assign({}, rules));\n  };\n\n  useEffect$2(function () {\n    if (!fieldsRef.current[name]) {\n      registerField();\n      setInputStateValue(isUndefined(defaultValue) ? get(defaultValuesRef.current, name) : defaultValue);\n    }\n  });\n  useEffect$2(function () {\n    registerField();\n    return function () {\n      if (!isNameInFieldArray(fieldArrayNamesRef.current, name)) {\n        unregister(name);\n      }\n    };\n  }, [name]);\n  var shouldReValidateOnBlur = isOnBlur || isReValidateOnBlur;\n  var props = Object.assign(Object.assign(Object.assign(Object.assign({\n    name: name\n  }, rest), onChange ? _defineProperty({}, onChangeName, eventWrapper(onChange)) : _defineProperty({}, onChangeName, handleChange)), onBlur || shouldReValidateOnBlur ? _defineProperty({}, onBlurName, function () {\n    if (onBlur) {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      onBlur(args);\n    }\n\n    if (shouldReValidateOnBlur) {\n      triggerValidation(name);\n    }\n  }) : {}), _defineProperty({}, valueName || (isCheckboxInput ? 'checked' : VALUE), value));\n  return isValidElement(InnerComponent) ? cloneElement(InnerComponent, props) : createElement(InnerComponent, props);\n};\n\nvar ErrorMessage = function ErrorMessage(_a) {\n  var InnerComponent = _a.as,\n      errors = _a.errors,\n      name = _a.name,\n      message = _a.message,\n      children = _a.children,\n      rest = __rest(_a, [\"as\", \"errors\", \"name\", \"message\", \"children\"]);\n\n  var methods = useFormContext();\n  var error = get(errors || methods.errors, name);\n\n  if (!error) {\n    return null;\n  }\n\n  var messageFromRegister = error.message,\n      types = error.types;\n  var props = Object.assign(Object.assign({}, InnerComponent ? rest : {}), {\n    children: children ? children({\n      message: messageFromRegister || message,\n      messages: types\n    }) : messageFromRegister || message\n  });\n  return InnerComponent ? isValidElement(InnerComponent) ? cloneElement(InnerComponent, props) : createElement(InnerComponent, props) : createElement(Fragment, Object.assign({}, props));\n};\n\nexport { Controller, ErrorMessage, FormContext, useFieldArray, useForm, useFormContext };","map":{"version":3,"sources":["/home/fabricio7p/Documents/Projects/Ikebana_production/node_modules/react-hook-form/dist/react-hook-form.es.js"],"names":["React","createContext","useContext","createElement","useState","useState$2","useRef","useRef$2","useEffect","useEffect$2","isValidElement","cloneElement","Fragment","isUndefined","val","undefined","isNullOrUndefined","value","isArray","Array","isObjectType","isObject","isHTMLElement","nodeType","Node","ELEMENT_NODE","VALIDATION_MODE","onBlur","onChange","onSubmit","VALUE","UNDEFINED","EVENTS","BLUR","CHANGE","INPUT","INPUT_VALIDATION_RULES","max","min","maxLength","minLength","pattern","required","validate","REGEX_IS_DEEP_PROP","REGEX_IS_PLAIN_PROP","REGEX_PROP_NAME","REGEX_ESCAPE_CHAR","attachEventListeners","field","handleChange","isRadioOrCheckbox","ref","addEventListener","isKey","test","stringToPath","string","result","replace","match","number","quote","push","set","object","path","index","tempPath","length","lastIndex","key","newValue","objValue","isNaN","transformToNestObject","data","Object","entries","reduce","previous","assign","get","obj","defaultValue","split","filter","Boolean","focusErrorField","fields","fieldErrors","focus","options","removeAllEventListeners","validateWithStateUpdate","removeEventListener","isRadioInput","element","type","isCheckBoxInput","isDetached","HTMLElement","DOCUMENT_NODE","parentNode","isEmptyObject","keys","castPath","baseGet","updatePath","baseSlice","array","start","end","parent","baseUnset","childObject","previousObjRef","k","slice","objectRef","currentPaths","currentPathsLength","item","unset","paths","forEach","findRemovedFieldAndRemoveListener","forceDelete","name","mutationWatcher","fieldValue","disconnect","defaultReturn","isValid","getRadioValue","checked","getMultipleSelectValue","selected","map","isFileInput","isMultipleSelect","isEmptyString","defaultResult","validResult","getCheckboxValue","values","attributes","getFieldValue","files","isString","getFieldsValues","search","output","isSearchString","isSearchArray","isNest","nest","startsWith","find","compareObject","objectA","objectB","isSameError","error","types","message","shouldUpdateWithError","errors","validFields","fieldsWithValidation","isFieldValid","isFormValid","currentFieldError","existFieldError","has","isManual","isRegex","RegExp","getValueAndMessage","validationData","isPureObject","isFunction","isBoolean","getValidateError","isStringValue","appendErrors","validateAllFieldCriteria","validateField","fieldsRef","current","isRadio","isCheckBox","isEmpty","appendErrorsCurry","bind","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","requiredValue","requiredMessage","maxValue","maxMessage","minValue","minMessage","valueNumber","valueAsNumber","parseFloat","exceedMin","valueDate","valueAsDate","Date","maxLengthValue","minLengthValue","inputLength","toString","patternValue","patternMessage","validateRef","validateError","validateFunctions","Promise","resolve","validateResult","validationResult","parseErrorSchema","inner","validateWithSchema","validationSchema","validationResolver","context","abortEarly","getDefaultValue","defaultValues","flatArray","list","a","b","concat","isPrimitive","getPath","getInnerPath","pathWithIndex","getPath$1","parentPath","assignWatchFields","fieldValues","fieldName","watchFields","combinedDefaultValues","watchFieldArray","add","skipValidation","hasError","isBlurEvent","isOnSubmit","isReValidateOnSubmit","isOnBlur","isReValidateOnBlur","isSubmitted","getFieldValueByName","results","getIsFieldsDifferent","referenceArray","differenceArray","isMatch","i","dataA","dataB","isMatchFieldArrayName","searchName","isNameInFieldArray","names","prev","isFileListObject","FileList","onDomRemove","onDetachCallback","observer","MutationObserver","observe","window","document","childList","subtree","modeChecker","mode","isOnChange","useCallback","useForm","reValidateMode","validationContext","submitFocusError","validateCriteriaMode","errorsRef","touchedFieldsRef","watchFieldArrayRef","watchFieldsRef","Set","dirtyFieldsRef","fieldsWithValidationRef","validFieldsRef","isValidRef","defaultRenderValuesRef","defaultValuesRef","isUnMount","isWatchAllRef","isSubmittedRef","isDirtyRef","submitCountRef","isSubmittingRef","handleChangeRef","resetFieldArrayFunctionRef","validationContextRef","fieldArrayNamesRef","render","isWindowUndefined","shouldValidateCallback","isWeb","isProxyEnabled","readFormStateRef","dirty","dirtyFields","submitCount","touched","isSubmitting","reRender","shouldRenderBaseOnError","shouldRender","skipReRender","shouldReRender","delete","setFieldValue","rawValue","radioRef","selectRef","includes","checkboxRef","setDirty","isFieldArray","previousDirtyFieldsLength","size","isDirty","fieldArrayName","substring","indexOf","isDirtyChanged","setDirtyAndTouchedFields","setInternalValueBatch","parentFieldName","isValueArray","setInternalValue","executeValidation","executeSchemaValidation","payload","previousFormIsValid","triggerValidation","all","every","isFieldWatched","preFixName","setValue","valueOrShouldValidate","shouldValidate","isMultiple","isStringFieldName","target","currentError","shouldSkipValidation","shouldUpdateDirty","shouldUpdateState","validateSchemaIsValid","then","removeFieldEventListener","removeFieldEventListenerAndRef","clearError","setInternalError","preventRender","setError","watch","fieldNames","unregister","registerFieldsRef","validateOptions","console","warn","fieldAttributes","currentField","isEmptyDefaultValue","fieldToAttachListener","register","refOrValidationOptions","validationOptions","handleSubmit","callback","e","preventDefault","persist","resolvedPrevious","fieldError","resetRefs","reset","closest","_a","resetFieldArray","getValues","outputValues","formState","control","Proxy","prop","__rest","s","t","p","prototype","hasOwnProperty","call","getOwnPropertySymbols","propertyIsEnumerable","FormGlobalContext","useFormContext","Error","FormContext","children","restMethods","Provider","generateId","d","performance","now","c","r","Math","random","appendId","keyName","mapIds","removeAt","removeArrayAt","previousIndex","moveArrayAt","from","to","splice","swapArrayAt","indexA","indexB","prependAt","insertAt","fillEmptyArray","fill","useEffect$1","useCallback$1","useRef$1","useState$1","useFieldArray","methods","memoizedDefaultValues","setField","allFields","appendValueWithKey","v","commonTasks","fieldsValues","resetFields","flagOrFields","mapCurrentFieldsValueWithState","currentFieldsValue","append","prepend","remove","fieldIndex","isFound","isIndexUndefined","isLast","isCurrentIndex","currentFieldName","previousFieldName","insert","swap","move","resetFunctions","fieldArrayNames","getInputValue","event","isCheckboxInput","Controller","rules","InnerComponent","as","onChangeName","onBlurName","valueName","rest","setInputStateValue","valueRef","commonTask","eventWrapper","arg","registerField","defineProperty","shouldReValidateOnBlur","props","args","ErrorMessage","messageFromRegister","messages"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { createContext, useContext, createElement, useState as useState$2, useRef as useRef$2, useEffect as useEffect$2, isValidElement, cloneElement, Fragment } from 'react';\n\nvar isUndefined = (val) => val === undefined;\n\nvar isNullOrUndefined = (value) => value === null || isUndefined(value);\n\nvar isArray = (value) => Array.isArray(value);\n\nconst isObjectType = (value) => typeof value === 'object';\r\nvar isObject = (value) => !isNullOrUndefined(value) && !isArray(value) && isObjectType(value);\n\nvar isHTMLElement = (value) => isObject(value) && value.nodeType === Node.ELEMENT_NODE;\n\nconst VALIDATION_MODE = {\r\n    onBlur: 'onBlur',\r\n    onChange: 'onChange',\r\n    onSubmit: 'onSubmit',\r\n};\r\nconst VALUE = 'value';\r\nconst UNDEFINED = 'undefined';\r\nconst EVENTS = {\r\n    BLUR: 'blur',\r\n    CHANGE: 'change',\r\n    INPUT: 'input',\r\n};\r\nconst INPUT_VALIDATION_RULES = {\r\n    max: 'max',\r\n    min: 'min',\r\n    maxLength: 'maxLength',\r\n    minLength: 'minLength',\r\n    pattern: 'pattern',\r\n    required: 'required',\r\n    validate: 'validate',\r\n};\r\nconst REGEX_IS_DEEP_PROP = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/;\r\nconst REGEX_IS_PLAIN_PROP = /^\\w*$/;\r\nconst REGEX_PROP_NAME = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\r\nconst REGEX_ESCAPE_CHAR = /\\\\(\\\\)?/g;\n\nfunction attachEventListeners({ field, handleChange, isRadioOrCheckbox, }) {\r\n    const { ref } = field;\r\n    if (isHTMLElement(ref) && ref.addEventListener && handleChange) {\r\n        ref.addEventListener(isRadioOrCheckbox ? EVENTS.CHANGE : EVENTS.INPUT, handleChange);\r\n        ref.addEventListener(EVENTS.BLUR, handleChange);\r\n    }\r\n}\n\nvar isKey = (value) => !isArray(value) &&\r\n    (REGEX_IS_PLAIN_PROP.test(value) || !REGEX_IS_DEEP_PROP.test(value));\n\nvar stringToPath = (string) => {\r\n    const result = [];\r\n    string.replace(REGEX_PROP_NAME, (match, number, quote, string) => {\r\n        result.push(quote ? string.replace(REGEX_ESCAPE_CHAR, '$1') : number || match);\r\n    });\r\n    return result;\r\n};\n\nfunction set(object, path, value) {\r\n    let index = -1;\r\n    const tempPath = isKey(path) ? [path] : stringToPath(path);\r\n    const length = tempPath.length;\r\n    const lastIndex = length - 1;\r\n    while (++index < length) {\r\n        const key = tempPath[index];\r\n        let newValue = value;\r\n        if (index !== lastIndex) {\r\n            const objValue = object[key];\r\n            newValue =\r\n                isObject(objValue) || isArray(objValue)\r\n                    ? objValue\r\n                    : !isNaN(tempPath[index + 1])\r\n                        ? []\r\n                        : {};\r\n        }\r\n        object[key] = newValue;\r\n        object = object[key];\r\n    }\r\n    return object;\r\n}\n\nvar transformToNestObject = (data) => Object.entries(data).reduce((previous, [key, value]) => {\r\n    if (!isKey(key)) {\r\n        set(previous, key, value);\r\n        return previous;\r\n    }\r\n    return Object.assign(Object.assign({}, previous), { [key]: value });\r\n}, {});\n\nvar get = (obj, path, defaultValue) => {\r\n    const result = path\r\n        .split(/[,[\\].]+?/)\r\n        .filter(Boolean)\r\n        .reduce((result, key) => (isNullOrUndefined(result) ? result : result[key]), obj);\r\n    return isUndefined(result) || result === obj\r\n        ? obj[path] || defaultValue\r\n        : result;\r\n};\n\nvar focusErrorField = (fields, fieldErrors) => {\r\n    for (const key in fields) {\r\n        if (get(fieldErrors, key)) {\r\n            const field = fields[key];\r\n            if (field) {\r\n                if (isHTMLElement(field.ref) && field.ref.focus) {\r\n                    field.ref.focus();\r\n                    break;\r\n                }\r\n                else if (field.options) {\r\n                    field.options[0].ref.focus();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\n\nvar removeAllEventListeners = (ref, validateWithStateUpdate) => {\r\n    if (isHTMLElement(ref) && ref.removeEventListener) {\r\n        ref.removeEventListener(EVENTS.INPUT, validateWithStateUpdate);\r\n        ref.removeEventListener(EVENTS.CHANGE, validateWithStateUpdate);\r\n        ref.removeEventListener(EVENTS.BLUR, validateWithStateUpdate);\r\n    }\r\n};\n\nvar isRadioInput = (element) => !!element && element.type === 'radio';\n\nvar isCheckBoxInput = (element) => !!element && element.type === 'checkbox';\n\nfunction isDetached(element) {\r\n    if (!element) {\r\n        return true;\r\n    }\r\n    if (!(element instanceof HTMLElement) ||\r\n        element.nodeType === Node.DOCUMENT_NODE) {\r\n        return false;\r\n    }\r\n    return isDetached(element.parentNode);\r\n}\n\nvar isEmptyObject = (value) => isObject(value) && !Object.keys(value).length;\n\nfunction castPath(value) {\r\n    return isArray(value) ? value : stringToPath(value);\r\n}\r\nfunction baseGet(object, path) {\r\n    const updatePath = isKey(path) ? [path] : castPath(path);\r\n    const length = path.length;\r\n    let index = 0;\r\n    while (index < length) {\r\n        object = isUndefined(object) ? index++ : object[updatePath[index++]];\r\n    }\r\n    return index == length ? object : undefined;\r\n}\r\nfunction baseSlice(array, start, end) {\r\n    let index = -1;\r\n    let length = array.length;\r\n    if (start < 0) {\r\n        start = -start > length ? 0 : length + start;\r\n    }\r\n    end = end > length ? length : end;\r\n    if (end < 0) {\r\n        end += length;\r\n    }\r\n    length = start > end ? 0 : end - start;\r\n    const result = Array(length);\r\n    while (++index < length) {\r\n        result[index] = array[index + start];\r\n    }\r\n    return result;\r\n}\r\nfunction parent(object, path) {\r\n    return path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\r\n}\r\nfunction baseUnset(object, path) {\r\n    const updatePath = isKey(path) ? [path] : castPath(path);\r\n    const childObject = parent(object, updatePath);\r\n    const key = updatePath[updatePath.length - 1];\r\n    const result = !(childObject != null) || delete childObject[key];\r\n    let previousObjRef = undefined;\r\n    for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\r\n        let index = -1;\r\n        let objectRef = undefined;\r\n        const currentPaths = updatePath.slice(0, -(k + 1));\r\n        const currentPathsLength = currentPaths.length - 1;\r\n        if (k > 0) {\r\n            previousObjRef = object;\r\n        }\r\n        while (++index < currentPaths.length) {\r\n            const item = currentPaths[index];\r\n            objectRef = objectRef ? objectRef[item] : object[item];\r\n            if (currentPathsLength === index) {\r\n                if (isObject(objectRef) && isEmptyObject(objectRef)) {\r\n                    previousObjRef ? delete previousObjRef[item] : delete object[item];\r\n                }\r\n                else if (isArray(objectRef) &&\r\n                    !objectRef.filter(data => isObject(data) && !isEmptyObject(data))\r\n                        .length) {\r\n                    delete previousObjRef[item];\r\n                }\r\n            }\r\n            previousObjRef = objectRef;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction unset(object, paths) {\r\n    paths.forEach(path => {\r\n        baseUnset(object, path);\r\n    });\r\n    return object;\r\n}\n\nfunction findRemovedFieldAndRemoveListener(fields, handleChange, field, forceDelete) {\r\n    if (!field) {\r\n        return;\r\n    }\r\n    const { ref, ref: { name, type }, mutationWatcher, } = field;\r\n    if (!type) {\r\n        delete fields[name];\r\n        return;\r\n    }\r\n    const fieldValue = fields[name];\r\n    if ((isRadioInput(ref) || isCheckBoxInput(ref)) && fieldValue) {\r\n        const { options } = fieldValue;\r\n        if (isArray(options) && options.length) {\r\n            options.forEach(({ ref, mutationWatcher }, index) => {\r\n                if ((ref && isDetached(ref)) || forceDelete) {\r\n                    removeAllEventListeners(ref, handleChange);\r\n                    if (mutationWatcher) {\r\n                        mutationWatcher.disconnect();\r\n                    }\r\n                    unset(options, [`[${index}]`]);\r\n                }\r\n            });\r\n            if (options && !options.filter(Boolean).length) {\r\n                delete fields[name];\r\n            }\r\n        }\r\n        else {\r\n            delete fields[name];\r\n        }\r\n    }\r\n    else if (isDetached(ref) || forceDelete) {\r\n        removeAllEventListeners(ref, handleChange);\r\n        if (mutationWatcher) {\r\n            mutationWatcher.disconnect();\r\n        }\r\n        delete fields[name];\r\n    }\r\n}\n\nconst defaultReturn = {\r\n    isValid: false,\r\n    value: '',\r\n};\r\nvar getRadioValue = (options) => isArray(options)\r\n    ? options.reduce((previous, { ref: { checked, value } }) => checked\r\n        ? {\r\n            isValid: true,\r\n            value,\r\n        }\r\n        : previous, defaultReturn)\r\n    : defaultReturn;\n\nvar getMultipleSelectValue = (options) => [...options]\r\n    .filter(({ selected }) => selected)\r\n    .map(({ value }) => value);\n\nvar isFileInput = (element) => !!element && element.type === 'file';\n\nvar isMultipleSelect = (element) => !!element && element.type === 'select-multiple';\n\nvar isEmptyString = (value) => value === '';\n\nconst defaultResult = {\r\n    value: false,\r\n    isValid: false,\r\n};\r\nconst validResult = { value: true, isValid: true };\r\nvar getCheckboxValue = (options) => {\r\n    if (isArray(options)) {\r\n        if (options.length > 1) {\r\n            const values = options\r\n                .filter(({ ref: { checked } }) => checked)\r\n                .map(({ ref: { value } }) => value);\r\n            return { value: values, isValid: !!values.length };\r\n        }\r\n        const { checked, value, attributes } = options[0].ref;\r\n        return checked\r\n            ? attributes && !isUndefined(attributes.value)\r\n                ? isUndefined(value) || isEmptyString(value)\r\n                    ? validResult\r\n                    : { value: value, isValid: true }\r\n                : validResult\r\n            : defaultResult;\r\n    }\r\n    return defaultResult;\r\n};\n\nfunction getFieldValue(fields, ref) {\r\n    const { name, value } = ref;\r\n    const field = fields[name];\r\n    if (isFileInput(ref)) {\r\n        return ref.files;\r\n    }\r\n    if (isRadioInput(ref)) {\r\n        return field ? getRadioValue(field.options).value : '';\r\n    }\r\n    if (isMultipleSelect(ref)) {\r\n        return getMultipleSelectValue(ref.options);\r\n    }\r\n    if (isCheckBoxInput(ref)) {\r\n        return field ? getCheckboxValue(field.options).value : false;\r\n    }\r\n    return value;\r\n}\n\nvar isString = (value) => typeof value === 'string';\n\nvar getFieldsValues = (fields, search) => {\r\n    const output = {};\r\n    const isSearchString = isString(search);\r\n    const isSearchArray = isArray(search);\r\n    const isNest = search && search.nest;\r\n    for (const name in fields) {\r\n        if (isUndefined(search) ||\r\n            isNest ||\r\n            (isSearchString && name.startsWith(search)) ||\r\n            (isSearchArray &&\r\n                search.find((data) => name.startsWith(data)))) {\r\n            output[name] = getFieldValue(fields, fields[name].ref);\r\n        }\r\n    }\r\n    return output;\r\n};\n\nvar compareObject = (objectA = {}, objectB = {}) => Object.entries(objectA).reduce((previous, [key, value]) => previous ? objectB[key] && objectB[key] === value : false, true);\n\nvar isSameError = (error, { type, types, message, }) => {\r\n    return (isObject(error) &&\r\n        error.type === type &&\r\n        error.message === message &&\r\n        compareObject(error.types, types));\r\n};\n\nfunction shouldUpdateWithError({ errors, name, error, validFields, fieldsWithValidation, }) {\r\n    const isFieldValid = isEmptyObject(error);\r\n    const isFormValid = isEmptyObject(errors);\r\n    const currentFieldError = get(error, name);\r\n    const existFieldError = get(errors, name);\r\n    if ((isFieldValid && validFields.has(name)) ||\r\n        (existFieldError && existFieldError.isManual)) {\r\n        return false;\r\n    }\r\n    if (isFormValid !== isFieldValid ||\r\n        (!isFormValid && !existFieldError) ||\r\n        (isFieldValid && fieldsWithValidation.has(name) && !validFields.has(name))) {\r\n        return true;\r\n    }\r\n    return currentFieldError && !isSameError(existFieldError, currentFieldError);\r\n}\n\nvar isRegex = (value) => value instanceof RegExp;\n\nvar getValueAndMessage = (validationData) => {\r\n    const isPureObject = isObject(validationData) && !isRegex(validationData);\r\n    return {\r\n        value: isPureObject\r\n            ? validationData.value\r\n            : validationData,\r\n        message: isPureObject\r\n            ? validationData.message\r\n            : '',\r\n    };\r\n};\n\nvar isFunction = (value) => typeof value === 'function';\n\nvar isBoolean = (value) => typeof value === 'boolean';\n\nfunction getValidateError(result, ref, type = 'validate') {\r\n    const isStringValue = isString(result);\r\n    if (isStringValue || (isBoolean(result) && !result)) {\r\n        const message = isStringValue ? result : '';\r\n        return {\r\n            type,\r\n            message,\r\n            ref,\r\n        };\r\n    }\r\n}\n\nvar appendErrors = (name, validateAllFieldCriteria, errors, type, message) => {\r\n    if (!validateAllFieldCriteria) {\r\n        return {};\r\n    }\r\n    const error = errors[name];\r\n    return Object.assign(Object.assign({}, error), { types: Object.assign(Object.assign({}, (error && error.types ? error.types : {})), { [type]: message || true }) });\r\n};\n\nvar validateField = async (fieldsRef, validateAllFieldCriteria, { ref, ref: { type, value, name }, options, required, maxLength, minLength, min, max, pattern, validate, }) => {\r\n    const fields = fieldsRef.current;\r\n    const error = {};\r\n    const isRadio = isRadioInput(ref);\r\n    const isCheckBox = isCheckBoxInput(ref);\r\n    const isRadioOrCheckbox = isRadio || isCheckBox;\r\n    const isEmpty = isEmptyString(value);\r\n    const appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\r\n    const getMinMaxMessage = (exceedMax, maxLengthMessage, minLengthMessage, maxType = INPUT_VALIDATION_RULES.maxLength, minType = INPUT_VALIDATION_RULES.minLength) => {\r\n        const message = exceedMax ? maxLengthMessage : minLengthMessage;\r\n        error[name] = Object.assign({ type: exceedMax ? maxType : minType, message,\r\n            ref }, (exceedMax\r\n            ? appendErrorsCurry(maxType, message)\r\n            : appendErrorsCurry(minType, message)));\r\n        if (!validateAllFieldCriteria) {\r\n            return error;\r\n        }\r\n    };\r\n    if (required &&\r\n        ((!isRadio && !isCheckBox && (isEmpty || isNullOrUndefined(value))) ||\r\n            (isBoolean(value) && !value) ||\r\n            (isCheckBox && !getCheckboxValue(options).isValid) ||\r\n            (isRadio && !getRadioValue(options).isValid))) {\r\n        const { value: requiredValue, message: requiredMessage } = isString(required)\r\n            ? { value: !!required, message: required }\r\n            : getValueAndMessage(required);\r\n        if (requiredValue) {\r\n            error[name] = Object.assign({ type: INPUT_VALIDATION_RULES.required, message: requiredMessage, ref: isRadioOrCheckbox ? fields[name].options[0].ref : ref }, appendErrorsCurry(INPUT_VALIDATION_RULES.required, requiredMessage));\r\n            if (!validateAllFieldCriteria) {\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (!isNullOrUndefined(min) || !isNullOrUndefined(max)) {\r\n        let exceedMax;\r\n        let exceedMin;\r\n        const { value: maxValue, message: maxMessage } = getValueAndMessage(max);\r\n        const { value: minValue, message: minMessage } = getValueAndMessage(min);\r\n        if (type === 'number' || (!type && !isNaN(value))) {\r\n            const valueNumber = ref.valueAsNumber || parseFloat(value);\r\n            if (!isNullOrUndefined(maxValue)) {\r\n                exceedMax = valueNumber > maxValue;\r\n            }\r\n            if (!isNullOrUndefined(minValue)) {\r\n                exceedMin = valueNumber < minValue;\r\n            }\r\n        }\r\n        else {\r\n            const valueDate = ref.valueAsDate || new Date(value);\r\n            if (isString(maxValue)) {\r\n                exceedMax = valueDate > new Date(maxValue);\r\n            }\r\n            if (isString(minValue)) {\r\n                exceedMin = valueDate < new Date(minValue);\r\n            }\r\n        }\r\n        if (exceedMax || exceedMin) {\r\n            getMinMaxMessage(!!exceedMax, maxMessage, minMessage, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\r\n            if (!validateAllFieldCriteria) {\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (isString(value) && !isEmpty && (maxLength || minLength)) {\r\n        const { value: maxLengthValue, message: maxLengthMessage, } = getValueAndMessage(maxLength);\r\n        const { value: minLengthValue, message: minLengthMessage, } = getValueAndMessage(minLength);\r\n        const inputLength = value.toString().length;\r\n        const exceedMax = maxLength && inputLength > maxLengthValue;\r\n        const exceedMin = minLength && inputLength < minLengthValue;\r\n        if (exceedMax || exceedMin) {\r\n            getMinMaxMessage(!!exceedMax, maxLengthMessage, minLengthMessage);\r\n            if (!validateAllFieldCriteria) {\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (pattern && !isEmpty) {\r\n        const { value: patternValue, message: patternMessage } = getValueAndMessage(pattern);\r\n        if (isRegex(patternValue) && !patternValue.test(value)) {\r\n            error[name] = Object.assign({ type: INPUT_VALIDATION_RULES.pattern, message: patternMessage, ref }, appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, patternMessage));\r\n            if (!validateAllFieldCriteria) {\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (validate) {\r\n        const fieldValue = getFieldValue(fields, ref);\r\n        const validateRef = isRadioOrCheckbox && options ? options[0].ref : ref;\r\n        if (isFunction(validate)) {\r\n            const result = await validate(fieldValue);\r\n            const validateError = getValidateError(result, validateRef);\r\n            if (validateError) {\r\n                error[name] = Object.assign(Object.assign({}, validateError), appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message));\r\n                if (!validateAllFieldCriteria) {\r\n                    return error;\r\n                }\r\n            }\r\n        }\r\n        else if (isObject(validate)) {\r\n            const validateFunctions = Object.entries(validate);\r\n            const validationResult = await new Promise((resolve) => {\r\n                validateFunctions.reduce(async (previous, [key, validate], index) => {\r\n                    if ((!isEmptyObject(await previous) && !validateAllFieldCriteria) ||\r\n                        !isFunction(validate)) {\r\n                        return resolve(previous);\r\n                    }\r\n                    let result;\r\n                    const validateResult = await validate(fieldValue);\r\n                    const validateError = getValidateError(validateResult, validateRef, key);\r\n                    if (validateError) {\r\n                        result = Object.assign(Object.assign({}, validateError), appendErrorsCurry(key, validateError.message));\r\n                        if (validateAllFieldCriteria) {\r\n                            error[name] = result;\r\n                        }\r\n                    }\r\n                    else {\r\n                        result = previous;\r\n                    }\r\n                    return validateFunctions.length - 1 === index\r\n                        ? resolve(result)\r\n                        : result;\r\n                }, {});\r\n            });\r\n            if (!isEmptyObject(validationResult)) {\r\n                error[name] = Object.assign({ ref: validateRef }, validationResult);\r\n                if (!validateAllFieldCriteria) {\r\n                    return error;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return error;\r\n};\n\nconst parseErrorSchema = (error, validateAllFieldCriteria) => isArray(error.inner)\r\n    ? error.inner.reduce((previous, { path, message, type }) => (Object.assign(Object.assign({}, previous), (previous[path] && validateAllFieldCriteria\r\n        ? {\r\n            [path]: appendErrors(path, validateAllFieldCriteria, previous, type, message),\r\n        }\r\n        : {\r\n            [path]: previous[path] || Object.assign({ message,\r\n                type }, (validateAllFieldCriteria\r\n                ? {\r\n                    types: { [type]: message || true },\r\n                }\r\n                : {})),\r\n        }))), {})\r\n    : {\r\n        [error.path]: { message: error.message, type: error.type },\r\n    };\r\nasync function validateWithSchema(validationSchema, validateAllFieldCriteria, data, validationResolver, context) {\r\n    if (validationResolver) {\r\n        return validationResolver(data, context);\r\n    }\r\n    try {\r\n        return {\r\n            values: await validationSchema.validate(data, {\r\n                abortEarly: false,\r\n                context,\r\n            }),\r\n            errors: {},\r\n        };\r\n    }\r\n    catch (e) {\r\n        return {\r\n            values: {},\r\n            errors: transformToNestObject(parseErrorSchema(e, validateAllFieldCriteria)),\r\n        };\r\n    }\r\n}\n\nvar getDefaultValue = (defaultValues, name, defaultValue) => isUndefined(defaultValues[name])\r\n    ? get(defaultValues, name, defaultValue)\r\n    : defaultValues[name];\n\nfunction flatArray(list) {\r\n    return list.reduce((a, b) => a.concat(isArray(b) ? flatArray(b) : b), []);\r\n}\n\nvar isPrimitive = (value) => isNullOrUndefined(value) || !isObjectType(value);\n\nconst getPath = (path, values) => {\r\n    const getInnerPath = (value, key, isObject) => {\r\n        const pathWithIndex = isObject ? `${path}.${key}` : `${path}[${key}]`;\r\n        return isPrimitive(value) ? pathWithIndex : getPath(pathWithIndex, value);\r\n    };\r\n    return isArray(values)\r\n        ? values.map((value, key) => getInnerPath(value, key))\r\n        : Object.entries(values).map(([key, value]) => getInnerPath(value, key, true));\r\n};\r\nvar getPath$1 = (parentPath, value) => flatArray(getPath(parentPath, value));\n\nvar assignWatchFields = (fieldValues, fieldName, watchFields, combinedDefaultValues, watchFieldArray) => {\r\n    let value;\r\n    watchFields.add(fieldName);\r\n    if (isEmptyObject(fieldValues)) {\r\n        value = watchFieldArray ? watchFieldArray : undefined;\r\n    }\r\n    else if (!isUndefined(fieldValues[fieldName])) {\r\n        value = fieldValues[fieldName];\r\n        watchFields.add(fieldName);\r\n    }\r\n    else {\r\n        value = get(transformToNestObject(fieldValues), fieldName);\r\n        if (isArray(watchFieldArray) &&\r\n            isArray(value) &&\r\n            value.length !== watchFieldArray.length) {\r\n            value = watchFieldArray;\r\n        }\r\n        if (!isUndefined(value)) {\r\n            getPath$1(fieldName, value).forEach(name => watchFields.add(name));\r\n        }\r\n    }\r\n    return isUndefined(value)\r\n        ? isObject(combinedDefaultValues)\r\n            ? getDefaultValue(combinedDefaultValues, fieldName)\r\n            : combinedDefaultValues\r\n        : value;\r\n};\n\nvar skipValidation = ({ hasError, isBlurEvent, isOnSubmit, isReValidateOnSubmit, isOnBlur, isReValidateOnBlur, isSubmitted, }) => (isOnSubmit && isReValidateOnSubmit) ||\r\n    (isOnSubmit && !isSubmitted) ||\r\n    (isOnBlur && !isBlurEvent && !hasError) ||\r\n    (isReValidateOnBlur && !isBlurEvent && hasError) ||\r\n    (isReValidateOnSubmit && isSubmitted);\n\nvar getFieldValueByName = (fields, name) => {\r\n    const results = transformToNestObject(getFieldsValues(fields));\r\n    return name ? get(results, name, results) : results;\r\n};\n\nfunction getIsFieldsDifferent(referenceArray, differenceArray) {\r\n    let isMatch = false;\r\n    if (!isArray(referenceArray) ||\r\n        !isArray(differenceArray) ||\r\n        referenceArray.length !== differenceArray.length) {\r\n        return true;\r\n    }\r\n    for (let i = 0; i < referenceArray.length; i++) {\r\n        if (isMatch) {\r\n            break;\r\n        }\r\n        const dataA = referenceArray[i];\r\n        const dataB = differenceArray[i];\r\n        if (isUndefined(dataB) ||\r\n            Object.keys(dataA).length !== Object.keys(dataB).length) {\r\n            isMatch = true;\r\n            break;\r\n        }\r\n        for (const key in dataA) {\r\n            if (dataA[key] !== dataB[key]) {\r\n                isMatch = true;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return isMatch;\r\n}\n\nconst isMatchFieldArrayName = (name, searchName) => name.startsWith(`${searchName}[`);\r\nvar isNameInFieldArray = (names, name) => [...names].reduce((prev, current) => (isMatchFieldArrayName(name, current) ? true : prev), false);\n\nvar isFileListObject = (data) => typeof FileList !== UNDEFINED && data instanceof FileList;\n\nfunction onDomRemove(element, onDetachCallback) {\r\n    const observer = new MutationObserver(() => {\r\n        if (isDetached(element)) {\r\n            observer.disconnect();\r\n            onDetachCallback();\r\n        }\r\n    });\r\n    observer.observe(window.document, {\r\n        childList: true,\r\n        subtree: true,\r\n    });\r\n    return observer;\r\n}\n\nvar modeChecker = (mode) => ({\r\n    isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\r\n    isOnBlur: mode === VALIDATION_MODE.onBlur,\r\n    isOnChange: mode === VALIDATION_MODE.onChange,\r\n});\n\nconst { useRef, useState, useCallback, useEffect } = React;\r\nfunction useForm({ mode = VALIDATION_MODE.onSubmit, reValidateMode = VALIDATION_MODE.onChange, validationSchema, validationResolver, validationContext, defaultValues = {}, submitFocusError = true, validateCriteriaMode, } = {}) {\r\n    const fieldsRef = useRef({});\r\n    const validateAllFieldCriteria = validateCriteriaMode === 'all';\r\n    const errorsRef = useRef({});\r\n    const touchedFieldsRef = useRef({});\r\n    const watchFieldArrayRef = useRef({});\r\n    const watchFieldsRef = useRef(new Set());\r\n    const dirtyFieldsRef = useRef(new Set());\r\n    const fieldsWithValidationRef = useRef(new Set());\r\n    const validFieldsRef = useRef(new Set());\r\n    const isValidRef = useRef(true);\r\n    const defaultRenderValuesRef = useRef({});\r\n    const defaultValuesRef = useRef(defaultValues);\r\n    const isUnMount = useRef(false);\r\n    const isWatchAllRef = useRef(false);\r\n    const isSubmittedRef = useRef(false);\r\n    const isDirtyRef = useRef(false);\r\n    const submitCountRef = useRef(0);\r\n    const isSubmittingRef = useRef(false);\r\n    const handleChangeRef = useRef();\r\n    const resetFieldArrayFunctionRef = useRef({});\r\n    const validationContextRef = useRef(validationContext);\r\n    const fieldArrayNamesRef = useRef(new Set());\r\n    const [, render] = useState();\r\n    const { isOnBlur, isOnSubmit } = useRef(modeChecker(mode)).current;\r\n    const isWindowUndefined = typeof window === UNDEFINED;\r\n    const shouldValidateCallback = !!(validationSchema || validationResolver);\r\n    const isWeb = typeof document !== UNDEFINED &&\r\n        !isWindowUndefined &&\r\n        !isUndefined(window.HTMLElement);\r\n    const isProxyEnabled = isWeb && 'Proxy' in window;\r\n    const readFormStateRef = useRef({\r\n        dirty: !isProxyEnabled,\r\n        dirtyFields: !isProxyEnabled,\r\n        isSubmitted: isOnSubmit,\r\n        submitCount: !isProxyEnabled,\r\n        touched: !isProxyEnabled,\r\n        isSubmitting: !isProxyEnabled,\r\n        isValid: !isProxyEnabled,\r\n    });\r\n    const { isOnBlur: isReValidateOnBlur, isOnSubmit: isReValidateOnSubmit, } = useRef(modeChecker(reValidateMode)).current;\r\n    const reRender = useCallback(() => {\r\n        if (!isUnMount.current) {\r\n            render({});\r\n        }\r\n    }, []);\r\n    const shouldRenderBaseOnError = useCallback((name, error, shouldRender, skipReRender) => {\r\n        let shouldReRender = shouldRender ||\r\n            shouldUpdateWithError({\r\n                errors: errorsRef.current,\r\n                error,\r\n                name,\r\n                validFields: validFieldsRef.current,\r\n                fieldsWithValidation: fieldsWithValidationRef.current,\r\n            });\r\n        if (isEmptyObject(error)) {\r\n            if (fieldsWithValidationRef.current.has(name) ||\r\n                shouldValidateCallback) {\r\n                validFieldsRef.current.add(name);\r\n                shouldReRender = shouldReRender || get(errorsRef.current, name);\r\n            }\r\n            errorsRef.current = unset(errorsRef.current, [name]);\r\n        }\r\n        else {\r\n            validFieldsRef.current.delete(name);\r\n            shouldReRender = shouldReRender || !get(errorsRef.current, name);\r\n            set(errorsRef.current, name, error[name]);\r\n        }\r\n        if (shouldReRender && !skipReRender) {\r\n            reRender();\r\n            return true;\r\n        }\r\n    }, [reRender, shouldValidateCallback]);\r\n    const setFieldValue = useCallback((field, rawValue) => {\r\n        const ref = field.ref;\r\n        const options = field.options;\r\n        const { type } = ref;\r\n        const value = isWeb && isHTMLElement(ref) && isNullOrUndefined(rawValue)\r\n            ? ''\r\n            : rawValue;\r\n        if (isRadioInput(ref) && options) {\r\n            options.forEach(({ ref: radioRef }) => (radioRef.checked = radioRef.value === value));\r\n        }\r\n        else if (isFileInput(ref)) {\r\n            if (isEmptyString(value) ||\r\n                isFileListObject(value)) {\r\n                ref.files = value;\r\n            }\r\n            else {\r\n                ref.value = value;\r\n            }\r\n        }\r\n        else if (isMultipleSelect(ref)) {\r\n            [...ref.options].forEach(selectRef => (selectRef.selected = value.includes(selectRef.value)));\r\n        }\r\n        else if (isCheckBoxInput(ref) && options) {\r\n            options.length > 1\r\n                ? options.forEach(({ ref: checkboxRef }) => (checkboxRef.checked = value.includes(checkboxRef.value)))\r\n                : (options[0].ref.checked = !!value);\r\n        }\r\n        else {\r\n            ref.value = value;\r\n        }\r\n        return !!type;\r\n    }, [isWeb]);\r\n    const setDirty = (name) => {\r\n        if (!fieldsRef.current[name] ||\r\n            (!readFormStateRef.current.dirty && !readFormStateRef.current.dirtyFields)) {\r\n            return false;\r\n        }\r\n        const isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\r\n        const previousDirtyFieldsLength = dirtyFieldsRef.current.size;\r\n        let isDirty = defaultRenderValuesRef.current[name] !==\r\n            getFieldValue(fieldsRef.current, fieldsRef.current[name].ref);\r\n        if (isFieldArray) {\r\n            const fieldArrayName = name.substring(0, name.indexOf('['));\r\n            isDirty = getIsFieldsDifferent(getFieldValueByName(fieldsRef.current, fieldArrayName), get(defaultValuesRef.current, fieldArrayName));\r\n        }\r\n        const isDirtyChanged = (isFieldArray ? isDirtyRef.current : dirtyFieldsRef.current.has(name)) !==\r\n            isDirty;\r\n        if (isDirty) {\r\n            dirtyFieldsRef.current.add(name);\r\n        }\r\n        else {\r\n            dirtyFieldsRef.current.delete(name);\r\n        }\r\n        isDirtyRef.current = isFieldArray ? isDirty : !!dirtyFieldsRef.current.size;\r\n        return readFormStateRef.current.dirty\r\n            ? isDirtyChanged\r\n            : previousDirtyFieldsLength !== dirtyFieldsRef.current.size;\r\n    };\r\n    const setDirtyAndTouchedFields = useCallback((fieldName) => {\r\n        if (setDirty(fieldName) ||\r\n            (!get(touchedFieldsRef.current, fieldName) &&\r\n                readFormStateRef.current.touched)) {\r\n            return !!set(touchedFieldsRef.current, fieldName, true);\r\n        }\r\n    }, []);\r\n    const setInternalValueBatch = useCallback((name, value, parentFieldName) => {\r\n        const isValueArray = isArray(value);\r\n        for (const key in value) {\r\n            const fieldName = `${parentFieldName || name}${isValueArray ? `[${key}]` : `.${key}`}`;\r\n            if (isObject(value[key])) {\r\n                setInternalValueBatch(name, value[key], fieldName);\r\n            }\r\n            const field = fieldsRef.current[fieldName];\r\n            if (field) {\r\n                setFieldValue(field, value[key]);\r\n                setDirtyAndTouchedFields(fieldName);\r\n            }\r\n        }\r\n    }, [setFieldValue, setDirtyAndTouchedFields]);\r\n    const setInternalValue = useCallback((name, value) => {\r\n        const field = fieldsRef.current[name];\r\n        if (field) {\r\n            setFieldValue(field, value);\r\n            const output = setDirtyAndTouchedFields(name);\r\n            if (isBoolean(output)) {\r\n                return output;\r\n            }\r\n        }\r\n        else if (!isPrimitive(value)) {\r\n            setInternalValueBatch(name, value);\r\n        }\r\n    }, [setDirtyAndTouchedFields, setFieldValue, setInternalValueBatch]);\r\n    const executeValidation = useCallback(async (name, skipReRender) => {\r\n        const field = fieldsRef.current[name];\r\n        if (!field) {\r\n            return false;\r\n        }\r\n        const error = await validateField(fieldsRef, validateAllFieldCriteria, field);\r\n        shouldRenderBaseOnError(name, error, false, skipReRender);\r\n        return isEmptyObject(error);\r\n    }, [shouldRenderBaseOnError, validateAllFieldCriteria]);\r\n    const executeSchemaValidation = useCallback(async (payload) => {\r\n        const { errors } = await validateWithSchema(validationSchema, validateAllFieldCriteria, getFieldValueByName(fieldsRef.current), validationResolver, validationContextRef.current);\r\n        const previousFormIsValid = isValidRef.current;\r\n        isValidRef.current = isEmptyObject(errors);\r\n        if (isArray(payload)) {\r\n            payload.forEach(name => {\r\n                const error = get(errors, name);\r\n                if (error) {\r\n                    set(errorsRef.current, name, error);\r\n                }\r\n                else {\r\n                    unset(errorsRef.current, [name]);\r\n                }\r\n            });\r\n            reRender();\r\n        }\r\n        else {\r\n            shouldRenderBaseOnError(payload, (get(errors, payload)\r\n                ? { [payload]: get(errors, payload) }\r\n                : {}), previousFormIsValid !== isValidRef.current);\r\n        }\r\n        return isEmptyObject(errorsRef.current);\r\n    }, [\r\n        reRender,\r\n        shouldRenderBaseOnError,\r\n        validateAllFieldCriteria,\r\n        validationResolver,\r\n        validationSchema,\r\n    ]);\r\n    const triggerValidation = useCallback(async (payload) => {\r\n        const fields = payload || Object.keys(fieldsRef.current);\r\n        if (shouldValidateCallback) {\r\n            return executeSchemaValidation(fields);\r\n        }\r\n        if (isArray(fields)) {\r\n            const result = await Promise.all(fields.map(async (data) => await executeValidation(data, true)));\r\n            reRender();\r\n            return result.every(Boolean);\r\n        }\r\n        return await executeValidation(fields);\r\n    }, [\r\n        executeSchemaValidation,\r\n        executeValidation,\r\n        reRender,\r\n        shouldValidateCallback,\r\n    ]);\r\n    const isFieldWatched = (name) => {\r\n        const preFixName = (name.match(/\\w+/) || [])[0];\r\n        return (isWatchAllRef.current ||\r\n            watchFieldsRef.current.has(name) ||\r\n            (watchFieldsRef.current.has(preFixName) &&\r\n                !isKey(name) &&\r\n                fieldArrayNamesRef.current.has(preFixName)));\r\n    };\r\n    function setValue(names, valueOrShouldValidate, shouldValidate) {\r\n        let shouldRender = false;\r\n        const isMultiple = isArray(names);\r\n        (isMultiple\r\n            ? names\r\n            : [names]).forEach((name) => {\r\n            const isStringFieldName = isString(name);\r\n            shouldRender =\r\n                setInternalValue(isStringFieldName ? name : Object.keys(name)[0], isStringFieldName\r\n                    ? valueOrShouldValidate\r\n                    : Object.values(name)[0]) || isMultiple\r\n                    ? true\r\n                    : isFieldWatched(name);\r\n        });\r\n        if (shouldRender || isMultiple) {\r\n            reRender();\r\n        }\r\n        if (shouldValidate || (isMultiple && valueOrShouldValidate)) {\r\n            triggerValidation(isMultiple ? undefined : names);\r\n        }\r\n    }\r\n    handleChangeRef.current = handleChangeRef.current\r\n        ? handleChangeRef.current\r\n        : async ({ type, target }) => {\r\n            const name = target ? target.name : '';\r\n            const fields = fieldsRef.current;\r\n            const errors = errorsRef.current;\r\n            const field = fields[name];\r\n            const currentError = get(errors, name);\r\n            let error;\r\n            if (!field) {\r\n                return;\r\n            }\r\n            const isBlurEvent = type === EVENTS.BLUR;\r\n            const shouldSkipValidation = skipValidation({\r\n                hasError: !!currentError,\r\n                isBlurEvent,\r\n                isOnSubmit,\r\n                isReValidateOnSubmit,\r\n                isOnBlur,\r\n                isReValidateOnBlur,\r\n                isSubmitted: isSubmittedRef.current,\r\n            });\r\n            const shouldUpdateDirty = setDirty(name);\r\n            let shouldUpdateState = isFieldWatched(name) || shouldUpdateDirty;\r\n            if (isBlurEvent &&\r\n                !get(touchedFieldsRef.current, name) &&\r\n                readFormStateRef.current.touched) {\r\n                set(touchedFieldsRef.current, name, true);\r\n                shouldUpdateState = true;\r\n            }\r\n            if (shouldSkipValidation) {\r\n                return shouldUpdateState && reRender();\r\n            }\r\n            if (shouldValidateCallback) {\r\n                const { errors } = await validateWithSchema(validationSchema, validateAllFieldCriteria, getFieldValueByName(fields), validationResolver, validationContextRef.current);\r\n                const previousFormIsValid = isValidRef.current;\r\n                isValidRef.current = isEmptyObject(errors);\r\n                error = (get(errors, name)\r\n                    ? { [name]: get(errors, name) }\r\n                    : {});\r\n                if (previousFormIsValid !== isValidRef.current) {\r\n                    shouldUpdateState = true;\r\n                }\r\n            }\r\n            else {\r\n                error = await validateField(fieldsRef, validateAllFieldCriteria, field);\r\n            }\r\n            if (!shouldRenderBaseOnError(name, error) && shouldUpdateState) {\r\n                reRender();\r\n            }\r\n        };\r\n    const validateSchemaIsValid = useCallback((values = {}) => {\r\n        const fieldValues = isEmptyObject(defaultValuesRef.current)\r\n            ? getFieldsValues(fieldsRef.current)\r\n            : defaultValuesRef.current;\r\n        validateWithSchema(validationSchema, validateAllFieldCriteria, transformToNestObject(Object.assign(Object.assign({}, fieldValues), values)), validationResolver, validationContextRef.current).then(({ errors }) => {\r\n            const previousFormIsValid = isValidRef.current;\r\n            isValidRef.current = isEmptyObject(errors);\r\n            if (previousFormIsValid !== isValidRef.current) {\r\n                reRender();\r\n            }\r\n        });\r\n    }, \r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [reRender, validateAllFieldCriteria, validationResolver]);\r\n    const removeFieldEventListener = (field, forceDelete) => {\r\n        if (!isUndefined(handleChangeRef.current) && field) {\r\n            findRemovedFieldAndRemoveListener(fieldsRef.current, handleChangeRef.current, field, forceDelete);\r\n        }\r\n    };\r\n    const removeFieldEventListenerAndRef = useCallback((field, forceDelete) => {\r\n        if (!field ||\r\n            (field &&\r\n                isNameInFieldArray(fieldArrayNamesRef.current, field.ref.name) &&\r\n                !forceDelete)) {\r\n            return;\r\n        }\r\n        removeFieldEventListener(field, forceDelete);\r\n        const { name } = field.ref;\r\n        errorsRef.current = unset(errorsRef.current, [name]);\r\n        touchedFieldsRef.current = unset(touchedFieldsRef.current, [name]);\r\n        defaultRenderValuesRef.current = unset(defaultRenderValuesRef.current, [\r\n            name,\r\n        ]);\r\n        [\r\n            dirtyFieldsRef,\r\n            fieldsWithValidationRef,\r\n            validFieldsRef,\r\n            watchFieldsRef,\r\n        ].forEach(data => data.current.delete(name));\r\n        if (readFormStateRef.current.isValid ||\r\n            readFormStateRef.current.touched) {\r\n            reRender();\r\n            if (shouldValidateCallback) {\r\n                validateSchemaIsValid();\r\n            }\r\n        }\r\n    }, [reRender, shouldValidateCallback, validateSchemaIsValid]);\r\n    function clearError(name) {\r\n        if (isUndefined(name)) {\r\n            errorsRef.current = {};\r\n        }\r\n        else {\r\n            unset(errorsRef.current, isArray(name) ? name : [name]);\r\n        }\r\n        reRender();\r\n    }\r\n    const setInternalError = ({ name, type, types, message, preventRender, }) => {\r\n        const field = fieldsRef.current[name];\r\n        if (!isSameError(errorsRef.current[name], {\r\n            type,\r\n            message,\r\n            types,\r\n        })) {\r\n            set(errorsRef.current, name, {\r\n                type,\r\n                types,\r\n                message,\r\n                ref: field ? field.ref : {},\r\n                isManual: true,\r\n            });\r\n            if (!preventRender) {\r\n                reRender();\r\n            }\r\n        }\r\n    };\r\n    function setError(name, type = '', message) {\r\n        if (isString(name)) {\r\n            setInternalError(Object.assign({ name }, (isObject(type)\r\n                ? {\r\n                    types: type,\r\n                    type: '',\r\n                }\r\n                : {\r\n                    type,\r\n                    message,\r\n                })));\r\n        }\r\n        else if (isArray(name)) {\r\n            name.forEach(error => setInternalError(Object.assign(Object.assign({}, error), { preventRender: true })));\r\n            reRender();\r\n        }\r\n    }\r\n    function watch(fieldNames, defaultValue) {\r\n        const combinedDefaultValues = isUndefined(defaultValue)\r\n            ? isUndefined(defaultValuesRef.current)\r\n                ? {}\r\n                : defaultValuesRef.current\r\n            : defaultValue;\r\n        const fieldValues = getFieldsValues(fieldsRef.current, fieldNames);\r\n        const watchFields = watchFieldsRef.current;\r\n        if (isString(fieldNames)) {\r\n            return assignWatchFields(fieldValues, fieldNames, watchFields, combinedDefaultValues, fieldArrayNamesRef.current.has(fieldNames)\r\n                ? watchFieldArrayRef.current[fieldNames]\r\n                : undefined);\r\n        }\r\n        if (isArray(fieldNames)) {\r\n            return fieldNames.reduce((previous, name) => {\r\n                let value;\r\n                if (isEmptyObject(fieldsRef.current) &&\r\n                    isObject(combinedDefaultValues)) {\r\n                    value = getDefaultValue(combinedDefaultValues, name);\r\n                }\r\n                else {\r\n                    value = assignWatchFields(fieldValues, name, watchFields, combinedDefaultValues);\r\n                }\r\n                return Object.assign(Object.assign({}, previous), { [name]: value });\r\n            }, {});\r\n        }\r\n        isWatchAllRef.current = true;\r\n        const result = (!isEmptyObject(fieldValues) && fieldValues) ||\r\n            defaultValue ||\r\n            defaultValuesRef.current;\r\n        return fieldNames && fieldNames.nest\r\n            ? transformToNestObject(result)\r\n            : result;\r\n    }\r\n    function unregister(names) {\r\n        if (!isEmptyObject(fieldsRef.current)) {\r\n            (isArray(names) ? names : [names]).forEach(fieldName => removeFieldEventListenerAndRef(fieldsRef.current[fieldName], true));\r\n        }\r\n    }\r\n    function registerFieldsRef(ref, validateOptions = {}) {\r\n        if (!ref.name) {\r\n            // eslint-disable-next-line no-console\r\n            return console.warn('Missing name @', ref);\r\n        }\r\n        const { name, type, value } = ref;\r\n        const fieldAttributes = Object.assign({ ref }, validateOptions);\r\n        const fields = fieldsRef.current;\r\n        const isRadioOrCheckbox = isRadioInput(ref) || isCheckBoxInput(ref);\r\n        let currentField = fields[name];\r\n        let isEmptyDefaultValue = true;\r\n        let isFieldArray = false;\r\n        let defaultValue;\r\n        if (isRadioOrCheckbox\r\n            ? currentField &&\r\n                isArray(currentField.options) &&\r\n                currentField.options.find(({ ref }) => value === ref.value)\r\n            : currentField) {\r\n            fields[name] = Object.assign(Object.assign({}, currentField), validateOptions);\r\n            return;\r\n        }\r\n        if (type) {\r\n            const mutationWatcher = onDomRemove(ref, () => removeFieldEventListenerAndRef(fieldAttributes));\r\n            currentField = isRadioOrCheckbox\r\n                ? Object.assign({ options: [\r\n                        ...((currentField && currentField.options) || []),\r\n                        {\r\n                            ref,\r\n                            mutationWatcher,\r\n                        },\r\n                    ], ref: { type, name } }, validateOptions) : Object.assign(Object.assign({}, fieldAttributes), { mutationWatcher });\r\n        }\r\n        else {\r\n            currentField = fieldAttributes;\r\n        }\r\n        fields[name] = currentField;\r\n        if (!isEmptyObject(defaultValuesRef.current)) {\r\n            defaultValue = getDefaultValue(defaultValuesRef.current, name);\r\n            isEmptyDefaultValue = isUndefined(defaultValue);\r\n            isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\r\n            if (!isEmptyDefaultValue && !isFieldArray) {\r\n                setFieldValue(currentField, defaultValue);\r\n            }\r\n        }\r\n        if (shouldValidateCallback &&\r\n            !isFieldArray &&\r\n            readFormStateRef.current.isValid) {\r\n            validateSchemaIsValid();\r\n        }\r\n        else if (!isEmptyObject(validateOptions)) {\r\n            fieldsWithValidationRef.current.add(name);\r\n            if (!isOnSubmit && readFormStateRef.current.isValid) {\r\n                validateField(fieldsRef, validateAllFieldCriteria, currentField).then(error => {\r\n                    const previousFormIsValid = isValidRef.current;\r\n                    if (isEmptyObject(error)) {\r\n                        validFieldsRef.current.add(name);\r\n                    }\r\n                    else {\r\n                        isValidRef.current = false;\r\n                    }\r\n                    if (previousFormIsValid !== isValidRef.current) {\r\n                        reRender();\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        if (!defaultRenderValuesRef.current[name] &&\r\n            !(isFieldArray && isEmptyDefaultValue)) {\r\n            defaultRenderValuesRef.current[name] = isEmptyDefaultValue\r\n                ? getFieldValue(fields, currentField.ref)\r\n                : defaultValue;\r\n        }\r\n        if (!type) {\r\n            return;\r\n        }\r\n        const fieldToAttachListener = isRadioOrCheckbox && currentField.options\r\n            ? currentField.options[currentField.options.length - 1]\r\n            : currentField;\r\n        attachEventListeners({\r\n            field: fieldToAttachListener,\r\n            isRadioOrCheckbox,\r\n            handleChange: handleChangeRef.current,\r\n        });\r\n    }\r\n    function register(refOrValidationOptions, validationOptions) {\r\n        if (isWindowUndefined) {\r\n            return;\r\n        }\r\n        if (isString(refOrValidationOptions)) {\r\n            registerFieldsRef({ name: refOrValidationOptions }, validationOptions);\r\n            return;\r\n        }\r\n        if (isObject(refOrValidationOptions) && 'name' in refOrValidationOptions) {\r\n            registerFieldsRef(refOrValidationOptions, validationOptions);\r\n            return;\r\n        }\r\n        return (ref) => ref && registerFieldsRef(ref, refOrValidationOptions);\r\n    }\r\n    const handleSubmit = useCallback((callback) => async (e) => {\r\n        if (e) {\r\n            e.preventDefault();\r\n            e.persist();\r\n        }\r\n        let fieldErrors;\r\n        let fieldValues;\r\n        const fields = fieldsRef.current;\r\n        if (readFormStateRef.current.isSubmitting) {\r\n            isSubmittingRef.current = true;\r\n            reRender();\r\n        }\r\n        try {\r\n            if (shouldValidateCallback) {\r\n                fieldValues = getFieldsValues(fields);\r\n                const { errors, values } = await validateWithSchema(validationSchema, validateAllFieldCriteria, transformToNestObject(fieldValues), validationResolver, validationContextRef.current);\r\n                errorsRef.current = errors;\r\n                fieldErrors = errors;\r\n                fieldValues = values;\r\n            }\r\n            else {\r\n                const { errors, values, } = await Object.values(fields).reduce(async (previous, field) => {\r\n                    if (!field) {\r\n                        return previous;\r\n                    }\r\n                    const resolvedPrevious = await previous;\r\n                    const { ref, ref: { name }, } = field;\r\n                    if (!fields[name]) {\r\n                        return Promise.resolve(resolvedPrevious);\r\n                    }\r\n                    const fieldError = await validateField(fieldsRef, validateAllFieldCriteria, field);\r\n                    if (fieldError[name]) {\r\n                        set(resolvedPrevious.errors, name, fieldError[name]);\r\n                        validFieldsRef.current.delete(name);\r\n                        return Promise.resolve(resolvedPrevious);\r\n                    }\r\n                    if (fieldsWithValidationRef.current.has(name)) {\r\n                        validFieldsRef.current.add(name);\r\n                    }\r\n                    resolvedPrevious.values[name] = getFieldValue(fields, ref);\r\n                    return Promise.resolve(resolvedPrevious);\r\n                }, Promise.resolve({\r\n                    errors: {},\r\n                    values: {},\r\n                }));\r\n                fieldErrors = errors;\r\n                fieldValues = values;\r\n            }\r\n            if (isEmptyObject(fieldErrors)) {\r\n                errorsRef.current = {};\r\n                await callback(transformToNestObject(fieldValues), e);\r\n            }\r\n            else {\r\n                if (submitFocusError && isWeb) {\r\n                    focusErrorField(fields, fieldErrors);\r\n                }\r\n                errorsRef.current = fieldErrors;\r\n            }\r\n        }\r\n        finally {\r\n            isSubmittedRef.current = true;\r\n            isSubmittingRef.current = false;\r\n            submitCountRef.current = submitCountRef.current + 1;\r\n            reRender();\r\n        }\r\n    }, [\r\n        isWeb,\r\n        reRender,\r\n        shouldValidateCallback,\r\n        submitFocusError,\r\n        validateAllFieldCriteria,\r\n        validationResolver,\r\n        validationSchema,\r\n    ]);\r\n    const resetRefs = () => {\r\n        errorsRef.current = {};\r\n        fieldsRef.current = {};\r\n        touchedFieldsRef.current = {};\r\n        validFieldsRef.current = new Set();\r\n        fieldsWithValidationRef.current = new Set();\r\n        defaultRenderValuesRef.current = {};\r\n        watchFieldsRef.current = new Set();\r\n        dirtyFieldsRef.current = new Set();\r\n        isWatchAllRef.current = false;\r\n        isSubmittedRef.current = false;\r\n        isDirtyRef.current = false;\r\n        isValidRef.current = true;\r\n        submitCountRef.current = 0;\r\n    };\r\n    const reset = (values) => {\r\n        if (isWeb) {\r\n            for (const value of Object.values(fieldsRef.current)) {\r\n                if (value && isHTMLElement(value.ref) && value.ref.closest) {\r\n                    try {\r\n                        value.ref.closest('form').reset();\r\n                        break;\r\n                    }\r\n                    catch (_a) { }\r\n                }\r\n            }\r\n        }\r\n        if (values) {\r\n            defaultValuesRef.current = values;\r\n        }\r\n        Object.values(resetFieldArrayFunctionRef.current).forEach(resetFieldArray => isFunction(resetFieldArray) && resetFieldArray());\r\n        resetRefs();\r\n        reRender();\r\n    };\r\n    const getValues = (payload) => {\r\n        const fieldValues = getFieldsValues(fieldsRef.current);\r\n        const outputValues = isEmptyObject(fieldValues)\r\n            ? defaultValuesRef.current\r\n            : fieldValues;\r\n        return payload && payload.nest\r\n            ? transformToNestObject(outputValues)\r\n            : outputValues;\r\n    };\r\n    useEffect(() => () => {\r\n        isUnMount.current = true;\r\n        fieldsRef.current &&\r\n            Object.values(fieldsRef.current).forEach((field) => removeFieldEventListenerAndRef(field, true));\r\n    }, [removeFieldEventListenerAndRef]);\r\n    if (!shouldValidateCallback) {\r\n        isValidRef.current =\r\n            validFieldsRef.current.size >= fieldsWithValidationRef.current.size &&\r\n                isEmptyObject(errorsRef.current);\r\n    }\r\n    const formState = {\r\n        dirty: isDirtyRef.current,\r\n        dirtyFields: dirtyFieldsRef.current,\r\n        isSubmitted: isSubmittedRef.current,\r\n        submitCount: submitCountRef.current,\r\n        touched: touchedFieldsRef.current,\r\n        isSubmitting: isSubmittingRef.current,\r\n        isValid: isOnSubmit\r\n            ? isSubmittedRef.current && isEmptyObject(errorsRef.current)\r\n            : isValidRef.current,\r\n    };\r\n    const control = Object.assign(Object.assign({ register,\r\n        unregister,\r\n        removeFieldEventListener,\r\n        getValues,\r\n        setValue,\r\n        reRender,\r\n        triggerValidation }, (shouldValidateCallback ? { validateSchemaIsValid } : {})), { formState, mode: {\r\n            isOnBlur,\r\n            isOnSubmit,\r\n        }, reValidateMode: {\r\n            isReValidateOnBlur,\r\n            isReValidateOnSubmit,\r\n        }, errorsRef,\r\n        touchedFieldsRef,\r\n        fieldsRef,\r\n        resetFieldArrayFunctionRef,\r\n        validFieldsRef,\r\n        fieldsWithValidationRef,\r\n        watchFieldArrayRef,\r\n        fieldArrayNamesRef,\r\n        isDirtyRef,\r\n        readFormStateRef,\r\n        defaultValuesRef });\r\n    return {\r\n        watch,\r\n        control,\r\n        handleSubmit,\r\n        setValue: useCallback(setValue, [\r\n            reRender,\r\n            setInternalValue,\r\n            triggerValidation,\r\n        ]),\r\n        triggerValidation,\r\n        getValues: useCallback(getValues, []),\r\n        reset: useCallback(reset, []),\r\n        register: useCallback(register, [\r\n            defaultValuesRef.current,\r\n            defaultRenderValuesRef.current,\r\n            watchFieldArrayRef.current,\r\n        ]),\r\n        unregister: useCallback(unregister, []),\r\n        clearError: useCallback(clearError, []),\r\n        setError: useCallback(setError, []),\r\n        errors: errorsRef.current,\r\n        formState: isProxyEnabled\r\n            ? new Proxy(formState, {\r\n                get: (obj, prop) => {\r\n                    if (prop in obj) {\r\n                        readFormStateRef.current[prop] = true;\r\n                        return obj[prop];\r\n                    }\r\n                    return {};\r\n                },\r\n            })\r\n            : formState,\r\n    };\r\n}\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nconst FormGlobalContext = createContext(null);\r\nfunction useFormContext() {\r\n    const context = useContext(FormGlobalContext);\r\n    if (!isUndefined(context))\r\n        return context;\r\n    throw new Error('Missing FormContext');\r\n}\r\nfunction FormContext(_a) {\r\n    var { children, formState, errors } = _a, restMethods = __rest(_a, [\"children\", \"formState\", \"errors\"]);\r\n    return (createElement(FormGlobalContext.Provider, { value: Object.assign(Object.assign({}, restMethods), { formState, errors }) }, children));\r\n}\n\nvar generateId = () => {\r\n    const d = typeof performance === UNDEFINED ? Date.now() : performance.now() * 1000;\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        const r = (Math.random() * 16 + d) % 16 | 0;\r\n        return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\r\n    });\r\n};\n\nconst appendId = (value, keyName) => (Object.assign(Object.assign({}, (isObject(value) ? value : { value })), { [keyName]: generateId() }));\r\nconst mapIds = (data, keyName) => (isArray(data) ? data : []).map(value => appendId(value, keyName));\n\nconst removeAt = (data, index) => [\r\n    ...data.slice(0, index),\r\n    ...data.slice(index + 1),\r\n];\r\nvar removeArrayAt = (data, index) => isUndefined(index)\r\n    ? []\r\n    : isArray(index)\r\n        ? index.reduce(({ result, previousIndex }, i) => ({\r\n            result: previousIndex > -1\r\n                ? removeAt(result, previousIndex < i ? i - 1 : i)\r\n                : removeAt(result, i),\r\n            previousIndex: i,\r\n        }), {\r\n            result: data,\r\n            previousIndex: -1,\r\n        }).result\r\n        : removeAt(data, index);\n\nvar moveArrayAt = (data, from, to) => isArray(data) ? data.splice(to, 0, data.splice(from, 1)[0]) : [];\n\nvar swapArrayAt = (fields, indexA, indexB) => isArray(fields) &&\r\n    ([fields[indexA], fields[indexB]] = [fields[indexB], fields[indexA]]);\n\nvar prependAt = (data, value) => [\r\n    ...(isArray(value) ? value : [value || null]),\r\n    ...data,\r\n];\n\nvar insertAt = (data, index, value) => [\r\n    ...data.slice(0, index),\r\n    ...(isArray(value) ? value : [value || null]),\r\n    ...data.slice(index),\r\n];\n\nvar fillEmptyArray = (value) => isArray(value) ? Array(value.length).fill(null) : undefined;\n\nconst { useEffect: useEffect$1, useCallback: useCallback$1, useRef: useRef$1, useState: useState$1 } = React;\r\nconst useFieldArray = ({ control, name, keyName = 'id', }) => {\r\n    const methods = useFormContext();\r\n    const { resetFieldArrayFunctionRef, fieldArrayNamesRef, reRender, fieldsRef, getValues, defaultValuesRef, removeFieldEventListener, errorsRef, isDirtyRef, touchedFieldsRef, readFormStateRef, watchFieldArrayRef, validFieldsRef, fieldsWithValidationRef, validateSchemaIsValid, } = control || methods.control;\r\n    const memoizedDefaultValues = useRef$1(get(defaultValuesRef.current, name, []));\r\n    const [fields, setField] = useState$1(mapIds(memoizedDefaultValues.current, keyName));\r\n    const allFields = useRef$1(fields);\r\n    const appendValueWithKey = (value) => value.map((v) => appendId(v, keyName));\r\n    allFields.current = fields;\r\n    const commonTasks = (fieldsValues) => {\r\n        watchFieldArrayRef.current = Object.assign(Object.assign({}, watchFieldArrayRef.current), { [name]: fieldsValues });\r\n        setField(fieldsValues);\r\n        if (readFormStateRef.current.isValid && validateSchemaIsValid) {\r\n            validateSchemaIsValid({\r\n                [name]: fieldsValues,\r\n            });\r\n        }\r\n    };\r\n    const resetFields = (flagOrFields) => {\r\n        if (readFormStateRef.current.dirty) {\r\n            isDirtyRef.current = isUndefined(flagOrFields)\r\n                ? true\r\n                : getIsFieldsDifferent(flagOrFields, memoizedDefaultValues.current);\r\n        }\r\n        for (const key in fieldsRef.current) {\r\n            if (isMatchFieldArrayName(key, name) && fieldsRef.current[key]) {\r\n                removeFieldEventListener(fieldsRef.current[key], true);\r\n            }\r\n        }\r\n    };\r\n    const mapCurrentFieldsValueWithState = () => {\r\n        const currentFieldsValue = getValues({ nest: true })[name];\r\n        if (isArray(currentFieldsValue)) {\r\n            for (let i = 0; i < currentFieldsValue.length; i++) {\r\n                fields[i] = Object.assign(Object.assign({}, fields[i]), currentFieldsValue[i]);\r\n            }\r\n        }\r\n    };\r\n    const append = (value) => {\r\n        mapCurrentFieldsValueWithState();\r\n        if (readFormStateRef.current.dirty) {\r\n            isDirtyRef.current = true;\r\n        }\r\n        commonTasks([\r\n            ...allFields.current,\r\n            ...(isArray(value)\r\n                ? appendValueWithKey(value)\r\n                : [appendId(value, keyName)]),\r\n        ]);\r\n    };\r\n    const prepend = (value) => {\r\n        mapCurrentFieldsValueWithState();\r\n        resetFields();\r\n        commonTasks(prependAt(allFields.current, isArray(value) ? appendValueWithKey(value) : [appendId(value, keyName)]));\r\n        if (errorsRef.current[name]) {\r\n            errorsRef.current[name] = prependAt(errorsRef.current[name], fillEmptyArray(value));\r\n        }\r\n        if (readFormStateRef.current.touched && touchedFieldsRef.current[name]) {\r\n            touchedFieldsRef.current[name] = prependAt(touchedFieldsRef.current[name], fillEmptyArray(value));\r\n        }\r\n    };\r\n    const remove = (index) => {\r\n        if (!isUndefined(index)) {\r\n            mapCurrentFieldsValueWithState();\r\n        }\r\n        resetFields(removeArrayAt(getFieldValueByName(fieldsRef.current, name), index));\r\n        commonTasks(removeArrayAt(allFields.current, index));\r\n        if (errorsRef.current[name]) {\r\n            errorsRef.current[name] = removeArrayAt(errorsRef.current[name], index);\r\n            if (!errorsRef.current[name].filter(Boolean).length) {\r\n                delete errorsRef.current[name];\r\n            }\r\n        }\r\n        if (readFormStateRef.current.touched && touchedFieldsRef.current[name]) {\r\n            touchedFieldsRef.current[name] = removeArrayAt(touchedFieldsRef.current[name], index);\r\n        }\r\n        if (readFormStateRef.current.isValid && !validateSchemaIsValid) {\r\n            let fieldIndex = -1;\r\n            let isFound = false;\r\n            const isIndexUndefined = isUndefined(index);\r\n            while (fieldIndex++ < fields.length) {\r\n                const isLast = fieldIndex === fields.length - 1;\r\n                const isCurrentIndex = (isArray(index) ? index : [index]).indexOf(fieldIndex) >= 0;\r\n                if (isCurrentIndex || isIndexUndefined) {\r\n                    isFound = true;\r\n                }\r\n                if (!isFound) {\r\n                    continue;\r\n                }\r\n                for (const key in fields[fieldIndex]) {\r\n                    const currentFieldName = `${name}[${fieldIndex}].${key}`;\r\n                    if (isCurrentIndex || isLast || isIndexUndefined) {\r\n                        validFieldsRef.current.delete(currentFieldName);\r\n                        fieldsWithValidationRef.current.delete(currentFieldName);\r\n                    }\r\n                    else {\r\n                        const previousFieldName = `${name}[${fieldIndex - 1}].${key}`;\r\n                        if (validFieldsRef.current.has(currentFieldName)) {\r\n                            validFieldsRef.current.add(previousFieldName);\r\n                        }\r\n                        if (fieldsWithValidationRef.current.has(currentFieldName)) {\r\n                            fieldsWithValidationRef.current.add(previousFieldName);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            reRender();\r\n        }\r\n    };\r\n    const insert = (index, value) => {\r\n        mapCurrentFieldsValueWithState();\r\n        resetFields(insertAt(getFieldValueByName(fieldsRef.current, name), index));\r\n        commonTasks(insertAt(allFields.current, index, isArray(value) ? appendValueWithKey(value) : [appendId(value, keyName)]));\r\n        if (errorsRef.current[name]) {\r\n            errorsRef.current[name] = insertAt(errorsRef.current[name], index, fillEmptyArray(value));\r\n        }\r\n        if (readFormStateRef.current.touched && touchedFieldsRef.current[name]) {\r\n            touchedFieldsRef.current[name] = insertAt(touchedFieldsRef.current[name], index, fillEmptyArray(value));\r\n        }\r\n    };\r\n    const swap = (indexA, indexB) => {\r\n        mapCurrentFieldsValueWithState();\r\n        const fieldValues = getFieldValueByName(fieldsRef.current, name);\r\n        swapArrayAt(fieldValues, indexA, indexB);\r\n        resetFields(fieldValues);\r\n        swapArrayAt(allFields.current, indexA, indexB);\r\n        commonTasks([...allFields.current]);\r\n        if (errorsRef.current[name]) {\r\n            swapArrayAt(errorsRef.current[name], indexA, indexB);\r\n        }\r\n        if (readFormStateRef.current.touched && touchedFieldsRef.current[name]) {\r\n            swapArrayAt(touchedFieldsRef.current[name], indexA, indexB);\r\n        }\r\n    };\r\n    const move = (from, to) => {\r\n        mapCurrentFieldsValueWithState();\r\n        const fieldValues = getFieldValueByName(fieldsRef.current, name);\r\n        moveArrayAt(fieldValues, from, to);\r\n        resetFields(fieldValues);\r\n        moveArrayAt(allFields.current, from, to);\r\n        commonTasks([...allFields.current]);\r\n        if (errorsRef.current[name]) {\r\n            moveArrayAt(errorsRef.current[name], from, to);\r\n        }\r\n        if (readFormStateRef.current.touched && touchedFieldsRef.current[name]) {\r\n            moveArrayAt(touchedFieldsRef.current[name], from, to);\r\n        }\r\n    };\r\n    const reset = () => {\r\n        resetFields();\r\n        memoizedDefaultValues.current = get(defaultValuesRef.current, name, []);\r\n        setField(mapIds(memoizedDefaultValues.current, keyName));\r\n    };\r\n    useEffect$1(() => {\r\n        const resetFunctions = resetFieldArrayFunctionRef.current;\r\n        const fieldArrayNames = fieldArrayNamesRef.current;\r\n        fieldArrayNames.add(name);\r\n        resetFunctions[name] = reset;\r\n        watchFieldArrayRef.current = Object.assign(Object.assign({}, watchFieldArrayRef.current), { [name]: fields });\r\n        return () => {\r\n            resetFields();\r\n            delete resetFunctions[name];\r\n            fieldArrayNames.delete(name);\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n    return {\r\n        swap: useCallback$1(swap, []),\r\n        move: useCallback$1(move, []),\r\n        prepend: useCallback$1(prepend, []),\r\n        append: useCallback$1(append, []),\r\n        remove: useCallback$1(remove, []),\r\n        insert: useCallback$1(insert, []),\r\n        fields,\r\n    };\r\n};\n\nvar getInputValue = (event, isCheckboxInput) => isPrimitive(event) ||\r\n    !isObject(event.target) ||\r\n    (isObject(event.target) && !event.type)\r\n    ? event\r\n    : isCheckboxInput || isUndefined(event.target.value)\r\n        ? event.target.checked\r\n        : event.target.value;\n\nconst Controller = (_a) => {\r\n    var { name, rules, as: InnerComponent, onBlur, onChange, onChangeName = VALIDATION_MODE.onChange, onBlurName = VALIDATION_MODE.onBlur, valueName, defaultValue, control } = _a, rest = __rest(_a, [\"name\", \"rules\", \"as\", \"onBlur\", \"onChange\", \"onChangeName\", \"onBlurName\", \"valueName\", \"defaultValue\", \"control\"]);\r\n    const methods = useFormContext();\r\n    const { defaultValuesRef, setValue, register, unregister, errorsRef, removeFieldEventListener, triggerValidation, mode: { isOnSubmit, isOnBlur }, reValidateMode: { isReValidateOnBlur, isReValidateOnSubmit }, formState: { isSubmitted }, fieldsRef, fieldArrayNamesRef, } = control || methods.control;\r\n    const [value, setInputStateValue] = useState$2(isUndefined(defaultValue)\r\n        ? get(defaultValuesRef.current, name)\r\n        : defaultValue);\r\n    const valueRef = useRef$2(value);\r\n    const isCheckboxInput = isBoolean(value);\r\n    const shouldValidate = () => !skipValidation({\r\n        hasError: !!get(errorsRef.current, name),\r\n        isOnBlur,\r\n        isOnSubmit,\r\n        isReValidateOnBlur,\r\n        isReValidateOnSubmit,\r\n        isSubmitted,\r\n    });\r\n    const commonTask = (event) => {\r\n        const data = getInputValue(event, isCheckboxInput);\r\n        setInputStateValue(data);\r\n        valueRef.current = data;\r\n        return data;\r\n    };\r\n    const eventWrapper = (event) => (...arg) => setValue(name, commonTask(event(arg)), shouldValidate());\r\n    const handleChange = (event) => {\r\n        const data = commonTask(event);\r\n        setValue(name, data, shouldValidate());\r\n    };\r\n    const registerField = () => {\r\n        if (isNameInFieldArray(fieldArrayNamesRef.current, name) &&\r\n            fieldsRef.current[name]) {\r\n            removeFieldEventListener(fieldsRef.current[name], true);\r\n        }\r\n        register(Object.defineProperty({ name }, VALUE, {\r\n            set(data) {\r\n                setInputStateValue(data);\r\n                valueRef.current = data;\r\n            },\r\n            get() {\r\n                return valueRef.current;\r\n            },\r\n        }), Object.assign({}, rules));\r\n    };\r\n    useEffect$2(() => {\r\n        if (!fieldsRef.current[name]) {\r\n            registerField();\r\n            setInputStateValue(isUndefined(defaultValue)\r\n                ? get(defaultValuesRef.current, name)\r\n                : defaultValue);\r\n        }\r\n    });\r\n    useEffect$2(() => {\r\n        registerField();\r\n        return () => {\r\n            if (!isNameInFieldArray(fieldArrayNamesRef.current, name)) {\r\n                unregister(name);\r\n            }\r\n        };\r\n    }, [name]);\r\n    const shouldReValidateOnBlur = isOnBlur || isReValidateOnBlur;\r\n    const props = Object.assign(Object.assign(Object.assign(Object.assign({ name }, rest), (onChange\r\n        ? { [onChangeName]: eventWrapper(onChange) }\r\n        : { [onChangeName]: handleChange })), (onBlur || shouldReValidateOnBlur\r\n        ? {\r\n            [onBlurName]: (...args) => {\r\n                if (onBlur) {\r\n                    onBlur(args);\r\n                }\r\n                if (shouldReValidateOnBlur) {\r\n                    triggerValidation(name);\r\n                }\r\n            },\r\n        }\r\n        : {})), { [valueName || (isCheckboxInput ? 'checked' : VALUE)]: value });\r\n    return isValidElement(InnerComponent)\r\n        ? cloneElement(InnerComponent, props)\r\n        : createElement(InnerComponent, props);\r\n};\n\nconst ErrorMessage = (_a) => {\r\n    var { as: InnerComponent, errors, name, message, children } = _a, rest = __rest(_a, [\"as\", \"errors\", \"name\", \"message\", \"children\"]);\r\n    const methods = useFormContext();\r\n    const error = get(errors || methods.errors, name);\r\n    if (!error) {\r\n        return null;\r\n    }\r\n    const { message: messageFromRegister, types } = error;\r\n    const props = Object.assign(Object.assign({}, (InnerComponent ? rest : {})), { children: children\r\n            ? children({ message: messageFromRegister || message, messages: types })\r\n            : messageFromRegister || message });\r\n    return InnerComponent ? (isValidElement(InnerComponent) ? (cloneElement(InnerComponent, props)) : (createElement(InnerComponent, props))) : (createElement(Fragment, Object.assign({}, props)));\r\n};\n\nexport { Controller, ErrorMessage, FormContext, useFieldArray, useForm, useFormContext };\n"]},"metadata":{},"sourceType":"module"}
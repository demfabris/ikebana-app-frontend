{"ast":null,"code":"import _slicedToArray from\"/home/fabricio7p/Documents/Projects/Ikebana/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{setNotifRead}from'store/ducks/notifications';import{useDispatch}from'react-redux';import MessageDialog from'../../Dialog/components/MessageDialog/MessageDialog';import Modal from'../../aux/Modal.js';import'./styles.scss';export default function MessageDisplay(el){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),dialog=_useState2[0],setDialog=_useState2[1];var dispatch=useDispatch();var joinDate=Date.parse(el.sended_on);var created=new Date(joinDate);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{onClick:function onClick(){setDialog(true);},className:\"msg-element\"},/*#__PURE__*/React.createElement(\"ul\",{className:\"msg-element__list\"},/*#__PURE__*/React.createElement(\"li\",{className:\"msg-element__list--el\"},/*#__PURE__*/React.createElement(\"i\",{className:\"material-icons\"},\"\".concat(el.is_read?'drafts':'mail'))),/*#__PURE__*/React.createElement(\"li\",{className:\"msg-element__list--el\"},/*#__PURE__*/React.createElement(\"p\",{className:\"msg-preview\"},el.content)),/*#__PURE__*/React.createElement(\"li\",{className:\"msg-element__list--el\"},/*#__PURE__*/React.createElement(\"p\",{className:\"msg-sender\"},\"Mensagem do sistema\")),/*#__PURE__*/React.createElement(\"li\",{className:\"msg-element__list--el\"},/*#__PURE__*/React.createElement(\"p\",{className:\"msg-date\"},' '+created.getDate(),\"/\",1+created.getMonth(),\"/\",created.getFullYear())))),dialog&&/*#__PURE__*/React.createElement(Modal,null,/*#__PURE__*/React.createElement(MessageDialog,{handler:function handler(){setDialog(false);dispatch(setNotifRead(el.id));},el:el})));}","map":{"version":3,"sources":["/home/fabricio7p/Documents/Projects/Ikebana/front/src/components/list_elements/Message/MessageDisplay.js"],"names":["React","useState","useEffect","setNotifRead","useDispatch","MessageDialog","Modal","MessageDisplay","el","dialog","setDialog","dispatch","joinDate","Date","parse","sended_on","created","is_read","content","getDate","getMonth","getFullYear","id"],"mappings":"wKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,YAAT,KAA6B,2BAA7B,CACA,OAASC,WAAT,KAA4B,aAA5B,CAEA,MAAOC,CAAAA,aAAP,KAA0B,qDAA1B,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CAEA,MAAO,eAAP,CAEA,cAAe,SAASC,CAAAA,cAAT,CAAwBC,EAAxB,CAA4B,eACXP,QAAQ,CAAC,KAAD,CADG,wCAChCQ,MADgC,eACxBC,SADwB,eAEvC,GAAMC,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CAEA,GAAMQ,CAAAA,QAAQ,CAAGC,IAAI,CAACC,KAAL,CAAWN,EAAE,CAACO,SAAd,CAAjB,CACA,GAAMC,CAAAA,OAAO,CAAG,GAAIH,CAAAA,IAAJ,CAASD,QAAT,CAAhB,CAEA,mBACI,qDACI,2BAAK,OAAO,CAAE,kBAAM,CAChBF,SAAS,CAAC,IAAD,CAAT,CACC,CAFL,CAEO,SAAS,CAAC,aAFjB,eAGI,0BAAI,SAAS,CAAC,mBAAd,eACI,0BAAI,SAAS,CAAC,uBAAd,eACI,yBAAG,SAAS,CAAC,gBAAb,YACAF,EAAE,CAACS,OAAH,CAAa,QAAb,CAAwB,MADxB,EADJ,CADJ,cAKI,0BAAI,SAAS,CAAC,uBAAd,eACI,yBAAG,SAAS,CAAC,aAAb,EAA4BT,EAAE,CAACU,OAA/B,CADJ,CALJ,cAQI,0BAAI,SAAS,CAAC,uBAAd,eACI,yBAAG,SAAS,CAAC,YAAb,wBADJ,CARJ,cAWI,0BAAI,SAAS,CAAC,uBAAd,eACI,yBAAG,SAAS,CAAC,UAAb,EACK,IAAMF,OAAO,CAACG,OAAR,EADX,KAEO,EAAIH,OAAO,CAACI,QAAR,EAFX,KAGOJ,OAAO,CAACK,WAAR,EAHP,CADJ,CAXJ,CAHJ,CADJ,CAyBQZ,MAAM,eACF,oBAAC,KAAD,mBACI,oBAAC,aAAD,EAAe,OAAO,CAAE,kBAAM,CAC1BC,SAAS,CAAC,KAAD,CAAT,CACAC,QAAQ,CAACR,YAAY,CAACK,EAAE,CAACc,EAAJ,CAAb,CAAR,CACH,CAHD,CAGG,EAAE,CAAEd,EAHP,EADJ,CA1BZ,CADJ,CAoCH","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { setNotifRead } from 'store/ducks/notifications';\nimport { useDispatch } from 'react-redux';\n\nimport MessageDialog from '../../Dialog/components/MessageDialog/MessageDialog';\nimport Modal from '../../aux/Modal.js';\n\nimport './styles.scss';\n\nexport default function MessageDisplay(el) {\n    const [dialog, setDialog] = useState(false);\n    const dispatch = useDispatch();\n\n    const joinDate = Date.parse(el.sended_on)\n    const created = new Date(joinDate)\n\n    return(\n        <>\n            <div onClick={() => {\n                setDialog(true);\n                }} className=\"msg-element\">\n                <ul className=\"msg-element__list\">\n                    <li className=\"msg-element__list--el\">\n                        <i className=\"material-icons\">\n                    {`${el.is_read ? 'drafts' : 'mail'}`}</i>\n                    </li>\n                    <li className=\"msg-element__list--el\">\n                        <p className=\"msg-preview\">{el.content}</p>\n                    </li>\n                    <li className=\"msg-element__list--el\">\n                        <p className=\"msg-sender\">Mensagem do sistema</p>\n                    </li>\n                    <li className=\"msg-element__list--el\">\n                        <p className=\"msg-date\">\n                            {' ' + created.getDate()\n                            }/{1 + created.getMonth()\n                            }/{created.getFullYear()}\n                        </p>\n                    </li>\n                </ul>\n            </div>\n            {\n                dialog &&\n                    <Modal>\n                        <MessageDialog handler={() => {\n                            setDialog(false)\n                            dispatch(setNotifRead(el.id))\n                        }} el={el}/>\n                    </Modal>\n            }\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}
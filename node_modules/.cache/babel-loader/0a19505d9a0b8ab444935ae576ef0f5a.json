{"ast":null,"code":"import _slicedToArray from \"/home/fabricio7p/Documents/Projects/Ikebana/front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/fabricio7p/Documents/Projects/Ikebana/front/src/components/pages/Account/components/New/NewProject.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport api from 'services/api';\nimport { useForm } from 'react-hook-form';\nimport Modal from '../../../../aux/Modal';\nimport ErrorDialog from '../../../../aux/ErrorDialog/ErrorDialog';\nimport './styles.scss';\nexport default function NewProject() {\n  //forms\n  const _useForm = useForm(),\n        register = _useForm.register,\n        handleSubmit = _useForm.handleSubmit,\n        errors = _useForm.errors,\n        watch = _useForm.watch; //store select\n\n\n  const authKey = useSelector(state => state.auth.keys);\n  const userData = useSelector(state => state.account.userData[0]); //error dialog\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        error = _useState2[0],\n        setError = _useState2[1]; //feeding data\n\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        data = _useState4[0],\n        setData = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        loading = _useState6[0],\n        setLoading = _useState6[1]; //picture inputs\n\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        file1 = _useState8[0],\n        setFile1 = _useState8[1];\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        file2 = _useState10[0],\n        setFile2 = _useState10[1];\n\n  const _useState11 = useState([]),\n        _useState12 = _slicedToArray(_useState11, 2),\n        file3 = _useState12[0],\n        setFile3 = _useState12[1];\n\n  const handleInputChange = e => {\n    const inputNum = e.target.name.split('file')[1];\n    const file = e.target.files[0];\n\n    if (!file) {\n      setError('Selecione alguma foto');\n      return void 0;\n    }\n\n    if ((file.size / 1024 / 1024).toFixed() > 5) {\n      setError('Selecione um arquivo menor que 5MB');\n      return void 0;\n    }\n\n    if (!['image/png', 'image/jpeg'].includes(file.type)) {\n      setError('Formato inválido, selecione apenas imagens JPG ou PNG');\n      return void 0;\n    }\n\n    const preview = URL.createObjectURL(file);\n\n    switch (inputNum) {\n      case '1':\n        {\n          setFile1({\n            file,\n            preview\n          });\n          break;\n        }\n\n      case '2':\n        {\n          setFile2({\n            file,\n            preview\n          });\n          break;\n        }\n\n      case '3':\n        {\n          setFile3({\n            file,\n            preview\n          });\n          break;\n        }\n\n      default:\n        {\n          return void 0;\n        }\n    }\n  };\n\n  const onSubmit = async ({\n    project_type,\n    project_title,\n    project_desc,\n    project_video\n  }) => {\n    setLoading(true);\n    const formData = new FormData();\n\n    try {\n      formData.append('project_type', project_type);\n      formData.append('project_title', project_title);\n      formData.append('project_desc', project_desc);\n      formData.append('project_video', project_video);\n      formData.append('file1', file1.file);\n      formData.append('file2', file2.file);\n      formData.append('file3', file3.file);\n      const response = await api({\n        method: 'post',\n        url: '/projects',\n        headers: {\n          'Authorization': `Bearer ${authKey[0].key}`,\n          'Content-Type': 'multipart/form-data'\n        },\n        data: formData\n      });\n      console.log(response.data);\n    } catch (e) {\n      console.log(e.message);\n      e.message.includes('500') && setError('Um projeto com este nome já existe');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    setFile1({\n      preview: ''\n    });\n    setFile2({\n      preview: ''\n    });\n    setFile3({\n      preview: ''\n    });\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"new\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"new__header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"password__header--title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Criar um novo projeto.\")), React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"new__inputs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"new__inputs--desc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Informa\\xE7\\xF5es do projeto\"), React.createElement(\"div\", {\n    className: \"new__inputs--container acc-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"project-name\",\n    className: \"input-label acc-field__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Tipo\"), React.createElement(\"div\", {\n    className: \"project-type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"project-type__label\",\n    htmlFor: \"arrangement\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Arranjo\"), React.createElement(\"input\", {\n    className: \"project-type__input\",\n    value: \"arrangement\",\n    type: \"radio\",\n    id: \"arrangement\",\n    name: \"project_type\",\n    ref: register(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"project-type__label\",\n    htmlFor: \"lesson\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Aula\"), React.createElement(\"input\", {\n    className: \"project-type__input\",\n    value: \"lesson\",\n    type: \"radio\",\n    id: \"lesson\",\n    ref: register(),\n    name: \"project_type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"new__inputs--container acc-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"project-name\",\n    className: \"input-label acc-field__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"Nome do Projeto\"), React.createElement(\"input\", {\n    type: \"text\",\n    ref: register({\n      required: true\n    }),\n    className: \"account-input\",\n    name: \"project_title\",\n    id: \"project-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"new__inputs--container acc-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"project-desc\",\n    className: \"input-label acc-field__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Descri\\xE7\\xE3o\"), React.createElement(\"textarea\", {\n    id: \"project-desc\",\n    className: \"account-input\",\n    ref: register({\n      required: true\n    }),\n    placeholder: \"Texto descritivo ou explicativo\",\n    name: \"project_desc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    className: \"new__inputs--desc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Fotos\"), React.createElement(\"div\", {\n    className: \"new__inputs--container acc-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"input-label acc-field__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Fotos do Projeto\"), React.createElement(\"div\", {\n    className: \"picture-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"picture-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"picture-container__btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: `close-overlay ${!file1.preview ? 'inactive' : ''}`,\n    onClick: () => setFile1([]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"material-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"close\")), React.createElement(\"img\", {\n    src: file1.preview,\n    className: \"img-preview\",\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }), React.createElement(\"i\", {\n    className: \"material-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"add\"), React.createElement(\"input\", {\n    type: \"file\",\n    ref: register(),\n    onChange: handleInputChange,\n    className: \"picture-input\",\n    name: \"file1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"picture-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"picture-container__btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: `close-overlay ${!file2.preview ? 'inactive' : ''}`,\n    onClick: () => setFile2([]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"material-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, \"close\")), React.createElement(\"img\", {\n    src: file2.preview,\n    className: \"img-preview\",\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }), React.createElement(\"i\", {\n    className: \"material-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \"add\"), React.createElement(\"input\", {\n    type: \"file\",\n    ref: register(),\n    onChange: handleInputChange,\n    className: \"picture-input\",\n    name: \"file2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"picture-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"picture-container__btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: `close-overlay ${!file3.preview ? 'inactive' : ''}`,\n    onClick: () => setFile3([]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"material-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, \"close\")), React.createElement(\"img\", {\n    src: file3.preview,\n    className: \"img-preview\",\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }), React.createElement(\"i\", {\n    className: \"material-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \"add\"), React.createElement(\"input\", {\n    type: \"file\",\n    ref: register(),\n    onChange: handleInputChange,\n    className: \"picture-input\",\n    name: \"file3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }))))), React.createElement(\"p\", {\n    className: \"new__inputs--desc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, \"Videoaula\"), React.createElement(\"div\", {\n    className: \"new__inputs--container acc-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"project-video\",\n    className: \"input-label acc-field__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, \"Link do Video*\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"account-input\",\n    id: \"project-video\",\n    ref: register(),\n    name: \"project_video\",\n    placeholder: \"Somente links do YouTube\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"app-btn btn-filled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, loading === true ? React.createElement(\"div\", {\n    className: \"sizer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"lds-ellipsis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }))) : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, \"Concluir\"))))), error && React.createElement(Modal, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, React.createElement(ErrorDialog, {\n    value: error,\n    handler: () => {\n      setError(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/home/fabricio7p/Documents/Projects/Ikebana/front/src/components/pages/Account/components/New/NewProject.js"],"names":["React","useEffect","useState","useDispatch","useSelector","api","useForm","Modal","ErrorDialog","NewProject","register","handleSubmit","errors","watch","authKey","state","auth","keys","userData","account","error","setError","data","setData","loading","setLoading","file1","setFile1","file2","setFile2","file3","setFile3","handleInputChange","e","inputNum","target","name","split","file","files","size","toFixed","includes","type","preview","URL","createObjectURL","onSubmit","project_type","project_title","project_desc","project_video","formData","FormData","append","response","method","url","headers","key","console","log","message","required"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport api from 'services/api'\nimport { useForm } from 'react-hook-form';\n\nimport Modal from '../../../../aux/Modal';\nimport ErrorDialog from '../../../../aux/ErrorDialog/ErrorDialog';\n\n\nimport './styles.scss';\n\nexport default function NewProject() {\n    //forms\n    const { register, handleSubmit, errors, watch } = useForm();\n\n    //store select\n    const authKey = useSelector(state => state.auth.keys)\n    const userData = useSelector(state => state.account.userData[0])\n\n    //error dialog\n    const [error, setError] = useState(false);\n\n    //feeding data\n    const [data, setData] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    //picture inputs\n    const [file1, setFile1] = useState([]);\n    const [file2, setFile2] = useState([]);\n    const [file3, setFile3] = useState([]);\n\n    const handleInputChange = (e) => {\n        const inputNum = e.target.name.split('file')[1]\n        const file = e.target.files[0]\n\n        if (!file) {\n            setError('Selecione alguma foto')\n            return void 0\n        }\n\n        if (((file.size/1024)/1024).toFixed() > 5) {\n            setError('Selecione um arquivo menor que 5MB')\n            return void 0\n        }\n\n        if (!(['image/png', 'image/jpeg'].includes(file.type))){\n            setError('Formato inválido, selecione apenas imagens JPG ou PNG')\n            return void 0\n        }\n\n        const preview = URL.createObjectURL(file)\n\n        switch(inputNum) {\n            case '1': {\n                setFile1({ file, preview})\n                break;\n            }\n            case '2': {\n                setFile2({ file, preview})\n                break;\n            }\n            case '3': {\n                setFile3({ file, preview})\n                break;\n            }\n            default: {\n                return void 0\n            }\n        }\n    }\n\n    const onSubmit = async ({ \n        project_type,\n        project_title,\n        project_desc,\n        project_video }) => {\n            setLoading(true)\n            const formData = new FormData();\n            try {\n                formData.append('project_type', project_type)\n                formData.append('project_title', project_title)\n                formData.append('project_desc', project_desc)\n                formData.append('project_video', project_video)\n                formData.append('file1', file1.file)\n                formData.append('file2', file2.file)\n                formData.append('file3', file3.file)\n                const response = await api({\n                    method: 'post',\n                    url: '/projects',\n                    headers: {\n                        'Authorization': `Bearer ${authKey[0].key}`,\n                        'Content-Type': 'multipart/form-data'\n                    },\n                    data: formData,\n                })\n                console.log(response.data)\n            } catch(e) {\n                console.log(e.message)\n                e.message.includes('500') && setError('Um projeto com este nome já existe')\n            } finally {\n                setLoading(false)\n            }\n        }\n\n    useEffect(() => {\n        setFile1({preview: ''})\n        setFile2({preview: ''})\n        setFile3({preview: ''})\n    },[])\n\n    return(\n        <>\n            <div className=\"new\">\n                <div className=\"new__header\">\n                    <p className=\"password__header--title\">Criar um novo projeto.</p>\n                </div>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <div className=\"new__inputs\">\n                        <p className=\"new__inputs--desc\">Informações do projeto</p>\n                        <div className=\"new__inputs--container acc-field\">\n                            <label htmlFor=\"project-name\"\n                                className=\"input-label acc-field__title\">\n                                Tipo</label>\n                            <div className=\"project-type\">\n                                <label className=\"project-type__label\" \n                                    htmlFor=\"arrangement\">Arranjo\n                                </label>\n                                <input className=\"project-type__input\" value=\"arrangement\"\n                                    type=\"radio\" id=\"arrangement\" name=\"project_type\"\n                                    ref={register()}/>\n                                <label className=\"project-type__label\" \n                                    htmlFor=\"lesson\">Aula\n                                </label>\n                                <input className=\"project-type__input\" value=\"lesson\"\n                                    type=\"radio\" id=\"lesson\" ref={register()} \n                                    name=\"project_type\" />\n                            </div>\n                        </div>\n                        <div className=\"new__inputs--container acc-field\">\n                            <label htmlFor=\"project-name\"\n                                className=\"input-label acc-field__title\">\n                                Nome do Projeto</label>\n                            <input type=\"text\" ref={register({required: true})} \n                                className=\"account-input\" name=\"project_title\"\n                                id=\"project-name\"/>\n                        </div>\n                        <div className=\"new__inputs--container acc-field\">\n                            <label htmlFor=\"project-desc\"\n                                className=\"input-label acc-field__title\">\n                                Descrição</label>\n                            <textarea id=\"project-desc\" \n                                className=\"account-input\" ref={register({required: true})}\n                                placeholder=\"Texto descritivo ou explicativo\" \n                                name=\"project_desc\">\n                            </textarea>\n                        </div>\n                        <p className=\"new__inputs--desc\">Fotos</p>\n                        <div className=\"new__inputs--container acc-field\">\n                            <label className=\"input-label acc-field__title\">\n                                Fotos do Projeto</label>\n                            <div className=\"picture-wrapper\">\n                                <div className=\"picture-container\">\n                                    <button className=\"picture-container__btn\">\n                                        <button className=\n                                            {`close-overlay ${ !file1.preview \n                                            ? 'inactive' : '' }`}\n                                            onClick={() => setFile1([])}>\n                                        <i className=\"material-icons\">close</i></button>\n                                        <img src={file1.preview} \n                                            className=\"img-preview\" alt=\"\" />\n                                        <i className=\"material-icons\">add</i>\n                                        <input type=\"file\" ref={register()} \n                                            onChange={handleInputChange}\n                                            className=\"picture-input\" \n                                            name=\"file1\" />\n                                    </button>\n                                </div>\n                                <div className=\"picture-container\">\n                                    <button className=\"picture-container__btn\">\n                                        <button className=\n                                            {`close-overlay ${ !file2.preview \n                                            ? 'inactive' : '' }`}\n                                            onClick={() => setFile2([])}>\n                                        <i className=\"material-icons\">close</i></button>\n                                        <img src={file2.preview} \n                                            className=\"img-preview\" alt=\"\" />\n                                        <i className=\"material-icons\">add</i>\n                                        <input type=\"file\" ref={register()} \n                                            onChange={handleInputChange}\n                                            className=\"picture-input\" \n                                            name=\"file2\" />\n                                    </button>\n                                </div>\n                                <div className=\"picture-container\">\n                                    <button className=\"picture-container__btn\">\n                                        <button className=\n                                            {`close-overlay ${ !file3.preview \n                                            ? 'inactive' : '' }`}\n                                            onClick={() => setFile3([])}>\n                                        <i className=\"material-icons\">close</i></button>\n                                        <img src={file3.preview} \n                                            className=\"img-preview\" alt=\"\" />\n                                        <i className=\"material-icons\">add</i>\n                                        <input type=\"file\" ref={register()} \n                                            onChange={handleInputChange}\n                                            className=\"picture-input\" \n                                            name=\"file3\" />\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                        <p className=\"new__inputs--desc\">Videoaula</p>\n                        <div className=\"new__inputs--container acc-field\">\n                            <label htmlFor=\"project-video\"\n                                className=\"input-label acc-field__title\">\n                                Link do Video*</label>\n                            <input type=\"text\" className=\"account-input\" \n                                id=\"project-video\" ref={register()} name=\"project_video\"\n                                placeholder=\"Somente links do YouTube\"/>\n                        </div>\n                        <button className=\"app-btn btn-filled\">\n                            {\n                                loading === true ? <div className=\"sizer\">\n                                    <div class=\"lds-ellipsis\"><div></div>\n                                        <div></div><div></div><div></div></div>\n                                </div>\n                                :\n                                <p>Concluir</p>\n                            }\n                        </button>\n                    </div>\n                </form>\n            </div>\n            {\n                error &&\n                    <Modal>\n                        <ErrorDialog value={error} handler={() =>{\n                            setError(false)\n                        } }/>\n                    </Modal>\n            }\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from\"/home/fabricio7p/Documents/Projects/Ikebana/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/fabricio7p/Documents/Projects/Ikebana/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';var api=axios.create({baseURL:'ec2-18-228-154-82.sa-east-1.compute.amazonaws.com'});export var fetchApi=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var method,url,headers,data,mock,handler,response,_args=arguments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:method=_args.length>0&&_args[0]!==undefined?_args[0]:'get';url=_args.length>1?_args[1]:undefined;headers=_args.length>2&&_args[2]!==undefined?_args[2]:null;data=_args.length>3?_args[3]:undefined;mock=_args.length>4&&_args[4]!==undefined?_args[4]:false;handler=_args.length>5?_args[5]:undefined;if(!(mock===true)){_context.next=8;break;}return _context.abrupt(\"return\",data);case 8:_context.next=10;return api({method:method,url:url,headers:headers,data:data});case 10:response=_context.sent;if(!response.data.error){_context.next=14;break;}handler();return _context.abrupt(\"return\",response.data.error);case 14:return _context.abrupt(\"return\",response.data);case 15:case\"end\":return _context.stop();}}},_callee);}));return function fetchApi(){return _ref.apply(this,arguments);};}();export default api;","map":{"version":3,"sources":["/home/fabricio7p/Documents/Projects/Ikebana/front/src/services/api.js"],"names":["axios","api","create","baseURL","fetchApi","method","url","headers","data","mock","handler","response","error"],"mappings":"6UAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,GAAG,CAAGD,KAAK,CAACE,MAAN,CAAa,CACrBC,OAAO,CAAE,mDADY,CAAb,CAAZ,CAIA,MAAO,IAAMC,CAAAA,QAAQ,0FAAG,qMAAOC,MAAP,+CAAc,KAAd,CAAqBC,GAArB,mCACpBC,OADoB,+CACZ,IADY,CAEpBC,IAFoB,mCAGpBC,IAHoB,+CAGf,KAHe,CAIpBC,OAJoB,wCAOhBD,IAAI,GAAK,IAPO,0DAQTD,IARS,gCAWGP,CAAAA,GAAG,CAAC,CACvBI,MAAM,CAANA,MADuB,CAEvBC,GAAG,CAAHA,GAFuB,CAGvBC,OAAO,CAAPA,OAHuB,CAIvBC,IAAI,CAAJA,IAJuB,CAAD,CAXN,SAWdG,QAXc,mBAkBhBA,QAAQ,CAACH,IAAT,CAAcI,KAlBE,0BAmBhBF,OAAO,GAnBS,gCAoBTC,QAAQ,CAACH,IAAT,CAAcI,KApBL,0CAuBbD,QAAQ,CAACH,IAvBI,yDAAH,kBAARJ,CAAAA,QAAQ,0CAAd,CA0BP,cAAeH,CAAAA,GAAf","sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: 'ec2-18-228-154-82.sa-east-1.compute.amazonaws.com'\n});\n\nexport const fetchApi = async (method='get', url, \n    headers=null, \n    data, \n    mock=false, \n    handler) => {\n    /* API fetching, embedded error handling */\n\n    if (mock === true) {\n        return data\n    }\n\n    const response = await api({\n        method,\n        url,\n        headers,\n        data,\n    })\n\n    if (response.data.error) {\n        handler()\n        return response.data.error\n    }\n\n    return response.data\n}\n\nexport default api;\n"]},"metadata":{},"sourceType":"module"}